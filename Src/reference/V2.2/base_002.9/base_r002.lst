
base_r002.elf:     file format elf32-msp430

SYMBOL TABLE:
00001100 l    d  .text	00000000 
00000200 l    d  .data	00000000 
00000c00 l    d  .bootloader	00000000 
00001000 l    d  .infomem	00000000 
00001000 l    d  .infomemnobits	00000000 
00000264 l    d  .bss	00000000 
000007d4 l    d  .noinit	00000000 
0000ffe0 l    d  .vectors	00000000 
00000000 l    d  .stab	00000000 
00000000 l    d  .stabstr	00000000 
00000000 l    d  *ABS*	00000000 
00000000 l    d  *ABS*	00000000 
00000000 l    d  *ABS*	00000000 
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000000 l    df *ABS*	00000000 <command line>
00000000 l    df *ABS*	00000000 <built-in>
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000000 l    df *ABS*	00000000 gcrt0.S
00000000 l    df *ABS*	00000000 gcrt0.S
00000000 l    df *ABS*	00000000 <command line>
00000000 l    df *ABS*	00000000 <built-in>
00000000 l    df *ABS*	00000000 gcrt0.S
00000130 l       *ABS*	00000000 MPY
00000132 l       *ABS*	00000000 MPYS
00000134 l       *ABS*	00000000 MAC
00000136 l       *ABS*	00000000 MACS
00000138 l       *ABS*	00000000 OP2
0000013a l       *ABS*	00000000 RESLO
0000013c l       *ABS*	00000000 RESHI
0000013e l       *ABS*	00000000 SUMEXT
00000020 l       *ABS*	00000000 P1IN
00000021 l       *ABS*	00000000 P1OUT
00000022 l       *ABS*	00000000 P1DIR
00000023 l       *ABS*	00000000 P1IFG
00000024 l       *ABS*	00000000 P1IES
00000025 l       *ABS*	00000000 P1IE
00000026 l       *ABS*	00000000 P1SEL
00000028 l       *ABS*	00000000 P2IN
00000029 l       *ABS*	00000000 P2OUT
0000002a l       *ABS*	00000000 P2DIR
0000002b l       *ABS*	00000000 P2IFG
0000002c l       *ABS*	00000000 P2IES
0000002d l       *ABS*	00000000 P2IE
0000002e l       *ABS*	00000000 P2SEL
00000018 l       *ABS*	00000000 P3IN
00000019 l       *ABS*	00000000 P3OUT
0000001a l       *ABS*	00000000 P3DIR
0000001b l       *ABS*	00000000 P3SEL
0000001c l       *ABS*	00000000 P4IN
0000001d l       *ABS*	00000000 P4OUT
0000001e l       *ABS*	00000000 P4DIR
0000001f l       *ABS*	00000000 P4SEL
00000030 l       *ABS*	00000000 P5IN
00000031 l       *ABS*	00000000 P5OUT
00000032 l       *ABS*	00000000 P5DIR
00000033 l       *ABS*	00000000 P5SEL
00000034 l       *ABS*	00000000 P6IN
00000035 l       *ABS*	00000000 P6OUT
00000036 l       *ABS*	00000000 P6DIR
00000037 l       *ABS*	00000000 P6SEL
00000070 l       *ABS*	00000000 U0CTL
00000071 l       *ABS*	00000000 U0TCTL
00000072 l       *ABS*	00000000 U0RCTL
00000073 l       *ABS*	00000000 U0MCTL
00000074 l       *ABS*	00000000 U0BR0
00000075 l       *ABS*	00000000 U0BR1
00000076 l       *ABS*	00000000 U0RXBUF
00000077 l       *ABS*	00000000 U0TXBUF
00000070 l       *ABS*	00000000 UCTL
00000071 l       *ABS*	00000000 UTCTL
00000072 l       *ABS*	00000000 URCTL
00000073 l       *ABS*	00000000 UMCTL
00000074 l       *ABS*	00000000 UBR0
00000075 l       *ABS*	00000000 UBR1
00000076 l       *ABS*	00000000 RXBUF
00000077 l       *ABS*	00000000 TXBUF
00000070 l       *ABS*	00000000 UCTL0
00000071 l       *ABS*	00000000 UTCTL0
00000072 l       *ABS*	00000000 URCTL0
00000073 l       *ABS*	00000000 UMCTL0
00000074 l       *ABS*	00000000 UBR00
00000075 l       *ABS*	00000000 UBR10
00000076 l       *ABS*	00000000 RXBUF0
00000077 l       *ABS*	00000000 TXBUF0
00000070 l       *ABS*	00000000 UCTL_0
00000071 l       *ABS*	00000000 UTCTL_0
00000072 l       *ABS*	00000000 URCTL_0
00000073 l       *ABS*	00000000 UMCTL_0
00000074 l       *ABS*	00000000 UBR0_0
00000075 l       *ABS*	00000000 UBR1_0
00000076 l       *ABS*	00000000 RXBUF_0
00000077 l       *ABS*	00000000 TXBUF_0
00000071 l       *ABS*	00000000 I2CTCTL
00000072 l       *ABS*	00000000 I2CDCTL
00000073 l       *ABS*	00000000 I2CPSC
00000074 l       *ABS*	00000000 I2CSCLH
00000075 l       *ABS*	00000000 I2CSCLL
00000076 l       *ABS*	00000000 I2CDR
00000050 l       *ABS*	00000000 I2CIE
00000051 l       *ABS*	00000000 I2CIFG
00000052 l       *ABS*	00000000 I2CNDAT
00000118 l       *ABS*	00000000 I2COA
0000011a l       *ABS*	00000000 I2CSA
0000011c l       *ABS*	00000000 I2CIV
00000078 l       *ABS*	00000000 U1CTL
00000079 l       *ABS*	00000000 U1TCTL
0000007a l       *ABS*	00000000 U1RCTL
0000007b l       *ABS*	00000000 U1MCTL
0000007c l       *ABS*	00000000 U1BR0
0000007d l       *ABS*	00000000 U1BR1
0000007e l       *ABS*	00000000 U1RXBUF
0000007f l       *ABS*	00000000 U1TXBUF
00000078 l       *ABS*	00000000 UCTL1
00000079 l       *ABS*	00000000 UTCTL1
0000007a l       *ABS*	00000000 URCTL1
0000007b l       *ABS*	00000000 UMCTL1
0000007c l       *ABS*	00000000 UBR01
0000007d l       *ABS*	00000000 UBR11
0000007e l       *ABS*	00000000 RXBUF1
0000007f l       *ABS*	00000000 TXBUF1
00000078 l       *ABS*	00000000 UCTL_1
00000079 l       *ABS*	00000000 UTCTL_1
0000007a l       *ABS*	00000000 URCTL_1
0000007b l       *ABS*	00000000 UMCTL_1
0000007c l       *ABS*	00000000 UBR0_1
0000007d l       *ABS*	00000000 UBR1_1
0000007e l       *ABS*	00000000 RXBUF_1
0000007f l       *ABS*	00000000 TXBUF_1
00000055 l       *ABS*	00000000 SVSCTL
00000128 l       *ABS*	00000000 FCTL1
0000012a l       *ABS*	00000000 FCTL2
0000012c l       *ABS*	00000000 FCTL3
00000059 l       *ABS*	00000000 CACTL1
0000005a l       *ABS*	00000000 CACTL2
0000005b l       *ABS*	00000000 CAPD
0000012e l       *ABS*	00000000 TAIV
00000160 l       *ABS*	00000000 TACTL
00000162 l       *ABS*	00000000 TACCTL0
00000164 l       *ABS*	00000000 TACCTL1
00000166 l       *ABS*	00000000 TACCTL2
00000170 l       *ABS*	00000000 TAR
00000172 l       *ABS*	00000000 TACCR0
00000174 l       *ABS*	00000000 TACCR1
00000176 l       *ABS*	00000000 TACCR2
00000162 l       *ABS*	00000000 CCTL0
00000164 l       *ABS*	00000000 CCTL1
00000166 l       *ABS*	00000000 CCTL2
00000172 l       *ABS*	00000000 CCR0
00000174 l       *ABS*	00000000 CCR1
00000176 l       *ABS*	00000000 CCR2
0000011e l       *ABS*	00000000 TBIV
00000180 l       *ABS*	00000000 TBCTL
00000182 l       *ABS*	00000000 TBCCTL0
00000184 l       *ABS*	00000000 TBCCTL1
00000186 l       *ABS*	00000000 TBCCTL2
00000190 l       *ABS*	00000000 TBR
00000192 l       *ABS*	00000000 TBCCR0
00000194 l       *ABS*	00000000 TBCCR1
00000196 l       *ABS*	00000000 TBCCR2
00000188 l       *ABS*	00000000 TBCCTL3
0000018a l       *ABS*	00000000 TBCCTL4
0000018c l       *ABS*	00000000 TBCCTL5
0000018e l       *ABS*	00000000 TBCCTL6
00000198 l       *ABS*	00000000 TBCCR3
0000019a l       *ABS*	00000000 TBCCR4
0000019c l       *ABS*	00000000 TBCCR5
0000019e l       *ABS*	00000000 TBCCR6
00000056 l       *ABS*	00000000 DCOCTL
00000057 l       *ABS*	00000000 BCSCTL1
00000058 l       *ABS*	00000000 BCSCTL2
000001a0 l       *ABS*	00000000 ADC12CTL0
000001a2 l       *ABS*	00000000 ADC12CTL1
000001a4 l       *ABS*	00000000 ADC12IFG
000001a6 l       *ABS*	00000000 ADC12IE
000001a8 l       *ABS*	00000000 ADC12IV
00000140 l       *ABS*	00000000 ADC12MEM0
00000142 l       *ABS*	00000000 ADC12MEM1
00000144 l       *ABS*	00000000 ADC12MEM2
00000146 l       *ABS*	00000000 ADC12MEM3
00000148 l       *ABS*	00000000 ADC12MEM4
0000014a l       *ABS*	00000000 ADC12MEM5
0000014c l       *ABS*	00000000 ADC12MEM6
0000014e l       *ABS*	00000000 ADC12MEM7
00000150 l       *ABS*	00000000 ADC12MEM8
00000152 l       *ABS*	00000000 ADC12MEM9
00000154 l       *ABS*	00000000 ADC12MEM10
00000156 l       *ABS*	00000000 ADC12MEM11
00000158 l       *ABS*	00000000 ADC12MEM12
0000015a l       *ABS*	00000000 ADC12MEM13
0000015c l       *ABS*	00000000 ADC12MEM14
0000015e l       *ABS*	00000000 ADC12MEM15
00000080 l       *ABS*	00000000 ADC12MCTL0
00000081 l       *ABS*	00000000 ADC12MCTL1
00000082 l       *ABS*	00000000 ADC12MCTL2
00000083 l       *ABS*	00000000 ADC12MCTL3
00000084 l       *ABS*	00000000 ADC12MCTL4
00000085 l       *ABS*	00000000 ADC12MCTL5
00000086 l       *ABS*	00000000 ADC12MCTL6
00000087 l       *ABS*	00000000 ADC12MCTL7
00000088 l       *ABS*	00000000 ADC12MCTL8
00000089 l       *ABS*	00000000 ADC12MCTL9
0000008a l       *ABS*	00000000 ADC12MCTL10
0000008b l       *ABS*	00000000 ADC12MCTL11
0000008c l       *ABS*	00000000 ADC12MCTL12
0000008d l       *ABS*	00000000 ADC12MCTL13
0000008e l       *ABS*	00000000 ADC12MCTL14
0000008f l       *ABS*	00000000 ADC12MCTL15
000001c0 l       *ABS*	00000000 DAC12_0CTL
000001c2 l       *ABS*	00000000 DAC12_1CTL
000001c8 l       *ABS*	00000000 DAC12_0DAT
000001ca l       *ABS*	00000000 DAC12_1DAT
00000122 l       *ABS*	00000000 DMACTL0
00000124 l       *ABS*	00000000 DMACTL1
000001e0 l       *ABS*	00000000 DMA0CTL
000001e2 l       *ABS*	00000000 DMA0SA
000001e4 l       *ABS*	00000000 DMA0DA
000001e6 l       *ABS*	00000000 DMA0SZ
000001e8 l       *ABS*	00000000 DMA1CTL
000001ea l       *ABS*	00000000 DMA1SA
000001ec l       *ABS*	00000000 DMA1DA
000001ee l       *ABS*	00000000 DMA1SZ
000001f0 l       *ABS*	00000000 DMA2CTL
000001f2 l       *ABS*	00000000 DMA2SA
000001f4 l       *ABS*	00000000 DMA2DA
000001f6 l       *ABS*	00000000 DMA2SZ
00000120 l       *ABS*	00000000 WDTCTL
00000000 l       *ABS*	00000000 IE1
00000002 l       *ABS*	00000000 IFG1
00000001 l       *ABS*	00000000 IE2
00000003 l       *ABS*	00000000 IFG2
00000004 l       *ABS*	00000000 ME1
00000005 l       *ABS*	00000000 ME2
00000000 l    df *ABS*	00000000 main.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
000013f8 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 ueaclib.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00000200 l     O .data	00000001 counter.0
00000202 l     O .data	00000004 led_state.1
00000206 l     O .data	00000004 lla_state.2
00001a76 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 calibrate.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
000020e4 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 external_flash.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
0000247e l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 ueac.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00002b90 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 interpreter.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
000030c6 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 filter.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00003214 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 timer.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
0000020a l     O .data	00000002 chan_last.0
0000020c l     O .data	00000002 chan_next.1
0000020e l     O .data	00000001 state.2
000033c2 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 conversion.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
000054c4 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 global.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
000055ea l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 lla.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
0000022a l     O .data	00000001 count.0
00005aa0 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 lla_function_definition.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00008506 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000000 l    df *ABS*	00000000 <command line>
00000000 l    df *ABS*	00000000 <built-in>
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000000 l    df *ABS*	00000000 <command line>
00000000 l    df *ABS*	00000000 <built-in>
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000000 l    df *ABS*	00000000 <command line>
00000000 l    df *ABS*	00000000 <built-in>
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000000 l    df *ABS*	00000000 strtol.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00008722 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 printf.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00008734 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 vuprintf.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00000262 l     O .data	00000002 total_len
00008734 l     F .text	00000030 PRINT
00000264 l     O .bss	00000002 __write_char
00008764 l     F .text	00000034 __write_pad
00008d58 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 puts.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00008d86 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 strchr.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00008da0 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 memchr.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00008dc4 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 strcasecmp.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00008e32 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 strncasecmp.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00008eb0 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 strtok.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00000266 l     O .bss	00000002 last.0
00008f34 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 errno.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00008f34 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000000 l    df *ABS*	00000000 <command line>
00000000 l    df *ABS*	00000000 <built-in>
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00002b99 g     O .text	00000005 CAL
00001514 g     F .text	00000012 putchar
000022a2 g     F .text	00000006 end_main_array_read
0000026c g     O .bss	000003b6 pin_data
00008eb0 g     F .text	0000007a strtok_r
00008722 g     F .text	00000012 printf
00001610 g     F .text	00000050 write_current
00006be6 g     O .text	00000192 f12
00007552 g     O .text	00000192 f18
00001836 g     F .text	00000014 clear_led_screen
00002b22 g     F .text	0000006e report_instruction
000020ac g     F .text	0000000c current_input_calibration
000007d2 g     O .bss	00000002 errno
00008fd4 g       .text	00000000 _etext
00002aa2 g     F .text	00000036 lla_input_check
00001a9a g     F .text	0000016a scan_leds
00008f34  w      .text	00000000 __stop_progExec__
0000113a g       .text	00000000 _unexpected_1_
0000184a g     F .text	00000112 write_led
0000113a  w      .text	00000000 vector_ffe0
00002c0c g     F .text	000004ba interpreter
00008d58 g     F .text	0000002e puts
0000237a g     F .text	00000040 buffer1_write
00001da0 g     F .text	000002ee current_output_calibration
000033ac g     F .text	00000016 delay_1_25mS
000076e4 g     O .text	00000192 f19
00005742 g     F .text	0000006a lla_enable
000015de g     F .text	00000006 stop_a2d_converter
00002bac g     F .text	0000002e delspace
00000622 g     O .bss	00000064 command
0000022c g     O .data	00000036 lla_function_index
00007876 g     O .text	00000192 f20
000056e0 g     F .text	00000062 lla_disable
00003214 g       .text	00000000 vector_ffec
0000709c g     O .text	00000192 f15
000031ee g     F .text	00000026 initialize_channel_structure
0000113a  w      .text	00000000 vector_fff0
00002b94 g     O .text	00000005 RST
000033c2 g     O .text	00002000 a2d_i_conversion
0000640c g     O .text	00000192 f7
0000113a g       .text	00000000 __dtors_end
00008e32 g     F .text	0000007e strncasecmp
0000143a g     F .text	00000010 clear_latches
000007d4 g       .bss	00000000 __bss_end
0000113a  w      .text	00000000 vector_fffc
000060e8 g     O .text	00000192 f5
00002b9e g     O .text	00000005 LON
000015b0 g     F .text	00000026 init_a2d
00007b9a g     O .text	00000192 f22
00008506 g     F .text	0000021c strtol
0000113a  w      .text	00000000 vector_ffe4
00002244 g     F .text	0000005e start_main_array_read
000015f8 g     F .text	00000018 write_analog_mux
00006f0a g     O .text	00000192 f14
000012f0 g     F .text	00000074 print_grid_v
000023ba g     F .text	00000040 buffer2_write
000053c2 g     F .text	00000102 convert_a2d
0000722e g     O .text	00000192 f16
0000ffe0 g     O .vectors	00000020 InterruptVectors
0000243c g     F .text	00000042 buffer2_read
00005dc4 g     O .text	00000192 f3
00001214 g     F .text	00000096 scan_probes
00001660 g     F .text	00000078 write_dac
00008fac g       .text	00000000 __umulsi3hw
00008da0 g     F .text	00000024 memchr
0000158c g     F .text	00000014 init_timer_a
00005c32 g     O .text	00000192 f2
000057ac g     F .text	0000015e evaluate_lla
00001536 g     F .text	00000056 init_pins
000059d0 g     F .text	000000d0 lla_print_active
000055ea g     F .text	0000002a lla_report
00002ba3 g     O .text	00000005 LOF
0000113a  w      .text	00000000 vector_ffe2
000073c0 g     O .text	00000192 f17
00008dc4 g     F .text	0000006e strcasecmp
0000113a  w      .text	00000000 vector_ffe8
0000113e  w      .text	00000000 _unexpected_
00000686 g     O .bss	00000146 ueac_state
0000113a  w      .text	00000000 vector_fffa
00008f2a g     F .text	0000000a strtok
00008798 g     F .text	000005c0 vuprintf
000022a8 g     F .text	0000003c page_to_buffer1_compare
0000235c g     F .text	0000001e poll_status_register_blocking
00001100 g       .text	00000000 _reset_vector__
0000113a g       .text	00000000 __ctors_start
00003214 g     F .text	00000198 timer_a0_irq
000014aa g     F .text	00000028 init_spi_0
00000264 g       .bss	00000000 __bss_start
0000113a  w      .text	00000000 vector_ffee
000015d6 g     F .text	00000008 start_a2d_converter
00002ba8 g     O .text	00000002 GRID_NUM_MIN
0000113a  w      .text	00000000 vector_fff4
00001178 g     F .text	00000094 main
0000113a  w      .text	00000000 vector_fff8
000030c6 g     F .text	00000070 update_a2d_data
0000113a  w      .text	00000000 vector_fff2
00001526 g     F .text	00000010 getchar
00002b92 g     O .text	00000002 TERMINATOR
0000144a g     F .text	00000060 Set_DCO
00002baa g     O .text	00000002 GRID_NUM_MAX
00010000 g       .vectors	00000000 _vectors_end
0000659e g     O .text	00000192 f8
00007a08 g     O .text	00000192 f21
00002320 g     F .text	0000003c buffer2_to_page_e
00006a54 g     O .text	00000192 f11
00008374 g     O .text	00000192 f27
0000113a  w      .text	00000000 vector_ffe6
000054f2 g     F .text	000000e6 init_ueac_state_structure
00000211 g     O .data	00000019 high_time_limit
00007ebe g     O .text	00000192 f24
00002b90 g     O .text	00000002 DELIMITER
000012aa g     F .text	0000003e get_command
00000210 g     O .data	00000001 led_screen_enable
00006d78 g     O .text	00000192 f13
000020d8 g     F .text	0000000c voltage_input_calibration
000016d8 g     F .text	0000015e led_pwm
00006730 g     O .text	00000192 f9
000014e4 g     F .text	00000030 init_serial_1
00007d2c g     O .text	00000192 f23
0000113a g       .text	00000000 __dtors_start
0000113a g       .text	00000000 __ctors_end
00008f38 g       .text	00000000 __divmodsi4
00000a00 g       *ABS*	00000000 __stack
00005f56 g     O .text	00000192 f4
000054c4 g     F .text	0000002e init_pin_data_structure
00005aa0 g     O .text	00000192 f1
00000264 g       .data	00000000 _edata
00008050 g     O .text	00000192 f25
000007d4 g       .noinit	00000000 _end
00001364 g     F .text	00000094 print_grid_i
000015e4 g     F .text	00000014 wait_a2d_busy
000068c2 g     O .text	00000192 f10
000015a0 g     F .text	00000010 init_dac
000007cc g     O .bss	00000002 timer_tick
000023fa g     F .text	00000042 buffer1_read
00008f82 g       .text	00000000 __udivmodsi4
0000247e g     O .text	00000322 dac_translation
000027d2 g     F .text	000002d0 ueac_execute_instruction
0000113a  w      .text	00000000 vector_fff6
00003174 g     F .text	0000007a report_channel_structure
000014d2 g     F .text	00000012 send_spi_byte
00008d86 g     F .text	0000001a strchr
000013f8 g     F .text	00000030 init_sys
00000200 g       .data	00000000 __data_start
00002152 g     F .text	000000f2 flash_integrity_test
000081e2 g     O .text	00000192 f26
000022e4 g     F .text	0000003c buffer1_to_page_e
0000113a  w      .text	00000000 vector_ffea
000007ce g     O .bss	00000004 conversion_result
000055d8 g     F .text	00000012 init_global_variables
00000268 g     O .bss	00000004 lla_data
0000195c g     F .text	0000011a write_lla
00005614 g     F .text	000000cc lla_add
00001428 g     F .text	00000012 system_reset
0000627a g     O .text	00000192 f6


Disassembly of section .text:

00001100 <_reset_vector__>:
    1100:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
    1104:	20 01 
    1106:	3f 40 d4 8f 	mov	#-28716,r15	;#0x8fd4
    110a:	3e 40 00 02 	mov	#512,	r14	;#0x0200
    110e:	3d 40 64 02 	mov	#612,	r13	;#0x0264
    1112:	0d 9e       	cmp	r14,	r13	;
    1114:	05 24       	jz	$+12     	;abs 0x1120
    1116:	fe 4f 00 00 	mov.b	@r15+,	0(r14)	;
    111a:	1e 53       	inc	r14		;
    111c:	0e 9d       	cmp	r13,	r14	;
    111e:	fb 2b       	jnc	$-8      	;abs 0x1116
    1120:	3f 40 64 02 	mov	#612,	r15	;#0x0264
    1124:	3d 40 d4 07 	mov	#2004,	r13	;#0x07d4
    1128:	0d 9f       	cmp	r15,	r13	;
    112a:	05 24       	jz	$+12     	;abs 0x1136
    112c:	cf 43 00 00 	mov.b	#0,	0(r15)	;r3 As==00
    1130:	1f 53       	inc	r15		;
    1132:	0f 9d       	cmp	r13,	r15	;
    1134:	fb 2b       	jnc	$-8      	;abs 0x112c
    1136:	30 40 78 11 	br	#0x1178		;

0000113a <__ctors_end>:
    113a:	30 40 3e 11 	br	#0x113e		;

0000113e <_unexpected_>:
    113e:	00 13       	reti			
    1140:	1b 5b 34 37 	add	14132(r11),r11	;
    1144:	6d 00       	.word	0x006d;	????
    1146:	1b 5b 32 4a 	add	18994(r11),r11	;
    114a:	00 55       	add	r5,	r0	;
    114c:	45 41       	mov.b	r1,	r5	;
    114e:	43 20       	jnz	$+136    	;abs 0x11d6
    1150:	50 4f 53 54 	br	21587(r15)		;
    1154:	0a 0d       	.word	0x0d0a;	????
    1156:	00 75       	subc	r5,	r0	;
    1158:	45 41       	mov.b	r1,	r5	;
    115a:	43 6f       	.word	0x6f43;	????
    115c:	73 20       	jnz	$+232    	;abs 0x1244
    115e:	56 32       	jn	$-850    	;abs 0xe0c
    1160:	2e 32       	jn	$-930    	;abs 0xdbe
    1162:	20 62       	addc	#4,	r0	;r2 As==10
    1164:	61 73       	subc.b	#2,	r1	;r3 As==10
    1166:	65 5f       	add.b	@r15,	r5	;
    1168:	30 30       	jn	$+98     	;abs 0x11ca
    116a:	32 2e       	jc	$-922    	;abs 0xdd0
    116c:	39 0a       	.word	0x0a39;	????
    116e:	0d 00       	.word	0x000d;	????
    1170:	75 65       	addc.b	@r5+,	r5	;
    1172:	61 63       	addc.b	#2,	r1	;r3 As==10
    1174:	3e 20       	jnz	$+126    	;abs 0x11f2
	...

00001178 <main>:
void print_grid_i();
int get_command(char *command_buf);
extern short dac_translation[];

int main(void) {
    1178:	31 40 00 0a 	mov	#2560,	r1	;#0x0a00
  int i;
  init_sys();                        // setup the MSP430 peripherals
    117c:	b0 12 f8 13 	call	#5112		;#0x13f8
  printf(BACK_WHITE);
    1180:	30 12 40 11 	push	#4416		;#0x1140
    1184:	b0 12 22 87 	call	#-30942	;#0x8722
  printf(CLR);
    1188:	30 12 46 11 	push	#4422		;#0x1146
    118c:	b0 12 22 87 	call	#-30942	;#0x8722
  printf("UEAC POST\n\r");
    1190:	30 12 4b 11 	push	#4427		;#0x114b
    1194:	b0 12 22 87 	call	#-30942	;#0x8722
  flash_integrity_test();
    1198:	b0 12 52 21 	call	#8530		;#0x2152
  scan_leds();
    119c:	b0 12 9a 1a 	call	#6810		;#0x1a9a
  init_global_variables();
    11a0:	b0 12 d8 55 	call	#21976		;#0x55d8
  for (i=0;i<25;i++) {
    11a4:	0b 43       	clr	r11		;
    11a6:	31 50 06 00 	add	#6,	r1	;#0x0006
    write_lla(i,0);
    11aa:	0e 43       	clr	r14		;
    11ac:	0f 4b       	mov	r11,	r15	;
    11ae:	b0 12 5c 19 	call	#6492		;#0x195c
    write_led(i,0);
    11b2:	0e 43       	clr	r14		;
    11b4:	0f 4b       	mov	r11,	r15	;
    11b6:	b0 12 4a 18 	call	#6218		;#0x184a
    write_current(i,0);
    11ba:	0e 43       	clr	r14		;
    11bc:	0f 4b       	mov	r11,	r15	;
    11be:	b0 12 10 16 	call	#5648		;#0x1610
    11c2:	1b 53       	inc	r11		;
    11c4:	3b 90 19 00 	cmp	#25,	r11	;#0x0019
    11c8:	f0 3b       	jl	$-30     	;abs 0x11aa
  }
  delay_1_25mS(800);     
    11ca:	3f 40 20 03 	mov	#800,	r15	;#0x0320
    11ce:	b0 12 ac 33 	call	#13228		;#0x33ac
  printf(CLR);
    11d2:	30 12 46 11 	push	#4422		;#0x1146
    11d6:	b0 12 22 87 	call	#-30942	;#0x8722
  printf("uEACos V2.2 base_002.9\n\r");
    11da:	30 12 57 11 	push	#4439		;#0x1157
    11de:	b0 12 22 87 	call	#-30942	;#0x8722
  led_screen_enable=1;
    11e2:	d2 43 10 02 	mov.b	#1,	&0x0210	;r3 As==01
  while(1) {
    11e6:	21 52       	add	#4,	r1	;r2 As==10
    printf("ueac> ");
    11e8:	30 12 70 11 	push	#4464		;#0x1170
    11ec:	b0 12 22 87 	call	#-30942	;#0x8722
    get_command(command);
    11f0:	3f 40 22 06 	mov	#1570,	r15	;#0x0622
    11f4:	b0 12 aa 12 	call	#4778		;#0x12aa
    interpreter(command,&ueac_state);
    11f8:	3e 40 86 06 	mov	#1670,	r14	;#0x0686
    11fc:	3f 40 22 06 	mov	#1570,	r15	;#0x0622
    1200:	b0 12 0c 2c 	call	#11276		;#0x2c0c
    1204:	21 53       	incd	r1		;
    1206:	f0 3f       	jmp	$-30     	;abs 0x11e8
  }
}
    1208:	30 40 34 8f 	br	#0x8f34		;
    120c:	25 64       	addc	@r4,	r5	;
    120e:	20 00       	.word	0x0020;	????
    1210:	0a 0d       	.word	0x0d0a;	????
	...

00001214 <scan_probes>:

void scan_probes() {
    1214:	0b 12       	push	r11		;
    1216:	0a 12       	push	r10		;
    1218:	09 12       	push	r9		;
    121a:	08 12       	push	r8		;
  int i,j;
  for (i=0;i<25;i++) {
    121c:	08 43       	clr	r8		;
    write_lla(i,1);
    121e:	1e 43       	mov	#1,	r14	;r3 As==01
    1220:	0f 48       	mov	r8,	r15	;
    1222:	b0 12 5c 19 	call	#6492		;#0x195c
    printf("%d ",i);
    1226:	08 12       	push	r8		;
    1228:	30 12 0c 12 	push	#4620		;#0x120c
    122c:	b0 12 22 87 	call	#-30942	;#0x8722
    for (j=200;j>=0;j-=50) {
    1230:	39 40 c8 00 	mov	#200,	r9	;#0x00c8
    1234:	21 52       	add	#4,	r1	;r2 As==10
    1236:	0a 48       	mov	r8,	r10	;
    1238:	0a 5a       	rla	r10		;
    123a:	0b 4a       	mov	r10,	r11	;
      write_current(i,j);
    123c:	0e 49       	mov	r9,	r14	;
    123e:	0f 48       	mov	r8,	r15	;
    1240:	b0 12 10 16 	call	#5648		;#0x1610
      delay_1_25mS(400);     
    1244:	3f 40 90 01 	mov	#400,	r15	;#0x0190
    1248:	b0 12 ac 33 	call	#13228		;#0x33ac
      convert_a2d(I_CONVERSION,pin_data[i].filtered_result,&conversion_result,i);
    124c:	0f 4a       	mov	r10,	r15	;
    124e:	0f 5f       	rla	r15		;
    1250:	0f 5f       	rla	r15		;
    1252:	0f 5f       	rla	r15		;
    1254:	0f 5f       	rla	r15		;
    1256:	0a 4b       	mov	r11,	r10	;
    1258:	0f 5b       	add	r11,	r15	;
    125a:	0f 5b       	add	r11,	r15	;
    125c:	0f 5b       	add	r11,	r15	;
    125e:	0c 48       	mov	r8,	r12	;
    1260:	3d 40 ce 07 	mov	#1998,	r13	;#0x07ce
    1264:	1e 4f 90 02 	mov	656(r15),r14	;
    1268:	5f 43       	mov.b	#1,	r15	;r3 As==01
    126a:	b0 12 c2 53 	call	#21442		;#0x53c2
      printf("%d ",conversion_result.integer);
    126e:	12 12 ce 07 	push	&0x07ce		;
    1272:	30 12 0c 12 	push	#4620		;#0x120c
    1276:	b0 12 22 87 	call	#-30942	;#0x8722
    127a:	21 52       	add	#4,	r1	;r2 As==10
    127c:	39 50 ce ff 	add	#-50,	r9	;#0xffce
    1280:	39 b0 00 80 	bit	#-32768,r9	;#0x8000
    1284:	db 37       	jge	$-72     	;abs 0x123c
    }
    printf("\n\r");
    1286:	30 12 10 12 	push	#4624		;#0x1210
    128a:	b0 12 22 87 	call	#-30942	;#0x8722
    write_lla(i,0);
    128e:	0e 43       	clr	r14		;
    1290:	0f 48       	mov	r8,	r15	;
    1292:	b0 12 5c 19 	call	#6492		;#0x195c
    1296:	21 53       	incd	r1		;
    1298:	18 53       	inc	r8		;
    129a:	38 90 19 00 	cmp	#25,	r8	;#0x0019
    129e:	bf 3b       	jl	$-128    	;abs 0x121e
  }
}
    12a0:	38 41       	pop	r8		;
    12a2:	39 41       	pop	r9		;
    12a4:	3a 41       	pop	r10		;
    12a6:	3b 41       	pop	r11		;
    12a8:	30 41       	ret			

000012aa <get_command>:

int get_command(char *command_buf) {
    12aa:	0b 12       	push	r11		;
    12ac:	0a 12       	push	r10		;
    12ae:	0b 4f       	mov	r15,	r11	;
  char ch;
  int counter=0;
    12b0:	0a 43       	clr	r10		;
  while(((ch=getchar())!='\n')&&(ch!='\r')&&(counter++<100)) {
    12b2:	b0 12 26 15 	call	#5414		;#0x1526
    12b6:	4e 4f       	mov.b	r15,	r14	;
    12b8:	7f 90 0a 00 	cmp.b	#10,	r15	;#0x000a
    12bc:	0c 24       	jz	$+26     	;abs 0x12d6
    12be:	7f 90 0d 00 	cmp.b	#13,	r15	;#0x000d
    12c2:	09 24       	jz	$+20     	;abs 0x12d6
    12c4:	0f 4a       	mov	r10,	r15	;
    12c6:	1a 53       	inc	r10		;
    12c8:	3f 90 64 00 	cmp	#100,	r15	;#0x0064
    12cc:	04 34       	jge	$+10     	;abs 0x12d6
    *command_buf++=ch;
    12ce:	cb 4e 00 00 	mov.b	r14,	0(r11)	;
    12d2:	1b 53       	inc	r11		;
    12d4:	ee 3f       	jmp	$-34     	;abs 0x12b2
  }
  *command_buf++='\n';
    12d6:	fb 40 0a 00 	mov.b	#10,	0(r11)	;#0x000a
    12da:	00 00 
  *command_buf=0;
    12dc:	cb 43 01 00 	mov.b	#0,	1(r11)	;r3 As==00
  return (counter);
}     
    12e0:	0f 4a       	mov	r10,	r15	;
    12e2:	3a 41       	pop	r10		;
    12e4:	3b 41       	pop	r11		;
    12e6:	30 41       	ret			
    12e8:	25 64       	addc	@r4,	r5	;
    12ea:	2e 25       	jz	$+606    	;abs 0x1548
    12ec:	64 20       	jnz	$+202    	;abs 0x13b6
	...

000012f0 <print_grid_v>:

void print_grid_v() {
    12f0:	0b 12       	push	r11		;
    12f2:	0a 12       	push	r10		;
    12f4:	09 12       	push	r9		;
  int i,j;
  for (i=0;i<5;i++) {
    12f6:	09 43       	clr	r9		;
    for (j=0;j<5;j++) {
    12f8:	0a 43       	clr	r10		;
    12fa:	0b 49       	mov	r9,	r11	;
    12fc:	0b 5b       	rla	r11		;
    12fe:	0b 59       	add	r9,	r11	;
    1300:	0b 59       	add	r9,	r11	;
    1302:	0b 59       	add	r9,	r11	;
      convert_a2d(V_CONVERSION,pin_data[i*5+j].filtered_result,&conversion_result,i*5+j); 
    1304:	0f 4b       	mov	r11,	r15	;
    1306:	0f 5a       	add	r10,	r15	;
    1308:	0e 4f       	mov	r15,	r14	;
    130a:	0e 5e       	rla	r14		;
    130c:	0e 5e       	rla	r14		;
    130e:	0e 5e       	rla	r14		;
    1310:	0e 5e       	rla	r14		;
    1312:	0e 5e       	rla	r14		;
    1314:	0d 4f       	mov	r15,	r13	;
    1316:	0d 5d       	rla	r13		;
    1318:	0e 5d       	add	r13,	r14	;
    131a:	0e 5d       	add	r13,	r14	;
    131c:	0e 5d       	add	r13,	r14	;
    131e:	0c 4f       	mov	r15,	r12	;
    1320:	3d 40 ce 07 	mov	#1998,	r13	;#0x07ce
    1324:	1e 4e 90 02 	mov	656(r14),r14	;
    1328:	4f 43       	clr.b	r15		;
    132a:	b0 12 c2 53 	call	#21442		;#0x53c2
      printf("%d.%d ",conversion_result.integer,conversion_result.hundredth);
    132e:	12 12 d0 07 	push	&0x07d0		;
    1332:	12 12 ce 07 	push	&0x07ce		;
    1336:	30 12 e8 12 	push	#4840		;#0x12e8
    133a:	b0 12 22 87 	call	#-30942	;#0x8722
    133e:	31 50 06 00 	add	#6,	r1	;#0x0006
    1342:	1a 53       	inc	r10		;
    1344:	3a 90 05 00 	cmp	#5,	r10	;#0x0005
    1348:	dd 3b       	jl	$-68     	;abs 0x1304
    }
    printf("\n\r");
    134a:	30 12 10 12 	push	#4624		;#0x1210
    134e:	b0 12 22 87 	call	#-30942	;#0x8722
    1352:	21 53       	incd	r1		;
    1354:	19 53       	inc	r9		;
    1356:	39 90 05 00 	cmp	#5,	r9	;#0x0005
    135a:	ce 3b       	jl	$-98     	;abs 0x12f8
  }
}
    135c:	39 41       	pop	r9		;
    135e:	3a 41       	pop	r10		;
    1360:	3b 41       	pop	r11		;
    1362:	30 41       	ret			

00001364 <print_grid_i>:

void print_grid_i() {
    1364:	0b 12       	push	r11		;
    1366:	0a 12       	push	r10		;
    1368:	09 12       	push	r9		;
    136a:	08 12       	push	r8		;
  int i,j;
  for (i=0;i<5;i++) {
    136c:	08 43       	clr	r8		;
    for (j=0;j<5;j++) {
    136e:	09 43       	clr	r9		;
    1370:	0a 48       	mov	r8,	r10	;
    1372:	0a 5a       	rla	r10		;
    1374:	0a 58       	add	r8,	r10	;
    1376:	0a 58       	add	r8,	r10	;
    1378:	0a 58       	add	r8,	r10	;
      write_lla(i*5+j,1);
    137a:	0b 4a       	mov	r10,	r11	;
    137c:	0b 59       	add	r9,	r11	;
    137e:	1e 43       	mov	#1,	r14	;r3 As==01
    1380:	0f 4b       	mov	r11,	r15	;
    1382:	b0 12 5c 19 	call	#6492		;#0x195c
      write_current(i*5+j,200);
    1386:	3e 40 c8 00 	mov	#200,	r14	;#0x00c8
    138a:	0f 4b       	mov	r11,	r15	;
    138c:	b0 12 10 16 	call	#5648		;#0x1610
      delay_1_25mS(500);
    1390:	3f 40 f4 01 	mov	#500,	r15	;#0x01f4
    1394:	b0 12 ac 33 	call	#13228		;#0x33ac
      convert_a2d(I_CONVERSION,pin_data[i*5+j].filtered_result,&conversion_result,i*5+j); 
    1398:	0f 4b       	mov	r11,	r15	;
    139a:	0f 5f       	rla	r15		;
    139c:	0f 5f       	rla	r15		;
    139e:	0f 5f       	rla	r15		;
    13a0:	0f 5f       	rla	r15		;
    13a2:	0f 5f       	rla	r15		;
    13a4:	0e 4b       	mov	r11,	r14	;
    13a6:	0e 5e       	rla	r14		;
    13a8:	0f 5e       	add	r14,	r15	;
    13aa:	0f 5e       	add	r14,	r15	;
    13ac:	0f 5e       	add	r14,	r15	;
    13ae:	0c 4b       	mov	r11,	r12	;
    13b0:	3d 40 ce 07 	mov	#1998,	r13	;#0x07ce
    13b4:	1e 4f 90 02 	mov	656(r15),r14	;
    13b8:	5f 43       	mov.b	#1,	r15	;r3 As==01
    13ba:	b0 12 c2 53 	call	#21442		;#0x53c2
      printf("%d ",conversion_result.integer);
    13be:	12 12 ce 07 	push	&0x07ce		;
    13c2:	30 12 0c 12 	push	#4620		;#0x120c
    13c6:	b0 12 22 87 	call	#-30942	;#0x8722
      write_lla(i*5+j,0);
    13ca:	0e 43       	clr	r14		;
    13cc:	0f 4b       	mov	r11,	r15	;
    13ce:	b0 12 5c 19 	call	#6492		;#0x195c
    13d2:	21 52       	add	#4,	r1	;r2 As==10
    13d4:	19 53       	inc	r9		;
    13d6:	39 90 05 00 	cmp	#5,	r9	;#0x0005
    13da:	cf 3b       	jl	$-96     	;abs 0x137a
    }
    printf("\n\r");
    13dc:	30 12 10 12 	push	#4624		;#0x1210
    13e0:	b0 12 22 87 	call	#-30942	;#0x8722
    13e4:	21 53       	incd	r1		;
    13e6:	18 53       	inc	r8		;
    13e8:	38 90 05 00 	cmp	#5,	r8	;#0x0005
    13ec:	c0 3b       	jl	$-126    	;abs 0x136e
  }
}
    13ee:	38 41       	pop	r8		;
    13f0:	39 41       	pop	r9		;
    13f2:	3a 41       	pop	r10		;
    13f4:	3b 41       	pop	r11		;
    13f6:	30 41       	ret			

000013f8 <init_sys>:


void init_sys(void) {
  unsigned int i;
  WDTCTL = WDTPW + WDTHOLD;    // Stop watchdog
    13f8:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
    13fc:	20 01 
  init_pins();                 // Setup the discrete I/O - important to enable 8Mhz crystal 
    13fe:	b0 12 36 15 	call	#5430		;#0x1536
  for (i = 0xFFFF;i>0;i--);    // Delay for XTAL and oscillator to fire up and settle
    1402:	3f 43       	mov	#-1,	r15	;r3 As==11
    1404:	3f 53       	add	#-1,	r15	;r3 As==11
    1406:	fe 23       	jnz	$-2      	;abs 0x1404
  Set_DCO();                   // calibrate DCO using the 32.768Khz crystal to 3.686400 Mhz  
    1408:	b0 12 4a 14 	call	#5194		;#0x144a
  init_spi_0();
    140c:	b0 12 aa 14 	call	#5290		;#0x14aa
  init_serial_1();             // initialize USB virtual serial port
    1410:	b0 12 e4 14 	call	#5348		;#0x14e4
  init_timer_a();              
    1414:	b0 12 8c 15 	call	#5516		;#0x158c
  init_dac();
    1418:	b0 12 a0 15 	call	#5536		;#0x15a0
  init_a2d();
    141c:	b0 12 b0 15 	call	#5552		;#0x15b0
  clear_latches();
    1420:	b0 12 3a 14 	call	#5178		;#0x143a
  _EINT();                     // Global interrupt enable
    1424:	32 d2       	eint			
}
    1426:	30 41       	ret			

00001428 <system_reset>:

void system_reset(void) {
  _DINT();
    1428:	32 c2       	dint			
  WDTCTL = WDTPW|WDTCNTCL|WDTIS_3;  // start the watchdog, SMCLK ticks until reset 
    142a:	b2 40 0b 5a 	mov	#23051,	&0x0120	;#0x5a0b
    142e:	20 01 
  P4OUT=0x8F;
    1430:	f2 40 8f ff 	mov.b	#-113,	&0x001d	;#0xff8f
    1434:	1d 00 
  while (1);                        // wedge here until the dog resets the core
    1436:	ff 3f       	jmp	$+0      	;abs 0x1436
}
    1438:	30 41       	ret			

0000143a <clear_latches>:

void clear_latches(void) {
  P1OUT=0x00;
    143a:	c2 43 21 00 	mov.b	#0,	&0x0021	;r3 As==00
  P5OUT=0x3F;
    143e:	f2 40 3f 00 	mov.b	#63,	&0x0031	;#0x003f
    1442:	31 00 
  P5OUT=0x00;
    1444:	c2 43 31 00 	mov.b	#0,	&0x0031	;r3 As==00
}
    1448:	30 41       	ret			

0000144a <Set_DCO>:

void Set_DCO (void) { 
  unsigned int Compare, Oldcapture = 0;
    144a:	0e 43       	clr	r14		;
  CCTL0 = 0x0000;                       // this too - see next comment
    144c:	82 43 62 01 	mov	#0,	&0x0162	;r3 As==00
  CCTL1 = 0x0000;                       // see if this fixes the clock cal issue
    1450:	82 43 64 01 	mov	#0,	&0x0164	;r3 As==00
  CCTL2 = 0x0000;
    1454:	82 43 66 01 	mov	#0,	&0x0166	;r3 As==00
  CCTL2 = CCIS0 + CM0 + CAP;            // Define CCR2, CAP, ACLK
    1458:	b2 40 00 51 	mov	#20736,	&0x0166	;#0x5100
    145c:	66 01 
  TACTL = TASSEL1 + TACLR + MC1;        // SMCLK, continous mode
    145e:	b2 40 24 02 	mov	#548,	&0x0160	;#0x0224
    1462:	60 01 
  while (1) {
    while ((CCTL2 & CCIFG) != CCIFG);   // Wait until capture occured!
    1464:	92 b3 66 01 	bit	#1,	&0x0166	;r3 As==01
    1468:	fd 27       	jz	$-4      	;abs 0x1464
    CCTL2 &= ~CCIFG;                    // Capture occured, clear flag
    146a:	92 c3 66 01 	bic	#1,	&0x0166	;r3 As==01
    Compare = CCR2;                     // Get current captured SMCLK
    Compare = Compare - Oldcapture;     // SMCLK difference
    146e:	1f 42 76 01 	mov	&0x0176,r15	;0x0176
    1472:	0f 8e       	sub	r14,	r15	;
    Oldcapture = CCR2;                  // Save current captured SMCLK
    1474:	1e 42 76 01 	mov	&0x0176,r14	;0x0176
    if (DELTA == Compare) {
    1478:	3f 90 84 03 	cmp	#900,	r15	;#0x0384
    147c:	11 24       	jz	$+36     	;abs 0x14a0
      break;                            // if equal, leave "while(1)"
    }
    else if (DELTA < Compare) {         // DCO is too fast, slow it down
    147e:	3f 90 85 03 	cmp	#901,	r15	;#0x0385
    1482:	06 2c       	jc	$+14     	;abs 0x1490
      DCOCTL--;
      if (DCOCTL == 0xFF) {             // Did DCO roll under?
	BCSCTL1--;                      // Select next lower RSEL
      }
    }
    else {                      
      DCOCTL++;
    1484:	d2 53 56 00 	inc.b	&0x0056		;
      if (DCOCTL == 0x00) {             // Did DCO roll over?
    1488:	ed 23       	jnz	$-36     	;abs 0x1464
        BCSCTL1++;                      // Select next higher RSEL
    148a:	d2 53 57 00 	inc.b	&0x0057		;
    148e:	ea 3f       	jmp	$-42     	;abs 0x1464
    1490:	f2 53 56 00 	add.b	#-1,	&0x0056	;r3 As==11
    1494:	f2 93 56 00 	cmp.b	#-1,	&0x0056	;r3 As==11
    1498:	e5 23       	jnz	$-52     	;abs 0x1464
    149a:	f2 53 57 00 	add.b	#-1,	&0x0057	;r3 As==11
    149e:	e2 3f       	jmp	$-58     	;abs 0x1464
      }
    }
  }  
  CCTL2 = 0;                              // Stop CCR2 function
    14a0:	82 43 66 01 	mov	#0,	&0x0166	;r3 As==00
  TACTL = 0;                              // Stop Timer_A
    14a4:	82 43 60 01 	mov	#0,	&0x0160	;r3 As==00
}
    14a8:	30 41       	ret			

000014aa <init_spi_0>:

void init_spi_0 (void) {
  UCTL0 |= SWRST;                // Place USART into RESET 
    14aa:	d2 d3 70 00 	bis.b	#1,	&0x0070	;r3 As==01
  UCTL0  = CHAR|SYNC|MM|SWRST;   // 8-bit,SPI,Master,Hold Module in RESET
    14ae:	f2 40 17 00 	mov.b	#23,	&0x0070	;#0x0017
    14b2:	70 00 
  UTCTL0 = CKPH|SSEL1|SSEL0|STC; // falling edge out,SMCLK,3-pin SPI (Works for LTC Parts)
    14b4:	f2 40 b2 ff 	mov.b	#-78,	&0x0071	;#0xffb2
    14b8:	71 00 
  // UTCTL0 = CKPL|SSEL1|SSEL0|STC; // falling edge out,SMCLK,3-pin SPI (Works for AT parts)
  // LTC1660 DAC can handle a 5Mhz SCLK
  // AT45DB041 Flash can handle 20Mhz SCLK 
  UBR00  = 0x02;                 // Run at SMCLK/2 - 8Mhz/2=4Mhz for normal operation
    14ba:	e2 43 74 00 	mov.b	#2,	&0x0074	;r3 As==10
  UBR10  = 0x00;                 // Upper half of SCLK control 
    14be:	c2 43 75 00 	mov.b	#0,	&0x0075	;r3 As==00
  ME1    = USPIE0;               // Enable the SPI module for UART0
    14c2:	f2 40 40 00 	mov.b	#64,	&0x0004	;#0x0040
    14c6:	04 00 
  UMCTL0 = 0x00;                 // Modulation control not used by SPI set to 0 according to User's Guide
    14c8:	c2 43 73 00 	mov.b	#0,	&0x0073	;r3 As==00
  UCTL0 &= ~SWRST;               // release USART from RESET 
    14cc:	d2 c3 70 00 	bic.b	#1,	&0x0070	;r3 As==01
}
    14d0:	30 41       	ret			

000014d2 <send_spi_byte>:

unsigned char send_spi_byte(unsigned char data_byte) {
  TXBUF0 = data_byte;        // buffer 1 write  
    14d2:	c2 4f 77 00 	mov.b	r15,	&0x0077	;
  while(!(UTCTL0&0x01));     // wait until transmitter empty
    14d6:	d2 b3 71 00 	bit.b	#1,	&0x0071	;r3 As==01
    14da:	fd 27       	jz	$-4      	;abs 0x14d6
  return(RXBUF0);            // return any received data
    14dc:	5f 42 76 00 	mov.b	&0x0076,r15	;0x0076
    14e0:	7f f3       	and.b	#-1,	r15	;r3 As==11
                             // No data returned from DAC
                             // SPI flash returns read data
}
    14e2:	30 41       	ret			

000014e4 <init_serial_1>:

void init_serial_1 (void) {
  char temp;
  // Data Comm Port - Connected to FT2232 Port A
  UCTL1 = CHAR + SWRST;
    14e4:	f2 40 11 00 	mov.b	#17,	&0x0078	;#0x0011
    14e8:	78 00 
  UTCTL1 = SSEL1 + SSEL0;
    14ea:	f2 40 30 00 	mov.b	#48,	&0x0079	;#0x0030
    14ee:	79 00 

  // 19.2k init (3.686400 Mhz Clock)
  UBR01=0xC0; 
    14f0:	f2 40 c0 ff 	mov.b	#-64,	&0x007c	;#0xffc0
    14f4:	7c 00 
  UBR11=0x00;
    14f6:	c2 43 7d 00 	mov.b	#0,	&0x007d	;r3 As==00
  UMCTL1=0x00; 
    14fa:	c2 43 7b 00 	mov.b	#0,	&0x007b	;r3 As==00
  ME2 = 0x30;
    14fe:	f2 40 30 00 	mov.b	#48,	&0x0005	;#0x0030
    1502:	05 00 
  UCTL1 = CHAR;
    1504:	f2 40 10 00 	mov.b	#16,	&0x0078	;#0x0010
    1508:	78 00 
  temp=RXBUF1;  // Flush the RX buffer 
    150a:	5f 42 7e 00 	mov.b	&0x007e,r15	;0x007e
  temp=RXBUF1;  
    150e:	5f 42 7e 00 	mov.b	&0x007e,r15	;0x007e
}
    1512:	30 41       	ret			

00001514 <putchar>:
    
int putchar(int in_char){
    1514:	0e 4f       	mov	r15,	r14	;
  while (!(IFG2&UTXIFG1));
    1516:	f2 b0 20 00 	bit.b	#32,	&0x0003	;#0x0020
    151a:	03 00 
    151c:	fc 27       	jz	$-6      	;abs 0x1516
  TXBUF1=in_char;
    151e:	c2 4e 7f 00 	mov.b	r14,	&0x007f	;
  return(0);
}
    1522:	0f 43       	clr	r15		;
    1524:	30 41       	ret			

00001526 <getchar>:

char getchar(void) {
  char rx_data;
  while (!(IFG2&URXIFG1));
    1526:	f2 b0 10 00 	bit.b	#16,	&0x0003	;#0x0010
    152a:	03 00 
    152c:	fc 27       	jz	$-6      	;abs 0x1526
  rx_data= RXBUF1;
    152e:	5f 42 7e 00 	mov.b	&0x007e,r15	;0x007e
  return (rx_data);
    1532:	8f 11       	sxt	r15		;
}
    1534:	30 41       	ret			

00001536 <init_pins>:

void init_pins(void) {
 /*!
  * <i><b>P1 Usage</b></i> 
  * <table>
  * <tr><th>Pin<th>Function<th>Direction<th>Select
  * <tr><td>P1.0<td>Latch_Data(0)<td>Output<td>Dio  
  * <tr><td>P1.1<td>Latch_Data(1)<td>Output<td>Dio    
  * <tr><td>P1.2<td>Latch_Data(2)<td>Output<td>Dio    
  * <tr><td>P1.3<td>Latch_Data(3)<td>Output<td>Dio    
  * <tr><td>P1.4<td>Latch_Data(4)<td>Output<td>Dio    
  * <tr><td>P1.5<td>Latch_Data(5)<td>Output<td>Dio    
  * <tr><td>P1.6<td>Latch_Data(6)<td>Output<td>Dio    
  * <tr><td>P1.7<td>Latch_Data(7)<td>Output<td>Dio    
  * </table>
  */
  P1SEL = 0x00;
    1536:	c2 43 26 00 	mov.b	#0,	&0x0026	;r3 As==00
  P1OUT = 0x00;
    153a:	c2 43 21 00 	mov.b	#0,	&0x0021	;r3 As==00
  P1DIR = 0xFF;
    153e:	f2 43 22 00 	mov.b	#-1,	&0x0022	;r3 As==11

 /*!
  * <i><b>P2 Usage</b></i> 
  * <table>
  * <tr><th>Pin<th>Function<th>Direction<th>Select
  * <tr><td>P2.0<td>LED_OUT(24)<td>Output<td>Dio    
  * <tr><td>P2.1<td>LLA_ENABLE(24)<td>Output<td>Dio    
  * <tr><td>P2.2<td>BSL(0) FTDI CHB TXD<td>Input<td>Dio  
  * <tr><td>P2.3<td>No Connect<td>Output<td>Dio    
  * <tr><td>P2.4<td>No Connect<td>Output<td>Dio    
  * <tr><td>P2.5<td>100k Pull-up Rosc<td>Input<td>Dio    
  * <tr><td>P2.6<td>No Connect<td>Output<td>Dio    
  * <tr><td>P2.7<td>FTDI nRTS<td>Input<td>Dio    
  * </table>
  */
  P2SEL = 0x00;
    1542:	c2 43 2e 00 	mov.b	#0,	&0x002e	;r3 As==00
  P2OUT = 0x00;
    1546:	c2 43 29 00 	mov.b	#0,	&0x0029	;r3 As==00
  P2DIR = 0x5B;
    154a:	f2 40 5b 00 	mov.b	#91,	&0x002a	;#0x005b
    154e:	2a 00 

 /*!
  * <i><b>P3 Usage</b></i> 
  * <table>
  * <tr><th>Pin<th>Function<th>Direction<th>Select
  * <tr><td>P3.0<td>FTDI nCTS<td>Output<td>Dio
  * <tr><td>P3.1<td>SIMO-0<td>Output<td><b>Sel</b>
  * <tr><td>P3.2<td>SOMI-0<td>Input<td><b>Sel</b>
  * <tr><td>P3.3<td>SCK-0<td>Output<td><b>Sel</b>
  * <tr><td>P3.4<td>UART0 TX<td>Output<td><b>Sel</b>
  * <tr><td>P3.5<td>UART0 RX<td>Input<td><b>Sel</b>
  * <tr><td>P3.6<td>UART1 TX<td>Output<td><b>Sel</b>
  * <tr><td>P3.7<td>UART1 RX<td>Input<td><b>Sel</b>
  * </table>
  */
  P3SEL = 0xFE;
    1550:	f2 40 fe ff 	mov.b	#-2,	&0x001b	;#0xfffe
    1554:	1b 00 
  P3OUT = 0x00;
    1556:	c2 43 19 00 	mov.b	#0,	&0x0019	;r3 As==00
  P3DIR = 0x5B;
    155a:	f2 40 5b 00 	mov.b	#91,	&0x001a	;#0x005b
    155e:	1a 00 

 /*!
  * <i><b>P4 Usage</b></i> 
  * <table>
  * <tr><th>Pin<th>Function<th>Direction<th>Select
  * <tr><td>P4.0<td>SPI nCS DAC CH 0-7<td>Output<td>Dio
  * <tr><td>P4.1<td>SPI nCS DAC CH 8-15<td>Output<td>Dio
  * <tr><td>P4.2<td>SPI nCS DAC CH 16-23<td>Output<td>Dio
  * <tr><td>P4.3<td>SPI nCS Serial Flash<td>Output<td>Dio
  * <tr><td>P4.4<td>Analog Mux Select (0)<td>Output<td>Dio
  * <tr><td>P4.5<td>Analog Mux Select (1)<td>Output<td>Dio
  * <tr><td>P4.6<td>Analog Mux Select (2)<td>Output<td>Dio
  * <tr><td>P4.7<td>8Mhz Osc Enable<td>Output<td>Dio
  * </table>
  */
  P4SEL = 0x00;
    1560:	c2 43 1f 00 	mov.b	#0,	&0x001f	;r3 As==00
  P4OUT = 0x8F;   
    1564:	f2 40 8f ff 	mov.b	#-113,	&0x001d	;#0xff8f
    1568:	1d 00 
  P4DIR = 0xFF; 
    156a:	f2 43 1e 00 	mov.b	#-1,	&0x001e	;r3 As==11
 /*!
  * <i><b>P5 Usage</b></i> 
  * <table>
  * <tr><th>Pin<th>Function<th>Direction<th>Select
  * <tr><td>P5.0<td>LED Latch Clk CH 0-7<td>Output<td>Dio
  * <tr><td>P5.1<td>LED Latch Clk CH 8-15<td>Output<td>Dio
  * <tr><td>P5.2<td>LED Latch Clk CH 16-23<td>Output<td>Dio
  * <tr><td>P5.3<td>LLA Latch Clk CH 0-7<td>Output<td>Dio
  * <tr><td>P5.4<td>LLA Latch Clk CH 8-15<td>Output<td>Dio
  * <tr><td>P5.5<td>LLA Latch Clk CH 16-23<td>Output<td>Dio
  * <tr><td>P5.6<td>No Connect<td>Output<td>Dio
  * <tr><td>P5.7<td>No Connect<td>Output<td>Dio
  * </table>
  */
  P5SEL = 0x00;
    156e:	c2 43 33 00 	mov.b	#0,	&0x0033	;r3 As==00
  P5OUT = 0x00;
    1572:	c2 43 31 00 	mov.b	#0,	&0x0031	;r3 As==00
  P5DIR = 0xFF; 
    1576:	f2 43 32 00 	mov.b	#-1,	&0x0032	;r3 As==11

 /*!
  * <i><b>P6 Usage</b></i> 
  * <table>
  * <tr><th>Pin<th>Function<th>Direction<th>Select
  * <tr><td>P6.0<td>VMUX_OUT(0)<td>Input<td><b>Sel</b>
  * <tr><td>P6.1<td>VMUX_OUT(1)<td>Input<td><b>Sel</b>
  * <tr><td>P6.2<td>VMUX_OUT(2)<td>Input<td><b>Sel</b>
  * <tr><td>P6.3<td>VMUX_OUT(3)<td>Input<td><b>Sel</b>
  * <tr><td>P6.4<td>VMUX_OUT(4)<td>Input<td><b>Sel</b>
  * <tr><td>P6.5<td>No Connect<td>Input<td>Dio
  * <tr><td>P6.6<td>DAC Control CH24<td>Input (analog output)<td><b>Sel</b>
  * <tr><td>P6.7<td>No Connect<td>Input<td>Dio
  * </table>
  */
  P6SEL = 0x5F;
    157a:	f2 40 5f 00 	mov.b	#95,	&0x0037	;#0x005f
    157e:	37 00 
  P6OUT = 0x00;
    1580:	c2 43 35 00 	mov.b	#0,	&0x0035	;r3 As==00
  P6DIR = 0xA0; 
    1584:	f2 40 a0 ff 	mov.b	#-96,	&0x0036	;#0xffa0
    1588:	36 00 
}
    158a:	30 41       	ret			

0000158c <init_timer_a>:

void init_timer_a(void) {
  // SMCLK SOURCE (3.686400Mhz)
  // Timer in Continuous Mode 
  // Clear the timer register (TAR)
  // Compare 1 used as main time base at 1.25mS. 
  TACTL=TASSEL1|MC1|TACLR;  // Timer a sourced from 3.686400 Mhz SMCLK, continuous mode
    158c:	b2 40 24 02 	mov	#548,	&0x0160	;#0x0224
    1590:	60 01 
  TACCR0=0x900;             // 100uS interrupt rate
    1592:	b2 40 00 09 	mov	#2304,	&0x0172	;#0x0900
    1596:	72 01 
  TACCTL0=CCIE;             // Enable the timer interrupt
    1598:	b2 40 10 00 	mov	#16,	&0x0162	;#0x0010
    159c:	62 01 
}
    159e:	30 41       	ret			

000015a0 <init_dac>:

void init_dac(void) {
  // Dac 0 Controls Sources 
  // Dac 1 Controls Sinks
  // Parameters
  // [14-13] DAC12SREFx (11) Use VeREF+->3.3V 
  // [12] DAC12RES (0) 12-Bit Resolution  
  // [11-10] DAC12LSELx (00) Load DAC on write to the DAC12_0DAT register
  // [9] DAC12CALON (1) Calibration active, poll until this bit is clear 
  // [8] DAC12IR (1) Input range = 1x
  // [7-5] DAC12AMPx (111) High Speed, High Current 
  // [4] DAC12DF (0) Straight Binary 
  // [3] DAC12IE (0) Interrupt Disabled
  // [2] DAC12IFG (x) Interrupt flag
  // [1] DAC12ENC (1) Enable DAC conversion 
  // [0] DAC12GRP (0) Channel grouping disabled 
  DAC12_0CTL = DAC12SREF1|DAC12SREF0|DAC12CALON|DAC12IR|DAC12AMP2|DAC12AMP1|DAC12AMP0|DAC12ENC;
    15a0:	b2 40 e2 63 	mov	#25570,	&0x01c0	;#0x63e2
    15a4:	c0 01 
  while (DAC12_0CTL&DAC12CALON);  // spin here until cal complete
    15a6:	b2 b0 00 02 	bit	#512,	&0x01c0	;#0x0200
    15aa:	c0 01 
    15ac:	fc 23       	jnz	$-6      	;abs 0x15a6
}
    15ae:	30 41       	ret			

000015b0 <init_a2d>:

/*!  ADC12 Initialization Function
 * \section AA Overview
 * This project utilizes the first 5 channels of the A/D. Each of the channels is setup to use the 3.3V supply as the 
 * Reference. <br>
 *
 * \section BB Converter Usage
 * <table> 
 * <tr><th>Pin<th>Function<th>Description
 * <tr><td>P6.0<td>A/D 0<td>Reads External Mux for CH 0-7
 * <tr><td>P6.1<td>A/D 1<td>Reads External Mux for CH 8-15
 * <tr><td>P6.2<td>A/D 2<td>Reads External Mux for CH 16-23
 * <tr><td>P6.3<td>A/D 3<td>Reads CH24 
 * <tr><td>P6.3<td>A/D 4<td>Reads VOP Voltage 10k//2.5k divider 
 * </table>
 * \section CC VOP Calculation
 * VOP_Voltage = AD_Counts_VOP/248  
 * \section D Converter Sampling Time Usage
 * t_sample>(Rs+2k)x9.011x40pf+800nS; Rs is the channel external input resistance - 200 ohms for uEAC<br>
 * t_sample>2200x9.011x40pf+800nS=1.6uS 
 * 1.6uS = 12.8 clocks of the 8Mhz oscillator. Choose 16 for the sample clock divisor. 
 */ 
void init_a2d (void) {
  // ADC12 Parameters
  // Sample Hold Time - 16 clocks 
  /*! \section D ADC12CTRL0 Config 
  */
  ADC12CTL0 = SHT1_2|SHT0_2|MSC|REF2_5V|REFON|ADC12ON; // sampling time set to 3.2uS 
    15b0:	b2 40 f0 22 	mov	#8944,	&0x01a0	;#0x22f0
    15b4:	a0 01 
  ADC12CTL1 = SHP|CONSEQ0;                             // sample sequence of channels and then stop 
    15b6:	b2 40 02 02 	mov	#514,	&0x01a2	;#0x0202
    15ba:	a2 01 
  ADC12MCTL0 =  SREF_2|INCH_0;                         // Use Avcc (3.3V) as the reference, channels (0-7)   
    15bc:	f2 40 20 00 	mov.b	#32,	&0x0080	;#0x0020
    15c0:	80 00 
  ADC12MCTL1 =  SREF_2|INCH_1;                         // Use Avcc (3.3V) as the reference, channels (8-15)   
    15c2:	f2 40 21 00 	mov.b	#33,	&0x0081	;#0x0021
    15c6:	81 00 
  ADC12MCTL2 =  SREF_2|INCH_2;                         // Use Avcc (3.3V) as the reference, channels (16-23)   
    15c8:	f2 40 22 00 	mov.b	#34,	&0x0082	;#0x0022
    15cc:	82 00 
  ADC12MCTL3 =  EOS|SREF_2|INCH_3;                     // Use Avcc (3.3V) as the reference, channels (24)    
    15ce:	f2 40 a3 ff 	mov.b	#-93,	&0x0083	;#0xffa3
    15d2:	83 00 
}
    15d4:	30 41       	ret			

000015d6 <start_a2d_converter>:

void start_a2d_converter(void) {
  ADC12CTL0|=ENC|ADC12SC;                    // start the converter 
    15d6:	b2 d0 03 00 	bis	#3,	&0x01a0	;#0x0003
    15da:	a0 01 
}  
    15dc:	30 41       	ret			

000015de <stop_a2d_converter>:

void stop_a2d_converter(void) {
  ADC12CTL0&=~ENC;                           // stop the converter 
    15de:	a2 c3 a0 01 	bic	#2,	&0x01a0	;r3 As==10
}  
    15e2:	30 41       	ret			

000015e4 <wait_a2d_busy>:

int wait_a2d_busy(void) {
  int count=0;
    15e4:	0e 43       	clr	r14		;
  while (ADC12CTL1&ADC12BUSY) count++;
    15e6:	92 b3 a2 01 	bit	#1,	&0x01a2	;r3 As==01
    15ea:	04 24       	jz	$+10     	;abs 0x15f4
    15ec:	1e 53       	inc	r14		;
    15ee:	92 b3 a2 01 	bit	#1,	&0x01a2	;r3 As==01
    15f2:	fc 23       	jnz	$-6      	;abs 0x15ec
  return count;
}
    15f4:	0f 4e       	mov	r14,	r15	;
    15f6:	30 41       	ret			

000015f8 <write_analog_mux>:

void write_analog_mux(unsigned char select) {
  select&=0x07;   // clamp the input to 7 
    15f8:	7f f0 07 00 	and.b	#7,	r15	;#0x0007
  select<<=4;     // shift to align with bits 6-4 (mux select bits)
    15fc:	4f 5f       	rla.b	r15		;
    15fe:	4f 5f       	rla.b	r15		;
    1600:	4f 5f       	rla.b	r15		;
    1602:	4f 5f       	rla.b	r15		;
  P4OUT&=0x8F;    // clear the mux select bits
    1604:	f2 f0 8f ff 	and.b	#-113,	&0x001d	;#0xff8f
    1608:	1d 00 
  P4OUT|=select;  // "or" in the new select value
    160a:	c2 df 1d 00 	bis.b	r15,	&0x001d	;
}
    160e:	30 41       	ret			

00001610 <write_current>:

void write_current(int channel,int value_uA) {
    1610:	0d 4f       	mov	r15,	r13	;
    1612:	0f 4e       	mov	r14,	r15	;
  if (value_uA>200) value_uA=200;
    1614:	3e 90 c9 00 	cmp	#201,	r14	;#0x00c9
    1618:	02 38       	jl	$+6      	;abs 0x161e
    161a:	3f 40 c8 00 	mov	#200,	r15	;#0x00c8
  if (value_uA<-200) value_uA=-200;
    161e:	3f 90 38 ff 	cmp	#-200,	r15	;#0xff38
    1622:	02 34       	jge	$+6      	;abs 0x1628
    1624:	3f 40 38 ff 	mov	#-200,	r15	;#0xff38
  if (value_uA==0) {
    1628:	0f 93       	cmp	#0,	r15	;r3 As==00
    162a:	0d 20       	jnz	$+28     	;abs 0x1646
    write_dac(channel,(dac_translation[200]+ueac_state.pin_cal[channel].i_zero_offset));
    162c:	0f 4d       	mov	r13,	r15	;
    162e:	0f 5f       	rla	r15		;
    1630:	0f 5f       	rla	r15		;
    1632:	5f 4f c9 06 	mov.b	1737(r15),r15	;
    1636:	8f 11       	sxt	r15		;
    1638:	1f 52 0e 26 	add	&0x260e,r15	;0x260e
    163c:	0e 4f       	mov	r15,	r14	;
    163e:	0f 4d       	mov	r13,	r15	;
    1640:	b0 12 60 16 	call	#5728		;#0x1660
  }
  else {
    write_dac(channel,dac_translation[200-value_uA]+ueac_state.pin_cal[channel].i_200uA_offset);
  }
}
    1644:	30 41       	ret			
    1646:	3e 40 c8 00 	mov	#200,	r14	;#0x00c8
    164a:	0e 8f       	sub	r15,	r14	;
    164c:	0e 5e       	rla	r14		;
    164e:	0f 4d       	mov	r13,	r15	;
    1650:	0f 5f       	rla	r15		;
    1652:	0f 5f       	rla	r15		;
    1654:	5f 4f c8 06 	mov.b	1736(r15),r15	;
    1658:	8f 11       	sxt	r15		;
    165a:	1f 5e 7e 24 	add	9342(r14),r15	;
    165e:	ee 3f       	jmp	$-34     	;abs 0x163c

00001660 <write_dac>:

void write_dac(int channel,int value) {
    1660:	21 83       	decd	r1		;
    1662:	0d 4f       	mov	r15,	r13	;
    1664:	81 4e 00 00 	mov	r14,	0(r1)	;
  // write_dac(channel,value)
  // channel = 0-24 where the channels are the control voltages for the current sources. The current 
  // sources are labeled starting at the top left corner as follows.
  //  0  1  2  3  4
  //  5  6  7  8  9
  // 10 11 12 13 14
  // 15 16 17 18 19
  // 20 21 22 23 24
  //
  // Value = 0-1023 (10-bit) where the number represents a control voltage that is 0-3.3v. Each bit represents 
  // a voltage of 3.3v/1023 or 3.22mV. 
  //
  // Hardware Note: Channels 0-23 are implemented by external SPI octal dacs (Linear LTC1660 components). Channel 
  // 24 is implemented using DAC0 on the MSP430 
  // 
  // Initial Version BH 11/1/05

  if (channel < 8) {
    1668:	3f 92       	cmp	#8,	r15	;r2 As==11
    166a:	1c 34       	jge	$+58     	;abs 0x16a4
    P4OUT&=~0x01;                                   // assert the proper chip select
    166c:	d2 c3 1d 00 	bic.b	#1,	&0x001d	;r3 As==01
    channel++;                                      // increment the channel number LTC1660 channels run from 1-8   
    1670:	1d 53       	inc	r13		;
  }           
  else if (channel < 16) {
    P4OUT&=~0x02;                                   // assert the proper chip select
    channel-=7;                                     // bring channel number into range 1-8
  } 
  else if (channel < 24) {
    P4OUT&=~0x04;                                   // assert the proper chip select
    channel-=15;                                    // bring channel number into range 1-8
  }
  else if (channel == 24) {
    DAC12_0DAT=value<<2;                            // Shift up to a 12-bit number and write to the MSP430 DAC0 
    return;                                         // This is all to do for the MSP430 DAC case, exit...
  }
  else {                                            // channel number provided is too large, exit... 
    return;
  }
  value=(value&0x03FF)<<2;                          // mask and shift the value to align properly in the dac sentence
    1672:	2f 41       	mov	@r1,	r15	;
    1674:	3f f0 ff 03 	and	#1023,	r15	;#0x03ff
    1678:	0f 5f       	rla	r15		;
    167a:	0f 5f       	rla	r15		;
    167c:	81 4f 00 00 	mov	r15,	0(r1)	;
  channel<<=4;
    1680:	0f 4d       	mov	r13,	r15	;
    1682:	0f 5f       	rla	r15		;
    1684:	0f 5f       	rla	r15		;
    1686:	0f 5f       	rla	r15		;
    1688:	0f 5f       	rla	r15		;
  *(((unsigned char *) &value)+1)|=((unsigned char) channel); // "or" in the channel number to the value data
    168a:	5f d1 01 00 	bis.b	1(r1),	r15	;
    168e:	c1 4f 01 00 	mov.b	r15,	1(r1)	;
  send_spi_byte(*(((unsigned char *) &value)+1));             // send the high byte 
    1692:	b0 12 d2 14 	call	#5330		;#0x14d2
  send_spi_byte(*((unsigned char *) &value));                 // send the high byte 
    1696:	6f 41       	mov.b	@r1,	r15	;
    1698:	b0 12 d2 14 	call	#5330		;#0x14d2
  P4OUT|=0x0F;                                                // deassert all of the spi dac chip selects   
    169c:	f2 d0 0f 00 	bis.b	#15,	&0x001d	;#0x000f
    16a0:	1d 00 
    16a2:	18 3c       	jmp	$+50     	;abs 0x16d4
    16a4:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    16a8:	05 34       	jge	$+12     	;abs 0x16b4
    16aa:	e2 c3 1d 00 	bic.b	#2,	&0x001d	;r3 As==10
    16ae:	3d 50 f9 ff 	add	#-7,	r13	;#0xfff9
    16b2:	df 3f       	jmp	$-64     	;abs 0x1672
    16b4:	3f 90 18 00 	cmp	#24,	r15	;#0x0018
    16b8:	05 34       	jge	$+12     	;abs 0x16c4
    16ba:	e2 c2 1d 00 	bic.b	#4,	&0x001d	;r2 As==10
    16be:	3d 50 f1 ff 	add	#-15,	r13	;#0xfff1
    16c2:	d7 3f       	jmp	$-80     	;abs 0x1672
    16c4:	3f 90 18 00 	cmp	#24,	r15	;#0x0018
    16c8:	05 20       	jnz	$+12     	;abs 0x16d4
    16ca:	2f 41       	mov	@r1,	r15	;
    16cc:	0f 5f       	rla	r15		;
    16ce:	0f 5f       	rla	r15		;
    16d0:	82 4f c8 01 	mov	r15,	&0x01c8	;
}
    16d4:	21 53       	incd	r1		;
    16d6:	30 41       	ret			

000016d8 <led_pwm>:

#define PWM_COUNT_MASK 0x1F
void led_pwm (int enable) {
  static unsigned char counter=0;
  if (enable) {
    16d8:	0f 93       	cmp	#0,	r15	;r3 As==00
    16da:	ac 24       	jz	$+346    	;abs 0x1834
    counter++;
    16dc:	5f 42 00 02 	mov.b	&0x0200,r15	;0x0200
    16e0:	5f 53       	inc.b	r15		;
    counter&=PWM_COUNT_MASK; 
    16e2:	7f f0 1f 00 	and.b	#31,	r15	;#0x001f
    16e6:	c2 4f 00 02 	mov.b	r15,	&0x0200	;
    if (!counter) {
    16ea:	09 20       	jnz	$+20     	;abs 0x16fe
      P1OUT=0xFF;
    16ec:	f2 43 21 00 	mov.b	#-1,	&0x0021	;r3 As==11
      P5OUT=0x07;
    16f0:	f2 40 07 00 	mov.b	#7,	&0x0031	;#0x0007
    16f4:	31 00 
      P5OUT=0;
    16f6:	c2 43 31 00 	mov.b	#0,	&0x0031	;r3 As==00
      P2OUT|=0x01;
    16fa:	d2 d3 29 00 	bis.b	#1,	&0x0029	;r3 As==01
    }
    P1OUT=0xFF;
    16fe:	f2 43 21 00 	mov.b	#-1,	&0x0021	;r3 As==11
    if (counter>=high_time_limit[0]) P1OUT&=~0x01;
    1702:	5f 92 11 02 	cmp.b	&0x0211,r15	;0x0211
    1706:	02 28       	jnc	$+6      	;abs 0x170c
    1708:	d2 c3 21 00 	bic.b	#1,	&0x0021	;r3 As==01
    if (counter>=high_time_limit[1]) P1OUT&=~0x02;
    170c:	5f 92 12 02 	cmp.b	&0x0212,r15	;0x0212
    1710:	02 28       	jnc	$+6      	;abs 0x1716
    1712:	e2 c3 21 00 	bic.b	#2,	&0x0021	;r3 As==10
    if (counter>=high_time_limit[2]) P1OUT&=~0x04;
    1716:	5f 92 13 02 	cmp.b	&0x0213,r15	;0x0213
    171a:	02 28       	jnc	$+6      	;abs 0x1720
    171c:	e2 c2 21 00 	bic.b	#4,	&0x0021	;r2 As==10
    if (counter>=high_time_limit[3]) P1OUT&=~0x08;
    1720:	5f 92 14 02 	cmp.b	&0x0214,r15	;0x0214
    1724:	02 28       	jnc	$+6      	;abs 0x172a
    1726:	f2 c2 21 00 	bic.b	#8,	&0x0021	;r2 As==11
    if (counter>=high_time_limit[4]) P1OUT&=~0x10;
    172a:	5f 92 15 02 	cmp.b	&0x0215,r15	;0x0215
    172e:	03 28       	jnc	$+8      	;abs 0x1736
    1730:	f2 f0 ef ff 	and.b	#-17,	&0x0021	;#0xffef
    1734:	21 00 
    if (counter>=high_time_limit[5]) P1OUT&=~0x20;
    1736:	5f 92 16 02 	cmp.b	&0x0216,r15	;0x0216
    173a:	03 28       	jnc	$+8      	;abs 0x1742
    173c:	f2 f0 df ff 	and.b	#-33,	&0x0021	;#0xffdf
    1740:	21 00 
    if (counter>=high_time_limit[6]) P1OUT&=~0x40;
    1742:	5f 92 17 02 	cmp.b	&0x0217,r15	;0x0217
    1746:	03 28       	jnc	$+8      	;abs 0x174e
    1748:	f2 f0 bf ff 	and.b	#-65,	&0x0021	;#0xffbf
    174c:	21 00 
    if (counter>=high_time_limit[7]) P1OUT&=~0x80;
    174e:	5f 92 18 02 	cmp.b	&0x0218,r15	;0x0218
    1752:	03 28       	jnc	$+8      	;abs 0x175a
    1754:	f2 f0 7f 00 	and.b	#127,	&0x0021	;#0x007f
    1758:	21 00 
    P5OUT=0x01;
    175a:	d2 43 31 00 	mov.b	#1,	&0x0031	;r3 As==01
    P5OUT=0x00;
    175e:	c2 43 31 00 	mov.b	#0,	&0x0031	;r3 As==00
    P1OUT=0xFF;
    1762:	f2 43 21 00 	mov.b	#-1,	&0x0021	;r3 As==11
    if (counter>=high_time_limit[8]) P1OUT&=~0x01;
    1766:	5f 92 19 02 	cmp.b	&0x0219,r15	;0x0219
    176a:	02 28       	jnc	$+6      	;abs 0x1770
    176c:	d2 c3 21 00 	bic.b	#1,	&0x0021	;r3 As==01
    if (counter>=high_time_limit[9]) P1OUT&=~0x02;
    1770:	5f 92 1a 02 	cmp.b	&0x021a,r15	;0x021a
    1774:	02 28       	jnc	$+6      	;abs 0x177a
    1776:	e2 c3 21 00 	bic.b	#2,	&0x0021	;r3 As==10
    if (counter>=high_time_limit[10]) P1OUT&=~0x04;
    177a:	5f 92 1b 02 	cmp.b	&0x021b,r15	;0x021b
    177e:	02 28       	jnc	$+6      	;abs 0x1784
    1780:	e2 c2 21 00 	bic.b	#4,	&0x0021	;r2 As==10
    if (counter>=high_time_limit[11]) P1OUT&=~0x08;
    1784:	5f 92 1c 02 	cmp.b	&0x021c,r15	;0x021c
    1788:	02 28       	jnc	$+6      	;abs 0x178e
    178a:	f2 c2 21 00 	bic.b	#8,	&0x0021	;r2 As==11
    if (counter>=high_time_limit[12]) P1OUT&=~0x10;
    178e:	5f 92 1d 02 	cmp.b	&0x021d,r15	;0x021d
    1792:	03 28       	jnc	$+8      	;abs 0x179a
    1794:	f2 f0 ef ff 	and.b	#-17,	&0x0021	;#0xffef
    1798:	21 00 
    if (counter>=high_time_limit[13]) P1OUT&=~0x20;
    179a:	5f 92 1e 02 	cmp.b	&0x021e,r15	;0x021e
    179e:	03 28       	jnc	$+8      	;abs 0x17a6
    17a0:	f2 f0 df ff 	and.b	#-33,	&0x0021	;#0xffdf
    17a4:	21 00 
    if (counter>=high_time_limit[14]) P1OUT&=~0x40;
    17a6:	5f 92 1f 02 	cmp.b	&0x021f,r15	;0x021f
    17aa:	03 28       	jnc	$+8      	;abs 0x17b2
    17ac:	f2 f0 bf ff 	and.b	#-65,	&0x0021	;#0xffbf
    17b0:	21 00 
    if (counter>=high_time_limit[15]) P1OUT&=~0x80;
    17b2:	5f 92 20 02 	cmp.b	&0x0220,r15	;0x0220
    17b6:	03 28       	jnc	$+8      	;abs 0x17be
    17b8:	f2 f0 7f 00 	and.b	#127,	&0x0021	;#0x007f
    17bc:	21 00 
    P5OUT=0x02;
    17be:	e2 43 31 00 	mov.b	#2,	&0x0031	;r3 As==10
    P5OUT=0x00;
    17c2:	c2 43 31 00 	mov.b	#0,	&0x0031	;r3 As==00
    P1OUT=0xFF;
    17c6:	f2 43 21 00 	mov.b	#-1,	&0x0021	;r3 As==11
    if (counter>=high_time_limit[16]) P1OUT&=~0x01;
    17ca:	5f 92 21 02 	cmp.b	&0x0221,r15	;0x0221
    17ce:	02 28       	jnc	$+6      	;abs 0x17d4
    17d0:	d2 c3 21 00 	bic.b	#1,	&0x0021	;r3 As==01
    if (counter>=high_time_limit[17]) P1OUT&=~0x02;
    17d4:	5f 92 22 02 	cmp.b	&0x0222,r15	;0x0222
    17d8:	02 28       	jnc	$+6      	;abs 0x17de
    17da:	e2 c3 21 00 	bic.b	#2,	&0x0021	;r3 As==10
    if (counter>=high_time_limit[18]) P1OUT&=~0x04;
    17de:	5f 92 23 02 	cmp.b	&0x0223,r15	;0x0223
    17e2:	02 28       	jnc	$+6      	;abs 0x17e8
    17e4:	e2 c2 21 00 	bic.b	#4,	&0x0021	;r2 As==10
    if (counter>=high_time_limit[19]) P1OUT&=~0x08;
    17e8:	5f 92 24 02 	cmp.b	&0x0224,r15	;0x0224
    17ec:	02 28       	jnc	$+6      	;abs 0x17f2
    17ee:	f2 c2 21 00 	bic.b	#8,	&0x0021	;r2 As==11
    if (counter>=high_time_limit[20]) P1OUT&=~0x10;
    17f2:	5f 92 25 02 	cmp.b	&0x0225,r15	;0x0225
    17f6:	03 28       	jnc	$+8      	;abs 0x17fe
    17f8:	f2 f0 ef ff 	and.b	#-17,	&0x0021	;#0xffef
    17fc:	21 00 
    if (counter>=high_time_limit[21]) P1OUT&=~0x20;
    17fe:	5f 92 26 02 	cmp.b	&0x0226,r15	;0x0226
    1802:	03 28       	jnc	$+8      	;abs 0x180a
    1804:	f2 f0 df ff 	and.b	#-33,	&0x0021	;#0xffdf
    1808:	21 00 
    if (counter>=high_time_limit[22]) P1OUT&=~0x40;
    180a:	5f 92 27 02 	cmp.b	&0x0227,r15	;0x0227
    180e:	03 28       	jnc	$+8      	;abs 0x1816
    1810:	f2 f0 bf ff 	and.b	#-65,	&0x0021	;#0xffbf
    1814:	21 00 
    if (counter>=high_time_limit[23]) P1OUT&=~0x80;
    1816:	5f 92 28 02 	cmp.b	&0x0228,r15	;0x0228
    181a:	03 28       	jnc	$+8      	;abs 0x1822
    181c:	f2 f0 7f 00 	and.b	#127,	&0x0021	;#0x007f
    1820:	21 00 
    P5OUT=0x04;
    1822:	e2 42 31 00 	mov.b	#4,	&0x0031	;r2 As==10
    P5OUT=0x00;
    1826:	c2 43 31 00 	mov.b	#0,	&0x0031	;r3 As==00
    if (counter>=high_time_limit[24]) P2OUT&=~0x01;
    182a:	5f 92 29 02 	cmp.b	&0x0229,r15	;0x0229
    182e:	02 28       	jnc	$+6      	;abs 0x1834
    1830:	d2 c3 29 00 	bic.b	#1,	&0x0029	;r3 As==01
  }
}
    1834:	30 41       	ret			

00001836 <clear_led_screen>:

void clear_led_screen (void) {
  P1OUT=0;
    1836:	c2 43 21 00 	mov.b	#0,	&0x0021	;r3 As==00
  P5OUT=0x07;
    183a:	f2 40 07 00 	mov.b	#7,	&0x0031	;#0x0007
    183e:	31 00 
  P5OUT=0;
    1840:	c2 43 31 00 	mov.b	#0,	&0x0031	;r3 As==00
  P2OUT&=~0x01;
    1844:	d2 c3 29 00 	bic.b	#1,	&0x0029	;r3 As==01
}
    1848:	30 41       	ret			

0000184a <write_led>:


void write_led (int channel, int enable) {
    184a:	0d 4f       	mov	r15,	r13	;
  static unsigned long led_state = 0x00000000;
  if (enable) {
    184c:	0e 93       	cmp	#0,	r14	;r3 As==00
    184e:	4a 24       	jz	$+150    	;abs 0x18e4
    if (channel<8) {
    1850:	3d 92       	cmp	#8,	r13	;r2 As==11
    1852:	12 34       	jge	$+38     	;abs 0x1878
      *((unsigned char *) &led_state) |= 0x01<<channel;       // Save the new state of the LED in led_state
    1854:	1f 43       	mov	#1,	r15	;r3 As==01
    1856:	0e 4d       	mov	r13,	r14	;
    1858:	0e 93       	cmp	#0,	r14	;r3 As==00
    185a:	03 24       	jz	$+8      	;abs 0x1862
    185c:	0f 5f       	rla	r15		;
    185e:	1e 83       	dec	r14		;
    1860:	fd 23       	jnz	$-4      	;abs 0x185c
    1862:	5f d2 02 02 	bis.b	&0x0202,r15	;0x0202
    1866:	c2 4f 02 02 	mov.b	r15,	&0x0202	;
      P1OUT=*((unsigned char *) &led_state);                  // Place the relevant byte of led_state on the latch bus 
    186a:	c2 4f 21 00 	mov.b	r15,	&0x0021	;
      P5OUT|=0x01;                                            // strobe the chip select for the target latch
    186e:	d2 d3 31 00 	bis.b	#1,	&0x0031	;r3 As==01
      P5OUT&=~0x01;                                           // clear the chip select bit
    }
    else if (channel<16) {
      channel-=8;
      *(((unsigned char *) &led_state)+1) |= 0x01<<channel;  
      P1OUT=*(((unsigned char *) &led_state)+1);  
      P5OUT=0x02;
      P5OUT&=~0x02;                                           // clear the chip select bit
    }
    else if (channel<24) {
      channel-=16;
      *(((unsigned char *) &led_state)+2) |= 0x01<<channel;  
      P1OUT=*(((unsigned char *) &led_state)+2);  
      P5OUT=0x04;
      P5OUT&=~0x04;                                           // clear the chip select bit
    }
    else if (channel==24) {
      *(((unsigned char *) &led_state)+3) |= 0x01;  
      P2OUT|=0x01;
    }
  }
  else {
    if (channel<8) {
      *((unsigned char *) &led_state) &= ~(0x01<<channel);  
      P1OUT=*((unsigned char *) &led_state);  
      P5OUT=0x01;
      P5OUT&=~0x01;                                           // clear the chip select bit
    1872:	d2 c3 31 00 	bic.b	#1,	&0x0031	;r3 As==01
    }
    else if (channel<16) {
      channel-=8;
      *(((unsigned char *) &led_state)+1) &= ~(0x01<<channel);  
      P1OUT=*(((unsigned char *) &led_state)+1);  
      P5OUT=0x02;
      P5OUT&=~0x02;                                           // clear the chip select bit
    }
    else if (channel<24) {
      channel-=16;
      *(((unsigned char *) &led_state)+2) &= ~(0x01<<channel);  
      P1OUT=*(((unsigned char *) &led_state)+2);  
      P5OUT=0x04;
      P5OUT&=~0x04;                                           // clear the chip select bit
    }
    else if (channel==24) {
      *(((unsigned char *) &led_state)+3) &= 0xFE;  
      P2OUT&=0xFE;
    }
  }
}
    1876:	30 41       	ret			
    1878:	3d 90 10 00 	cmp	#16,	r13	;#0x0010
    187c:	13 34       	jge	$+40     	;abs 0x18a4
    187e:	3f 40 03 02 	mov	#515,	r15	;#0x0203
    1882:	1e 43       	mov	#1,	r14	;r3 As==01
    1884:	3d 82       	sub	#8,	r13	;r2 As==11
    1886:	0d 93       	cmp	#0,	r13	;r3 As==00
    1888:	03 24       	jz	$+8      	;abs 0x1890
    188a:	0e 5e       	rla	r14		;
    188c:	1d 83       	dec	r13		;
    188e:	fd 23       	jnz	$-4      	;abs 0x188a
    1890:	6e df       	bis.b	@r15,	r14	;
    1892:	cf 4e 00 00 	mov.b	r14,	0(r15)	;
    1896:	c2 4e 21 00 	mov.b	r14,	&0x0021	;
    189a:	e2 43 31 00 	mov.b	#2,	&0x0031	;r3 As==10
    189e:	e2 c3 31 00 	bic.b	#2,	&0x0031	;r3 As==10
    18a2:	30 41       	ret			
    18a4:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    18a8:	14 34       	jge	$+42     	;abs 0x18d2
    18aa:	3f 40 04 02 	mov	#516,	r15	;#0x0204
    18ae:	1e 43       	mov	#1,	r14	;r3 As==01
    18b0:	3d 50 f0 ff 	add	#-16,	r13	;#0xfff0
    18b4:	0d 93       	cmp	#0,	r13	;r3 As==00
    18b6:	03 24       	jz	$+8      	;abs 0x18be
    18b8:	0e 5e       	rla	r14		;
    18ba:	1d 83       	dec	r13		;
    18bc:	fd 23       	jnz	$-4      	;abs 0x18b8
    18be:	6e df       	bis.b	@r15,	r14	;
    18c0:	cf 4e 00 00 	mov.b	r14,	0(r15)	;
    18c4:	c2 4e 21 00 	mov.b	r14,	&0x0021	;
    18c8:	e2 42 31 00 	mov.b	#4,	&0x0031	;r2 As==10
    18cc:	e2 c2 31 00 	bic.b	#4,	&0x0031	;r2 As==10
    18d0:	30 41       	ret			
    18d2:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    18d6:	01 24       	jz	$+4      	;abs 0x18da
    18d8:	30 41       	ret			
    18da:	d2 d3 05 02 	bis.b	#1,	&0x0205	;r3 As==01
    18de:	d2 d3 29 00 	bis.b	#1,	&0x0029	;r3 As==01
    18e2:	30 41       	ret			
    18e4:	3d 92       	cmp	#8,	r13	;r2 As==11
    18e6:	11 34       	jge	$+36     	;abs 0x190a
    18e8:	1f 43       	mov	#1,	r15	;r3 As==01
    18ea:	0e 4d       	mov	r13,	r14	;
    18ec:	0e 93       	cmp	#0,	r14	;r3 As==00
    18ee:	03 24       	jz	$+8      	;abs 0x18f6
    18f0:	0f 5f       	rla	r15		;
    18f2:	1e 83       	dec	r14		;
    18f4:	fd 23       	jnz	$-4      	;abs 0x18f0
    18f6:	5d 42 02 02 	mov.b	&0x0202,r13	;0x0202
    18fa:	4d cf       	bic.b	r15,	r13	;
    18fc:	c2 4d 02 02 	mov.b	r13,	&0x0202	;
    1900:	c2 4d 21 00 	mov.b	r13,	&0x0021	;
    1904:	d2 43 31 00 	mov.b	#1,	&0x0031	;r3 As==01
    1908:	b4 3f       	jmp	$-150    	;abs 0x1872
    190a:	3d 90 10 00 	cmp	#16,	r13	;#0x0010
    190e:	0d 34       	jge	$+28     	;abs 0x192a
    1910:	3f 40 03 02 	mov	#515,	r15	;#0x0203
    1914:	1e 43       	mov	#1,	r14	;r3 As==01
    1916:	3d 82       	sub	#8,	r13	;r2 As==11
    1918:	0d 93       	cmp	#0,	r13	;r3 As==00
    191a:	03 24       	jz	$+8      	;abs 0x1922
    191c:	0e 5e       	rla	r14		;
    191e:	1d 83       	dec	r13		;
    1920:	fd 23       	jnz	$-4      	;abs 0x191c
    1922:	6d 4f       	mov.b	@r15,	r13	;
    1924:	4d ce       	bic.b	r14,	r13	;
    1926:	4e 4d       	mov.b	r13,	r14	;
    1928:	b4 3f       	jmp	$-150    	;abs 0x1892
    192a:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    192e:	0e 34       	jge	$+30     	;abs 0x194c
    1930:	3f 40 04 02 	mov	#516,	r15	;#0x0204
    1934:	1e 43       	mov	#1,	r14	;r3 As==01
    1936:	3d 50 f0 ff 	add	#-16,	r13	;#0xfff0
    193a:	0d 93       	cmp	#0,	r13	;r3 As==00
    193c:	03 24       	jz	$+8      	;abs 0x1944
    193e:	0e 5e       	rla	r14		;
    1940:	1d 83       	dec	r13		;
    1942:	fd 23       	jnz	$-4      	;abs 0x193e
    1944:	6d 4f       	mov.b	@r15,	r13	;
    1946:	4d ce       	bic.b	r14,	r13	;
    1948:	4e 4d       	mov.b	r13,	r14	;
    194a:	ba 3f       	jmp	$-138    	;abs 0x18c0
    194c:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    1950:	c3 23       	jnz	$-120    	;abs 0x18d8
    1952:	d2 c3 05 02 	bic.b	#1,	&0x0205	;r3 As==01
    1956:	d2 c3 29 00 	bic.b	#1,	&0x0029	;r3 As==01
    195a:	be 3f       	jmp	$-130    	;abs 0x18d8

0000195c <write_lla>:

void write_lla (int channel, int enable) {
    195c:	0d 4f       	mov	r15,	r13	;
  static unsigned long lla_state = 0x00000000;
  if (enable) {
    195e:	0e 93       	cmp	#0,	r14	;r3 As==00
    1960:	4e 24       	jz	$+158    	;abs 0x19fe
    if (channel<8) {
    1962:	3d 92       	cmp	#8,	r13	;r2 As==11
    1964:	12 34       	jge	$+38     	;abs 0x198a
      *((unsigned char *) &lla_state) |= 0x01<<channel;       // Save the new state of the LED in lla_state
    1966:	1f 43       	mov	#1,	r15	;r3 As==01
    1968:	0e 4d       	mov	r13,	r14	;
    196a:	0e 93       	cmp	#0,	r14	;r3 As==00
    196c:	03 24       	jz	$+8      	;abs 0x1974
    196e:	0f 5f       	rla	r15		;
    1970:	1e 83       	dec	r14		;
    1972:	fd 23       	jnz	$-4      	;abs 0x196e
    1974:	5f d2 06 02 	bis.b	&0x0206,r15	;0x0206
    1978:	c2 4f 06 02 	mov.b	r15,	&0x0206	;
      P1OUT=*((unsigned char *) &lla_state);                  // Place the relevant byte of lla_state on the latch bus 
    197c:	c2 4f 21 00 	mov.b	r15,	&0x0021	;
      P5OUT|=0x08;                                            // strobe the chip select for the target latch
    1980:	f2 d2 31 00 	bis.b	#8,	&0x0031	;r2 As==11
      P5OUT&=~0x08;                                           // clear the chip select bit
    }
    else if (channel<16) {
      channel-=8;
      *(((unsigned char *) &lla_state)+1) |= 0x01<<channel;  
      P1OUT=*(((unsigned char *) &lla_state)+1);  
      P5OUT=0x10;
      P5OUT&=~0x10;                                           // clear the chip select bit
    }
    else if (channel<24) {
      channel-=16;
      *(((unsigned char *) &lla_state)+2) |= 0x01<<channel;  
      P1OUT=*(((unsigned char *) &lla_state)+2);  
      P5OUT=0x20;
      P5OUT&=~0x20;                                           // clear the chip select bit
    }
    else if (channel==24) {
      *(((unsigned char *) &lla_state)+3) |= 0x01;  
      P2OUT|=0x02;
    }
  }
  else {
    if (channel<8) {
      *((unsigned char *) &lla_state) &= ~(0x01<<channel);  
      P1OUT=*((unsigned char *) &lla_state);  
      P5OUT=0x08;
      P5OUT&=~0x08;                                           // clear the chip select bit
    1984:	f2 c2 31 00 	bic.b	#8,	&0x0031	;r2 As==11
    }
    else if (channel<16) {
      channel-=8;
      *(((unsigned char *) &lla_state)+1) &= ~(0x01<<channel);  
      P1OUT=*(((unsigned char *) &lla_state)+1);  
      P5OUT=0x10;
      P5OUT&=~0x10;                                           // clear the chip select bit
    }
    else if (channel<24) {
      channel-=16;
      *(((unsigned char *) &lla_state)+2) &= ~(0x01<<channel);  
      P1OUT=*(((unsigned char *) &lla_state)+2);  
      P5OUT=0x20;
      P5OUT&=~0x20;                                           // clear the chip select bit
    }
    else if (channel==24) {
      *(((unsigned char *) &lla_state)+3) &= 0xFE;  
      P2OUT&=0xFD;
    }
  }
}
    1988:	30 41       	ret			
    198a:	3d 90 10 00 	cmp	#16,	r13	;#0x0010
    198e:	15 34       	jge	$+44     	;abs 0x19ba
    1990:	3f 40 07 02 	mov	#519,	r15	;#0x0207
    1994:	1e 43       	mov	#1,	r14	;r3 As==01
    1996:	3d 82       	sub	#8,	r13	;r2 As==11
    1998:	0d 93       	cmp	#0,	r13	;r3 As==00
    199a:	03 24       	jz	$+8      	;abs 0x19a2
    199c:	0e 5e       	rla	r14		;
    199e:	1d 83       	dec	r13		;
    19a0:	fd 23       	jnz	$-4      	;abs 0x199c
    19a2:	6e df       	bis.b	@r15,	r14	;
    19a4:	cf 4e 00 00 	mov.b	r14,	0(r15)	;
    19a8:	c2 4e 21 00 	mov.b	r14,	&0x0021	;
    19ac:	f2 40 10 00 	mov.b	#16,	&0x0031	;#0x0010
    19b0:	31 00 
    19b2:	f2 f0 ef ff 	and.b	#-17,	&0x0031	;#0xffef
    19b6:	31 00 
    19b8:	30 41       	ret			
    19ba:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    19be:	16 34       	jge	$+46     	;abs 0x19ec
    19c0:	3f 40 08 02 	mov	#520,	r15	;#0x0208
    19c4:	1e 43       	mov	#1,	r14	;r3 As==01
    19c6:	3d 50 f0 ff 	add	#-16,	r13	;#0xfff0
    19ca:	0d 93       	cmp	#0,	r13	;r3 As==00
    19cc:	03 24       	jz	$+8      	;abs 0x19d4
    19ce:	0e 5e       	rla	r14		;
    19d0:	1d 83       	dec	r13		;
    19d2:	fd 23       	jnz	$-4      	;abs 0x19ce
    19d4:	6e df       	bis.b	@r15,	r14	;
    19d6:	cf 4e 00 00 	mov.b	r14,	0(r15)	;
    19da:	c2 4e 21 00 	mov.b	r14,	&0x0021	;
    19de:	f2 40 20 00 	mov.b	#32,	&0x0031	;#0x0020
    19e2:	31 00 
    19e4:	f2 f0 df ff 	and.b	#-33,	&0x0031	;#0xffdf
    19e8:	31 00 
    19ea:	30 41       	ret			
    19ec:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    19f0:	01 24       	jz	$+4      	;abs 0x19f4
    19f2:	30 41       	ret			
    19f4:	d2 d3 09 02 	bis.b	#1,	&0x0209	;r3 As==01
    19f8:	e2 d3 29 00 	bis.b	#2,	&0x0029	;r3 As==10
    19fc:	30 41       	ret			
    19fe:	3d 92       	cmp	#8,	r13	;r2 As==11
    1a00:	11 34       	jge	$+36     	;abs 0x1a24
    1a02:	1f 43       	mov	#1,	r15	;r3 As==01
    1a04:	0e 4d       	mov	r13,	r14	;
    1a06:	0e 93       	cmp	#0,	r14	;r3 As==00
    1a08:	03 24       	jz	$+8      	;abs 0x1a10
    1a0a:	0f 5f       	rla	r15		;
    1a0c:	1e 83       	dec	r14		;
    1a0e:	fd 23       	jnz	$-4      	;abs 0x1a0a
    1a10:	5d 42 06 02 	mov.b	&0x0206,r13	;0x0206
    1a14:	4d cf       	bic.b	r15,	r13	;
    1a16:	c2 4d 06 02 	mov.b	r13,	&0x0206	;
    1a1a:	c2 4d 21 00 	mov.b	r13,	&0x0021	;
    1a1e:	f2 42 31 00 	mov.b	#8,	&0x0031	;r2 As==11
    1a22:	b0 3f       	jmp	$-158    	;abs 0x1984
    1a24:	3d 90 10 00 	cmp	#16,	r13	;#0x0010
    1a28:	0d 34       	jge	$+28     	;abs 0x1a44
    1a2a:	3f 40 07 02 	mov	#519,	r15	;#0x0207
    1a2e:	1e 43       	mov	#1,	r14	;r3 As==01
    1a30:	3d 82       	sub	#8,	r13	;r2 As==11
    1a32:	0d 93       	cmp	#0,	r13	;r3 As==00
    1a34:	03 24       	jz	$+8      	;abs 0x1a3c
    1a36:	0e 5e       	rla	r14		;
    1a38:	1d 83       	dec	r13		;
    1a3a:	fd 23       	jnz	$-4      	;abs 0x1a36
    1a3c:	6d 4f       	mov.b	@r15,	r13	;
    1a3e:	4d ce       	bic.b	r14,	r13	;
    1a40:	4e 4d       	mov.b	r13,	r14	;
    1a42:	b0 3f       	jmp	$-158    	;abs 0x19a4
    1a44:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    1a48:	0e 34       	jge	$+30     	;abs 0x1a66
    1a4a:	3f 40 08 02 	mov	#520,	r15	;#0x0208
    1a4e:	1e 43       	mov	#1,	r14	;r3 As==01
    1a50:	3d 50 f0 ff 	add	#-16,	r13	;#0xfff0
    1a54:	0d 93       	cmp	#0,	r13	;r3 As==00
    1a56:	03 24       	jz	$+8      	;abs 0x1a5e
    1a58:	0e 5e       	rla	r14		;
    1a5a:	1d 83       	dec	r13		;
    1a5c:	fd 23       	jnz	$-4      	;abs 0x1a58
    1a5e:	6d 4f       	mov.b	@r15,	r13	;
    1a60:	4d ce       	bic.b	r14,	r13	;
    1a62:	4e 4d       	mov.b	r13,	r14	;
    1a64:	b8 3f       	jmp	$-142    	;abs 0x19d6
    1a66:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    1a6a:	c3 23       	jnz	$-120    	;abs 0x19f2
    1a6c:	d2 c3 09 02 	bic.b	#1,	&0x0209	;r3 As==01
    1a70:	e2 c3 29 00 	bic.b	#2,	&0x0029	;r3 As==10
    1a74:	be 3f       	jmp	$-130    	;abs 0x19f2

00001a76 <Letext>:
    1a76:	53 63       	.word	0x6353;	????
    1a78:	61 6e       	addc.b	@r14,	r1	;
    1a7a:	6e 69       	addc.b	@r9,	r14	;
    1a7c:	6e 67       	addc.b	@r7,	r14	;
    1a7e:	20 4c       	br	@r12		;
    1a80:	45 44       	mov.b	r4,	r5	;
    1a82:	73 20       	jnz	$+232    	;abs 0x1b6a
    1a84:	00 1b       	.word	0x1b00;	????
    1a86:	5b 33       	jn	$-328    	;abs 0x193e
    1a88:	32 6d       	addc	@r13+,	r2	;
    1a8a:	00 5b       	add	r11,	r0	;
    1a8c:	44 4f       	mov.b	r15,	r4	;
    1a8e:	4e 45       	mov.b	r5,	r14	;
    1a90:	5d 0a       	.word	0x0a5d;	????
    1a92:	0d 00       	.word	0x000d;	????
    1a94:	1b 5b 33 30 	add	12339(r11),r11	;
    1a98:	6d 00       	.word	0x006d;	????

00001a9a <scan_leds>:
    1a9a:	0b 12       	push	r11		;
    1a9c:	0a 12       	push	r10		;
    1a9e:	09 12       	push	r9		;
    1aa0:	08 12       	push	r8		;
    1aa2:	07 12       	push	r7		;
    1aa4:	30 12 76 1a 	push	#6774		;#0x1a76
    1aa8:	b0 12 22 87 	call	#-30942	;#0x8722
    1aac:	07 43       	clr	r7		;
    1aae:	21 53       	incd	r1		;
    1ab0:	0e 43       	clr	r14		;
    1ab2:	0f 47       	mov	r7,	r15	;
    1ab4:	b0 12 4a 18 	call	#6218		;#0x184a
    1ab8:	17 53       	inc	r7		;
    1aba:	37 90 19 00 	cmp	#25,	r7	;#0x0019
    1abe:	f8 3b       	jl	$-14     	;abs 0x1ab0
    1ac0:	07 43       	clr	r7		;
    1ac2:	1e 43       	mov	#1,	r14	;r3 As==01
    1ac4:	0f 47       	mov	r7,	r15	;
    1ac6:	b0 12 4a 18 	call	#6218		;#0x184a
    1aca:	08 47       	mov	r7,	r8	;
    1acc:	18 53       	inc	r8		;
    1ace:	1e 43       	mov	#1,	r14	;r3 As==01
    1ad0:	0f 48       	mov	r8,	r15	;
    1ad2:	b0 12 4a 18 	call	#6218		;#0x184a
    1ad6:	09 47       	mov	r7,	r9	;
    1ad8:	29 53       	incd	r9		;
    1ada:	1e 43       	mov	#1,	r14	;r3 As==01
    1adc:	0f 49       	mov	r9,	r15	;
    1ade:	b0 12 4a 18 	call	#6218		;#0x184a
    1ae2:	0a 47       	mov	r7,	r10	;
    1ae4:	3a 50 03 00 	add	#3,	r10	;#0x0003
    1ae8:	1e 43       	mov	#1,	r14	;r3 As==01
    1aea:	0f 4a       	mov	r10,	r15	;
    1aec:	b0 12 4a 18 	call	#6218		;#0x184a
    1af0:	0b 47       	mov	r7,	r11	;
    1af2:	2b 52       	add	#4,	r11	;r2 As==10
    1af4:	1e 43       	mov	#1,	r14	;r3 As==01
    1af6:	0f 4b       	mov	r11,	r15	;
    1af8:	b0 12 4a 18 	call	#6218		;#0x184a
    1afc:	3f 40 64 00 	mov	#100,	r15	;#0x0064
    1b00:	b0 12 ac 33 	call	#13228		;#0x33ac
    1b04:	0e 43       	clr	r14		;
    1b06:	0f 47       	mov	r7,	r15	;
    1b08:	b0 12 4a 18 	call	#6218		;#0x184a
    1b0c:	0e 43       	clr	r14		;
    1b0e:	0f 48       	mov	r8,	r15	;
    1b10:	b0 12 4a 18 	call	#6218		;#0x184a
    1b14:	0e 43       	clr	r14		;
    1b16:	0f 49       	mov	r9,	r15	;
    1b18:	b0 12 4a 18 	call	#6218		;#0x184a
    1b1c:	0e 43       	clr	r14		;
    1b1e:	0f 4a       	mov	r10,	r15	;
    1b20:	b0 12 4a 18 	call	#6218		;#0x184a
    1b24:	0e 43       	clr	r14		;
    1b26:	0f 4b       	mov	r11,	r15	;
    1b28:	b0 12 4a 18 	call	#6218		;#0x184a
    1b2c:	37 50 05 00 	add	#5,	r7	;#0x0005
    1b30:	37 90 19 00 	cmp	#25,	r7	;#0x0019
    1b34:	c6 3b       	jl	$-114    	;abs 0x1ac2
    1b36:	07 43       	clr	r7		;
    1b38:	1e 43       	mov	#1,	r14	;r3 As==01
    1b3a:	0f 47       	mov	r7,	r15	;
    1b3c:	b0 12 4a 18 	call	#6218		;#0x184a
    1b40:	08 47       	mov	r7,	r8	;
    1b42:	38 50 05 00 	add	#5,	r8	;#0x0005
    1b46:	1e 43       	mov	#1,	r14	;r3 As==01
    1b48:	0f 48       	mov	r8,	r15	;
    1b4a:	b0 12 4a 18 	call	#6218		;#0x184a
    1b4e:	09 47       	mov	r7,	r9	;
    1b50:	39 50 0a 00 	add	#10,	r9	;#0x000a
    1b54:	1e 43       	mov	#1,	r14	;r3 As==01
    1b56:	0f 49       	mov	r9,	r15	;
    1b58:	b0 12 4a 18 	call	#6218		;#0x184a
    1b5c:	0a 47       	mov	r7,	r10	;
    1b5e:	3a 50 0f 00 	add	#15,	r10	;#0x000f
    1b62:	1e 43       	mov	#1,	r14	;r3 As==01
    1b64:	0f 4a       	mov	r10,	r15	;
    1b66:	b0 12 4a 18 	call	#6218		;#0x184a
    1b6a:	0b 47       	mov	r7,	r11	;
    1b6c:	3b 50 14 00 	add	#20,	r11	;#0x0014
    1b70:	1e 43       	mov	#1,	r14	;r3 As==01
    1b72:	0f 4b       	mov	r11,	r15	;
    1b74:	b0 12 4a 18 	call	#6218		;#0x184a
    1b78:	3f 40 64 00 	mov	#100,	r15	;#0x0064
    1b7c:	b0 12 ac 33 	call	#13228		;#0x33ac
    1b80:	0e 43       	clr	r14		;
    1b82:	0f 47       	mov	r7,	r15	;
    1b84:	b0 12 4a 18 	call	#6218		;#0x184a
    1b88:	0e 43       	clr	r14		;
    1b8a:	0f 48       	mov	r8,	r15	;
    1b8c:	b0 12 4a 18 	call	#6218		;#0x184a
    1b90:	0e 43       	clr	r14		;
    1b92:	0f 49       	mov	r9,	r15	;
    1b94:	b0 12 4a 18 	call	#6218		;#0x184a
    1b98:	0e 43       	clr	r14		;
    1b9a:	0f 4a       	mov	r10,	r15	;
    1b9c:	b0 12 4a 18 	call	#6218		;#0x184a
    1ba0:	0e 43       	clr	r14		;
    1ba2:	0f 4b       	mov	r11,	r15	;
    1ba4:	b0 12 4a 18 	call	#6218		;#0x184a
    1ba8:	17 53       	inc	r7		;
    1baa:	37 90 05 00 	cmp	#5,	r7	;#0x0005
    1bae:	c4 3b       	jl	$-118    	;abs 0x1b38
    1bb0:	07 43       	clr	r7		;
    1bb2:	1e 43       	mov	#1,	r14	;r3 As==01
    1bb4:	0f 47       	mov	r7,	r15	;
    1bb6:	b0 12 4a 18 	call	#6218		;#0x184a
    1bba:	17 53       	inc	r7		;
    1bbc:	37 90 19 00 	cmp	#25,	r7	;#0x0019
    1bc0:	f8 3b       	jl	$-14     	;abs 0x1bb2
    1bc2:	3f 40 c8 00 	mov	#200,	r15	;#0x00c8
    1bc6:	b0 12 ac 33 	call	#13228		;#0x33ac
    1bca:	07 43       	clr	r7		;
    1bcc:	0e 43       	clr	r14		;
    1bce:	0f 47       	mov	r7,	r15	;
    1bd0:	b0 12 4a 18 	call	#6218		;#0x184a
    1bd4:	17 53       	inc	r7		;
    1bd6:	37 90 19 00 	cmp	#25,	r7	;#0x0019
    1bda:	f8 3b       	jl	$-14     	;abs 0x1bcc
    1bdc:	30 12 85 1a 	push	#6789		;#0x1a85
    1be0:	b0 12 22 87 	call	#-30942	;#0x8722
    1be4:	30 12 8b 1a 	push	#6795		;#0x1a8b
    1be8:	b0 12 22 87 	call	#-30942	;#0x8722
    1bec:	30 12 94 1a 	push	#6804		;#0x1a94
    1bf0:	b0 12 22 87 	call	#-30942	;#0x8722
    1bf4:	31 50 06 00 	add	#6,	r1	;#0x0006
    1bf8:	37 41       	pop	r7		;
    1bfa:	38 41       	pop	r8		;
    1bfc:	39 41       	pop	r9		;
    1bfe:	3a 41       	pop	r10		;
    1c00:	3b 41       	pop	r11		;
    1c02:	30 41       	ret			
    1c04:	0a 0d       	.word	0x0d0a;	????
    1c06:	43 75       	.word	0x7543;	????
    1c08:	72 72       	subc.b	#8,	r2	;r2 As==11
    1c0a:	65 6e       	addc.b	@r14,	r5	;
    1c0c:	74 20       	jnz	$+234    	;abs 0x1cf6
    1c0e:	4f 75       	subc.b	r5,	r15	;
    1c10:	74 70 75 74 	subc.b	#29813,	r4	;#0x7475
    1c14:	20 43       	br	#2		;r3 As==10
    1c16:	61 6c       	addc.b	@r12,	r1	;
    1c18:	69 62       	addc.b	#4,	r9	;r2 As==10
    1c1a:	72 61       	addc.b	@r1+,	r2	;
    1c1c:	74 69       	addc.b	@r9+,	r4	;
    1c1e:	6f 6e       	addc.b	@r14,	r15	;
    1c20:	0a 0d       	.word	0x0d0a;	????
    1c22:	00 41       	br	r1		;
    1c24:	74 74       	subc.b	@r4+,	r4	;
    1c26:	61 63       	addc.b	#2,	r1	;r3 As==10
    1c28:	68 20       	jnz	$+210    	;abs 0x1cfa
    1c2a:	74 68       	addc.b	@r8+,	r4	;
    1c2c:	65 20       	jnz	$+204    	;abs 0x1cf8
    1c2e:	44 56       	add.b	r6,	r4	;
    1c30:	4d 20       	jnz	$+156    	;abs 0x1ccc
    1c32:	69 6e       	addc.b	@r14,	r9	;
    1c34:	20 63       	addc	#2,	r0	;r3 As==10
    1c36:	75 72       	subc.b	#8,	r5	;r2 As==11
    1c38:	72 65       	addc.b	@r5+,	r2	;
    1c3a:	6e 74       	subc.b	@r4,	r14	;
    1c3c:	20 6d       	addc	@r13,	r0	;
    1c3e:	6f 64       	addc.b	@r4,	r15	;
    1c40:	65 20       	jnz	$+204    	;abs 0x1d0c
    1c42:	74 6f       	addc.b	@r15+,	r4	;
    1c44:	20 74       	subc	@r4,	r0	;
    1c46:	68 65       	addc.b	@r5,	r8	;
    1c48:	20 70       	subc	@r0,	r0	;
    1c4a:	69 6e       	addc.b	@r14,	r9	;
    1c4c:	20 77       	subc	@r7,	r0	;
    1c4e:	69 74       	subc.b	@r4,	r9	;
    1c50:	68 20       	jnz	$+210    	;abs 0x1d22
    1c52:	74 68       	addc.b	@r8+,	r4	;
    1c54:	65 20       	jnz	$+204    	;abs 0x1d20
    1c56:	61 63       	addc.b	#2,	r1	;r3 As==10
    1c58:	74 69       	addc.b	@r9+,	r4	;
    1c5a:	76 65       	addc.b	@r5+,	r6	;
    1c5c:	20 4c       	br	@r12		;
    1c5e:	45 44       	mov.b	r4,	r5	;
    1c60:	0a 0d       	.word	0x0d0a;	????
    1c62:	00 55       	add	r5,	r0	;
    1c64:	73 65       	.word	0x6573;	????
    1c66:	20 74       	subc	@r4,	r0	;
    1c68:	68 65       	addc.b	@r5,	r8	;
    1c6a:	20 75       	subc	@r5,	r0	;
    1c6c:	70 20       	jnz	$+226    	;abs 0x1d4e
    1c6e:	61 72       	subc.b	#4,	r1	;r2 As==10
    1c70:	72 6f       	addc.b	@r15+,	r2	;
    1c72:	77 20       	jnz	$+240    	;abs 0x1d62
    1c74:	61 6e       	addc.b	@r14,	r1	;
    1c76:	64 20       	jnz	$+202    	;abs 0x1d40
    1c78:	64 6f       	addc.b	@r15,	r4	;
    1c7a:	77 6e       	addc.b	@r14+,	r7	;
    1c7c:	20 61       	addc	@r1,	r0	;
    1c7e:	72 72       	subc.b	#8,	r2	;r2 As==11
    1c80:	6f 77       	subc.b	@r7,	r15	;
    1c82:	20 6b       	addc	@r11,	r0	;
    1c84:	65 79       	subc.b	@r9,	r5	;
    1c86:	73 20       	jnz	$+232    	;abs 0x1d6e
    1c88:	74 6f       	addc.b	@r15+,	r4	;
    1c8a:	20 61       	addc	@r1,	r0	;
    1c8c:	64 6a       	addc.b	@r10,	r4	;
    1c8e:	75 73       	subc.b	#-1,	r5	;r3 As==11
    1c90:	74 20       	jnz	$+234    	;abs 0x1d7a
    1c92:	74 68       	addc.b	@r8+,	r4	;
    1c94:	65 20       	jnz	$+204    	;abs 0x1d60
    1c96:	63 75       	.word	0x7563;	????
    1c98:	72 72       	subc.b	#8,	r2	;r2 As==11
    1c9a:	65 6e       	addc.b	@r14,	r5	;
    1c9c:	74 0a       	.word	0x0a74;	????
    1c9e:	0d 00       	.word	0x000d;	????
    1ca0:	2d 2d       	jc	$+604    	;abs 0x1efc
    1ca2:	2d 2d       	jc	$+604    	;abs 0x1efe
    1ca4:	2d 2d       	jc	$+604    	;abs 0x1f00
    1ca6:	2d 2d       	jc	$+604    	;abs 0x1f02
    1ca8:	2d 2d       	jc	$+604    	;abs 0x1f04
    1caa:	2d 2d       	jc	$+604    	;abs 0x1f06
    1cac:	2d 2d       	jc	$+604    	;abs 0x1f08
    1cae:	2d 2d       	jc	$+604    	;abs 0x1f0a
    1cb0:	2d 2d       	jc	$+604    	;abs 0x1f0c
    1cb2:	2d 2d       	jc	$+604    	;abs 0x1f0e
    1cb4:	2d 2d       	jc	$+604    	;abs 0x1f10
    1cb6:	2d 2d       	jc	$+604    	;abs 0x1f12
    1cb8:	2d 2d       	jc	$+604    	;abs 0x1f14
    1cba:	2d 2d       	jc	$+604    	;abs 0x1f16
    1cbc:	2d 2d       	jc	$+604    	;abs 0x1f18
    1cbe:	2d 2d       	jc	$+604    	;abs 0x1f1a
    1cc0:	2d 2d       	jc	$+604    	;abs 0x1f1c
    1cc2:	2d 2d       	jc	$+604    	;abs 0x1f1e
    1cc4:	2d 2d       	jc	$+604    	;abs 0x1f20
    1cc6:	2d 2d       	jc	$+604    	;abs 0x1f22
    1cc8:	2d 2d       	jc	$+604    	;abs 0x1f24
    1cca:	2d 2d       	jc	$+604    	;abs 0x1f26
    1ccc:	2d 2d       	jc	$+604    	;abs 0x1f28
    1cce:	2d 2d       	jc	$+604    	;abs 0x1f2a
    1cd0:	2d 2d       	jc	$+604    	;abs 0x1f2c
    1cd2:	2d 2d       	jc	$+604    	;abs 0x1f2e
    1cd4:	2d 2d       	jc	$+604    	;abs 0x1f30
    1cd6:	2d 2d       	jc	$+604    	;abs 0x1f32
    1cd8:	2d 2d       	jc	$+604    	;abs 0x1f34
    1cda:	2d 2d       	jc	$+604    	;abs 0x1f36
    1cdc:	2d 2d       	jc	$+604    	;abs 0x1f38
    1cde:	2d 2d       	jc	$+604    	;abs 0x1f3a
    1ce0:	2d 0a       	.word	0x0a2d;	????
    1ce2:	0d 00       	.word	0x000d;	????
    1ce4:	25 64       	addc	@r4,	r5	;
    1ce6:	40 32       	jn	$-894    	;abs 0x1968
    1ce8:	30 30       	jn	$+98     	;abs 0x1d4a
    1cea:	75 41       	pop.b	r5		;
    1cec:	3e 20       	jnz	$+126    	;abs 0x1d6a
    1cee:	00 25       	jz	$+514    	;abs 0x1ef0
    1cf0:	64 40       	mov.b	@r0,	r4	;
    1cf2:	30 75       	subc	@r5+,	r0	;
    1cf4:	41 3e       	jmp	$-892    	;abs 0x1978
    1cf6:	20 00       	.word	0x0020;	????
    1cf8:	25 64       	addc	@r4,	r5	;
    1cfa:	20 00       	.word	0x0020;	????
    1cfc:	66 6c       	addc.b	@r12,	r6	;
    1cfe:	6f 6f       	addc.b	@r15,	r15	;
    1d00:	72 3d       	jmp	$+742    	;abs 0x1fe6
    1d02:	25 64       	addc	@r4,	r5	;
    1d04:	2c 00       	.word	0x002c;	????
    1d06:	6f 66       	addc.b	@r6,	r15	;
    1d08:	66 73       	subc.b	#2,	r6	;r3 As==10
    1d0a:	65 74       	subc.b	@r4,	r5	;
    1d0c:	3d 25       	jz	$+636    	;abs 0x1f88
    1d0e:	64 0a       	.word	0x0a64;	????
    1d10:	0d 00       	.word	0x000d;	????
    1d12:	43 6f       	.word	0x6f43;	????
    1d14:	6d 6d       	addc.b	@r13,	r13	;
    1d16:	69 74       	subc.b	@r4,	r9	;
    1d18:	20 63       	addc	#2,	r0	;r3 As==10
    1d1a:	61 6c       	addc.b	@r12,	r1	;
    1d1c:	69 62       	addc.b	#4,	r9	;r2 As==10
    1d1e:	72 61       	addc.b	@r1+,	r2	;
    1d20:	74 69       	addc.b	@r9+,	r4	;
    1d22:	6f 6e       	addc.b	@r14,	r15	;
    1d24:	20 74       	subc	@r4,	r0	;
    1d26:	6f 20       	jnz	$+224    	;abs 0x1e06
    1d28:	65 78       	subc.b	@r8,	r5	;
    1d2a:	74 65       	addc.b	@r5+,	r4	;
    1d2c:	72 6e       	addc.b	@r14+,	r2	;
    1d2e:	61 6c       	addc.b	@r12,	r1	;
    1d30:	20 66       	addc	@r6,	r0	;
    1d32:	6c 61       	addc.b	@r1,	r12	;
    1d34:	73 68       	.word	0x6873;	????
    1d36:	20 3f       	jmp	$-446    	;abs 0x1b78
    1d38:	20 28       	jnc	$+66     	;abs 0x1d7a
    1d3a:	79 20       	jnz	$+244    	;abs 0x1e2e
    1d3c:	6f 72       	subc.b	#4,	r15	;r2 As==10
    1d3e:	20 6e       	addc	@r14,	r0	;
    1d40:	29 20       	jnz	$+84     	;abs 0x1d94
    1d42:	00 0a       	.word	0x0a00;	????
    1d44:	0d 50       	add	r0,	r13	;
    1d46:	6c 65       	addc.b	@r5,	r12	;
    1d48:	61 73       	subc.b	#2,	r1	;r3 As==10
    1d4a:	65 20       	jnz	$+204    	;abs 0x1e16
    1d4c:	72 65       	addc.b	@r5+,	r2	;
    1d4e:	73 70       	.word	0x7073;	????
    1d50:	6f 6e       	addc.b	@r14,	r15	;
    1d52:	64 20       	jnz	$+202    	;abs 0x1e1c
    1d54:	77 69       	addc.b	@r9+,	r7	;
    1d56:	74 68       	addc.b	@r8+,	r4	;
    1d58:	20 79       	subc	@r9,	r0	;
    1d5a:	20 6f       	addc	@r15,	r0	;
    1d5c:	72 20       	jnz	$+230    	;abs 0x1e42
    1d5e:	6e 3a       	jl	$-802    	;abs 0x1a3c
    1d60:	20 00       	.word	0x0020;	????
    1d62:	0a 0d       	.word	0x0d0a;	????
    1d64:	43 61       	.word	0x6143;	????
    1d66:	6c 69       	addc.b	@r9,	r12	;
    1d68:	62 72       	subc.b	#4,	r2	;r2 As==10
    1d6a:	61 74       	subc.b	@r4,	r1	;
    1d6c:	69 6f       	addc.b	@r15,	r9	;
    1d6e:	6e 20       	jnz	$+222    	;abs 0x1e4c
    1d70:	41 62       	addc.b	r2,	r1	;
    1d72:	6f 72       	subc.b	#4,	r15	;r2 As==10
    1d74:	74 20       	jnz	$+234    	;abs 0x1e5e
    1d76:	21 0a       	.word	0x0a21;	????
    1d78:	0d 00       	.word	0x000d;	????
    1d7a:	0a 0d       	.word	0x0d0a;	????
    1d7c:	43 61       	.word	0x6143;	????
    1d7e:	6c 69       	addc.b	@r9,	r12	;
    1d80:	62 72       	subc.b	#4,	r2	;r2 As==10
    1d82:	61 74       	subc.b	@r4,	r1	;
    1d84:	69 6f       	addc.b	@r15,	r9	;
    1d86:	6e 20       	jnz	$+222    	;abs 0x1e64
    1d88:	53 61       	.word	0x6153;	????
    1d8a:	76 65       	addc.b	@r5+,	r6	;
    1d8c:	64 20       	jnz	$+202    	;abs 0x1e56
    1d8e:	21 0a       	.word	0x0a21;	????
    1d90:	0d 00       	.word	0x000d;	????
    1d92:	25 64       	addc	@r4,	r5	;
    1d94:	20 25       	jz	$+578    	;abs 0x1fd6
    1d96:	64 0a       	.word	0x0a64;	????
    1d98:	0d 00       	.word	0x000d;	????
    1d9a:	25 64       	addc	@r4,	r5	;
    1d9c:	0a 0d       	.word	0x0d0a;	????
	...

00001da0 <current_output_calibration>:
    1da0:	0b 12       	push	r11		;
    1da2:	0a 12       	push	r10		;
    1da4:	09 12       	push	r9		;
    1da6:	08 12       	push	r8		;
    1da8:	07 12       	push	r7		;
    1daa:	06 12       	push	r6		;
    1dac:	05 12       	push	r5		;
    1dae:	21 82       	sub	#4,	r1	;r2 As==10
    1db0:	05 4f       	mov	r15,	r5	;
    1db2:	0a 43       	clr	r10		;
    1db4:	30 12 04 1c 	push	#7172		;#0x1c04
    1db8:	b0 12 22 87 	call	#-30942	;#0x8722
    1dbc:	30 12 23 1c 	push	#7203		;#0x1c23
    1dc0:	b0 12 22 87 	call	#-30942	;#0x8722
    1dc4:	30 12 63 1c 	push	#7267		;#0x1c63
    1dc8:	b0 12 22 87 	call	#-30942	;#0x8722
    1dcc:	30 12 a0 1c 	push	#7328		;#0x1ca0
    1dd0:	b0 12 22 87 	call	#-30942	;#0x8722
    1dd4:	7e 40 56 00 	mov.b	#86,	r14	;#0x0056
    1dd8:	0f 43       	clr	r15		;
    1dda:	b0 12 7a 23 	call	#9082		;#0x237a
    1dde:	18 43       	mov	#1,	r8	;r3 As==01
    1de0:	31 52       	add	#8,	r1	;r2 As==11
    1de2:	4e 43       	clr.b	r14		;
    1de4:	0f 48       	mov	r8,	r15	;
    1de6:	b0 12 7a 23 	call	#9082		;#0x237a
    1dea:	18 53       	inc	r8		;
    1dec:	38 90 08 01 	cmp	#264,	r8	;#0x0108
    1df0:	f8 3b       	jl	$-14     	;abs 0x1de2
    1df2:	08 43       	clr	r8		;
    1df4:	0e 43       	clr	r14		;
    1df6:	0f 48       	mov	r8,	r15	;
    1df8:	b0 12 5c 19 	call	#6492		;#0x195c
    1dfc:	1e 43       	mov	#1,	r14	;r3 As==01
    1dfe:	0f 48       	mov	r8,	r15	;
    1e00:	b0 12 4a 18 	call	#6218		;#0x184a
    1e04:	07 43       	clr	r7		;
    1e06:	0b 43       	clr	r11		;
    1e08:	08 12       	push	r8		;
    1e0a:	30 12 e4 1c 	push	#7396		;#0x1ce4
    1e0e:	b0 12 22 87 	call	#-30942	;#0x8722
    1e12:	21 52       	add	#4,	r1	;r2 As==10
    1e14:	06 48       	mov	r8,	r6	;
    1e16:	16 53       	inc	r6		;
    1e18:	09 48       	mov	r8,	r9	;
    1e1a:	09 59       	rla	r9		;
    1e1c:	09 59       	rla	r9		;
    1e1e:	1f 42 7e 24 	mov	&0x247e,r15	;0x247e
    1e22:	0f 5b       	add	r11,	r15	;
    1e24:	0e 4f       	mov	r15,	r14	;
    1e26:	0f 48       	mov	r8,	r15	;
    1e28:	b0 12 60 16 	call	#5728		;#0x1660
    1e2c:	b0 12 26 15 	call	#5414		;#0x1526
    1e30:	7f 90 0a 00 	cmp.b	#10,	r15	;#0x000a
    1e34:	13 25       	jz	$+552    	;abs 0x205c
    1e36:	7f 90 0d 00 	cmp.b	#13,	r15	;#0x000d
    1e3a:	10 25       	jz	$+546    	;abs 0x205c
    1e3c:	1a 93       	cmp	#1,	r10	;r3 As==01
    1e3e:	09 25       	jz	$+532    	;abs 0x2052
    1e40:	2a 93       	cmp	#2,	r10	;r3 As==10
    1e42:	00 39       	jl	$+514    	;abs 0x2044
    1e44:	2a 93       	cmp	#2,	r10	;r3 As==10
    1e46:	f2 24       	jz	$+486    	;abs 0x202c
    1e48:	07 93       	cmp	#0,	r7	;r3 As==00
    1e4a:	e9 27       	jz	$-44     	;abs 0x1e1e
    1e4c:	07 43       	clr	r7		;
    1e4e:	0b 47       	mov	r7,	r11	;
    1e50:	08 12       	push	r8		;
    1e52:	30 12 ef 1c 	push	#7407		;#0x1cef
    1e56:	b0 12 22 87 	call	#-30942	;#0x8722
    1e5a:	21 52       	add	#4,	r1	;r2 As==10
    1e5c:	09 48       	mov	r8,	r9	;
    1e5e:	09 59       	rla	r9		;
    1e60:	09 59       	rla	r9		;
    1e62:	09 55       	add	r5,	r9	;
    1e64:	39 50 42 00 	add	#66,	r9	;#0x0042
    1e68:	1f 42 0e 26 	mov	&0x260e,r15	;0x260e
    1e6c:	0f 5b       	add	r11,	r15	;
    1e6e:	0e 4f       	mov	r15,	r14	;
    1e70:	0f 48       	mov	r8,	r15	;
    1e72:	b0 12 60 16 	call	#5728		;#0x1660
    1e76:	b0 12 26 15 	call	#5414		;#0x1526
    1e7a:	7f 90 0a 00 	cmp.b	#10,	r15	;#0x000a
    1e7e:	c1 24       	jz	$+388    	;abs 0x2002
    1e80:	7f 90 0d 00 	cmp.b	#13,	r15	;#0x000d
    1e84:	be 24       	jz	$+382    	;abs 0x2002
    1e86:	1a 93       	cmp	#1,	r10	;r3 As==01
    1e88:	b7 24       	jz	$+368    	;abs 0x1ff8
    1e8a:	2a 93       	cmp	#2,	r10	;r3 As==10
    1e8c:	ae 38       	jl	$+350    	;abs 0x1fea
    1e8e:	2a 93       	cmp	#2,	r10	;r3 As==10
    1e90:	a0 24       	jz	$+322    	;abs 0x1fd2
    1e92:	07 93       	cmp	#0,	r7	;r3 As==00
    1e94:	e9 27       	jz	$-44     	;abs 0x1e68
    1e96:	0e 43       	clr	r14		;
    1e98:	0f 48       	mov	r8,	r15	;
    1e9a:	b0 12 4a 18 	call	#6218		;#0x184a
    1e9e:	08 46       	mov	r6,	r8	;
    1ea0:	36 90 19 00 	cmp	#25,	r6	;#0x0019
    1ea4:	a7 3b       	jl	$-176    	;abs 0x1df4
    1ea6:	08 43       	clr	r8		;
    1ea8:	1e 43       	mov	#1,	r14	;r3 As==01
    1eaa:	0f 48       	mov	r8,	r15	;
    1eac:	b0 12 5c 19 	call	#6492		;#0x195c
    1eb0:	08 12       	push	r8		;
    1eb2:	30 12 f8 1c 	push	#7416		;#0x1cf8
    1eb6:	b0 12 22 87 	call	#-30942	;#0x8722
    1eba:	06 43       	clr	r6		;
    1ebc:	37 40 c8 00 	mov	#200,	r7	;#0x00c8
    1ec0:	21 52       	add	#4,	r1	;r2 As==10
    1ec2:	09 48       	mov	r8,	r9	;
    1ec4:	09 59       	rla	r9		;
    1ec6:	0a 49       	mov	r9,	r10	;
    1ec8:	0e 47       	mov	r7,	r14	;
    1eca:	0f 48       	mov	r8,	r15	;
    1ecc:	b0 12 10 16 	call	#5648		;#0x1610
    1ed0:	3f 40 f4 01 	mov	#500,	r15	;#0x01f4
    1ed4:	b0 12 ac 33 	call	#13228		;#0x33ac
    1ed8:	0b 49       	mov	r9,	r11	;
    1eda:	0b 5b       	rla	r11		;
    1edc:	0b 5b       	rla	r11		;
    1ede:	0b 5b       	rla	r11		;
    1ee0:	0b 5b       	rla	r11		;
    1ee2:	09 4a       	mov	r10,	r9	;
    1ee4:	0b 5a       	add	r10,	r11	;
    1ee6:	0b 5a       	add	r10,	r11	;
    1ee8:	0b 5a       	add	r10,	r11	;
    1eea:	3b 50 6c 02 	add	#620,	r11	;#0x026c
    1eee:	3c 40 19 00 	mov	#25,	r12	;#0x0019
    1ef2:	0d 41       	mov	r1,	r13	;
    1ef4:	1e 4b 24 00 	mov	36(r11),r14	;
    1ef8:	5f 43       	mov.b	#1,	r15	;r3 As==01
    1efa:	b0 12 c2 53 	call	#21442		;#0x53c2
    1efe:	11 12 02 00 	push	2(r1)		;
    1f02:	30 12 f8 1c 	push	#7416		;#0x1cf8
    1f06:	b0 12 22 87 	call	#-30942	;#0x8722
    1f0a:	0f 47       	mov	r7,	r15	;
    1f0c:	1f 81 04 00 	sub	4(r1),	r15	;
    1f10:	06 5f       	add	r15,	r6	;
    1f12:	21 52       	add	#4,	r1	;r2 As==10
    1f14:	37 50 ce ff 	add	#-50,	r7	;#0xffce
    1f18:	17 93       	cmp	#1,	r7	;r3 As==01
    1f1a:	d6 37       	jge	$-82     	;abs 0x1ec8
    1f1c:	0e 43       	clr	r14		;
    1f1e:	0f 48       	mov	r8,	r15	;
    1f20:	b0 12 10 16 	call	#5648		;#0x1610
    1f24:	3f 40 f4 01 	mov	#500,	r15	;#0x01f4
    1f28:	b0 12 ac 33 	call	#13228		;#0x33ac
    1f2c:	3c 40 19 00 	mov	#25,	r12	;#0x0019
    1f30:	0d 41       	mov	r1,	r13	;
    1f32:	1e 4b 24 00 	mov	36(r11),r14	;
    1f36:	5f 43       	mov.b	#1,	r15	;r3 As==01
    1f38:	b0 12 c2 53 	call	#21442		;#0x53c2
    1f3c:	11 12 02 00 	push	2(r1)		;
    1f40:	30 12 fc 1c 	push	#7420		;#0x1cfc
    1f44:	b0 12 22 87 	call	#-30942	;#0x8722
    1f48:	0f 48       	mov	r8,	r15	;
    1f4a:	3f 50 33 00 	add	#51,	r15	;#0x0033
    1f4e:	5e 41 04 00 	mov.b	4(r1),	r14	;
    1f52:	b0 12 7a 23 	call	#9082		;#0x237a
    1f56:	0b 46       	mov	r6,	r11	;
    1f58:	06 93       	cmp	#0,	r6	;r3 As==00
    1f5a:	38 38       	jl	$+114    	;abs 0x1fcc
    1f5c:	0b 11       	rra	r11		;
    1f5e:	0b 11       	rra	r11		;
    1f60:	0b 12       	push	r11		;
    1f62:	30 12 06 1d 	push	#7430		;#0x1d06
    1f66:	b0 12 22 87 	call	#-30942	;#0x8722
    1f6a:	0f 48       	mov	r8,	r15	;
    1f6c:	3f 50 4c 00 	add	#76,	r15	;#0x004c
    1f70:	4e 4b       	mov.b	r11,	r14	;
    1f72:	b0 12 7a 23 	call	#9082		;#0x237a
    1f76:	0e 43       	clr	r14		;
    1f78:	0f 48       	mov	r8,	r15	;
    1f7a:	b0 12 5c 19 	call	#6492		;#0x195c
    1f7e:	31 52       	add	#8,	r1	;r2 As==11
    1f80:	18 53       	inc	r8		;
    1f82:	38 90 19 00 	cmp	#25,	r8	;#0x0019
    1f86:	90 3b       	jl	$-222    	;abs 0x1ea8
    1f88:	30 12 12 1d 	push	#7442		;#0x1d12
    1f8c:	b0 12 22 87 	call	#-30942	;#0x8722
    1f90:	21 53       	incd	r1		;
    1f92:	b0 12 26 15 	call	#5414		;#0x1526
    1f96:	7f 90 79 00 	cmp.b	#121,	r15	;#0x0079
    1f9a:	12 24       	jz	$+38     	;abs 0x1fc0
    1f9c:	7f 90 59 00 	cmp.b	#89,	r15	;#0x0059
    1fa0:	0f 24       	jz	$+32     	;abs 0x1fc0
    1fa2:	7f 90 6e 00 	cmp.b	#110,	r15	;#0x006e
    1fa6:	06 24       	jz	$+14     	;abs 0x1fb4
    1fa8:	7f 90 4e 00 	cmp.b	#78,	r15	;#0x004e
    1fac:	03 24       	jz	$+8      	;abs 0x1fb4
    1fae:	30 12 43 1d 	push	#7491		;#0x1d43
    1fb2:	ec 3f       	jmp	$-38     	;abs 0x1f8c
    1fb4:	30 12 62 1d 	push	#7522		;#0x1d62
    1fb8:	b0 12 22 87 	call	#-30942	;#0x8722
    1fbc:	21 53       	incd	r1		;
    1fbe:	5e 3c       	jmp	$+190    	;abs 0x207c
    1fc0:	0f 43       	clr	r15		;
    1fc2:	b0 12 e4 22 	call	#8932		;#0x22e4
    1fc6:	30 12 7a 1d 	push	#7546		;#0x1d7a
    1fca:	f6 3f       	jmp	$-18     	;abs 0x1fb8
    1fcc:	3b 50 03 00 	add	#3,	r11	;#0x0003
    1fd0:	c5 3f       	jmp	$-116    	;abs 0x1f5c
    1fd2:	7f 90 41 00 	cmp.b	#65,	r15	;#0x0041
    1fd6:	07 24       	jz	$+16     	;abs 0x1fe6
    1fd8:	7f 90 42 00 	cmp.b	#66,	r15	;#0x0042
    1fdc:	02 24       	jz	$+6      	;abs 0x1fe2
    1fde:	0a 43       	clr	r10		;
    1fe0:	58 3f       	jmp	$-334    	;abs 0x1e92
    1fe2:	1b 53       	inc	r11		;
    1fe4:	fc 3f       	jmp	$-6      	;abs 0x1fde
    1fe6:	3b 53       	add	#-1,	r11	;r3 As==11
    1fe8:	fa 3f       	jmp	$-10     	;abs 0x1fde
    1fea:	0a 93       	cmp	#0,	r10	;r3 As==00
    1fec:	52 23       	jnz	$-346    	;abs 0x1e92
    1fee:	7f 90 1b 00 	cmp.b	#27,	r15	;#0x001b
    1ff2:	4f 23       	jnz	$-352    	;abs 0x1e92
    1ff4:	1a 43       	mov	#1,	r10	;r3 As==01
    1ff6:	4d 3f       	jmp	$-356    	;abs 0x1e92
    1ff8:	7f 90 5b 00 	cmp.b	#91,	r15	;#0x005b
    1ffc:	f0 23       	jnz	$-30     	;abs 0x1fde
    1ffe:	2a 43       	mov	#2,	r10	;r3 As==10
    2000:	48 3f       	jmp	$-366    	;abs 0x1e92
    2002:	4e 4b       	mov.b	r11,	r14	;
    2004:	0f 48       	mov	r8,	r15	;
    2006:	3f 50 1a 00 	add	#26,	r15	;#0x001a
    200a:	b0 12 7a 23 	call	#9082		;#0x237a
    200e:	1f 42 0e 26 	mov	&0x260e,r15	;0x260e
    2012:	0f 5b       	add	r11,	r15	;
    2014:	0f 12       	push	r15		;
    2016:	0b 12       	push	r11		;
    2018:	30 12 92 1d 	push	#7570		;#0x1d92
    201c:	b0 12 22 87 	call	#-30942	;#0x8722
    2020:	17 43       	mov	#1,	r7	;r3 As==01
    2022:	c9 4b 01 00 	mov.b	r11,	1(r9)	;
    2026:	31 50 06 00 	add	#6,	r1	;#0x0006
    202a:	33 3f       	jmp	$-408    	;abs 0x1e92
    202c:	7f 90 41 00 	cmp.b	#65,	r15	;#0x0041
    2030:	07 24       	jz	$+16     	;abs 0x2040
    2032:	7f 90 42 00 	cmp.b	#66,	r15	;#0x0042
    2036:	02 24       	jz	$+6      	;abs 0x203c
    2038:	0a 43       	clr	r10		;
    203a:	06 3f       	jmp	$-498    	;abs 0x1e48
    203c:	1b 53       	inc	r11		;
    203e:	fc 3f       	jmp	$-6      	;abs 0x2038
    2040:	3b 53       	add	#-1,	r11	;r3 As==11
    2042:	fa 3f       	jmp	$-10     	;abs 0x2038
    2044:	0a 93       	cmp	#0,	r10	;r3 As==00
    2046:	00 23       	jnz	$-510    	;abs 0x1e48
    2048:	7f 90 1b 00 	cmp.b	#27,	r15	;#0x001b
    204c:	fd 22       	jnz	$-516    	;abs 0x1e48
    204e:	1a 43       	mov	#1,	r10	;r3 As==01
    2050:	fb 3e       	jmp	$-520    	;abs 0x1e48
    2052:	7f 90 5b 00 	cmp.b	#91,	r15	;#0x005b
    2056:	f0 23       	jnz	$-30     	;abs 0x2038
    2058:	2a 43       	mov	#2,	r10	;r3 As==10
    205a:	f6 3e       	jmp	$-530    	;abs 0x1e48
    205c:	4e 4b       	mov.b	r11,	r14	;
    205e:	0f 46       	mov	r6,	r15	;
    2060:	b0 12 7a 23 	call	#9082		;#0x237a
    2064:	0b 12       	push	r11		;
    2066:	30 12 9a 1d 	push	#7578		;#0x1d9a
    206a:	b0 12 22 87 	call	#-30942	;#0x8722
    206e:	17 43       	mov	#1,	r7	;r3 As==01
    2070:	0f 49       	mov	r9,	r15	;
    2072:	0f 55       	add	r5,	r15	;
    2074:	cf 4b 42 00 	mov.b	r11,	66(r15)	;
    2078:	21 52       	add	#4,	r1	;r2 As==10
    207a:	e6 3e       	jmp	$-562    	;abs 0x1e48
    207c:	21 52       	add	#4,	r1	;r2 As==10
    207e:	35 41       	pop	r5		;
    2080:	36 41       	pop	r6		;
    2082:	37 41       	pop	r7		;
    2084:	38 41       	pop	r8		;
    2086:	39 41       	pop	r9		;
    2088:	3a 41       	pop	r10		;
    208a:	3b 41       	pop	r11		;
    208c:	30 41       	ret			
    208e:	0a 0d       	.word	0x0d0a;	????
    2090:	43 75       	.word	0x7543;	????
    2092:	72 72       	subc.b	#8,	r2	;r2 As==11
    2094:	65 6e       	addc.b	@r14,	r5	;
    2096:	74 20       	jnz	$+234    	;abs 0x2180
    2098:	49 6e       	addc.b	r14,	r9	;
    209a:	70 75       	subc.b	@r5+,	r0	;
    209c:	74 20       	jnz	$+234    	;abs 0x2186
    209e:	43 61       	.word	0x6143;	????
    20a0:	6c 69       	addc.b	@r9,	r12	;
    20a2:	62 72       	subc.b	#4,	r2	;r2 As==10
    20a4:	61 74       	subc.b	@r4,	r1	;
    20a6:	69 6f       	addc.b	@r15,	r9	;
    20a8:	6e 0a       	.word	0x0a6e;	????
    20aa:	0d 00       	.word	0x000d;	????

000020ac <current_input_calibration>:
    20ac:	30 12 8e 20 	push	#8334		;#0x208e
    20b0:	b0 12 22 87 	call	#-30942	;#0x8722
    20b4:	21 53       	incd	r1		;
    20b6:	30 41       	ret			
    20b8:	0a 0d       	.word	0x0d0a;	????
    20ba:	56 6f 6c 74 	addc.b	29804(r15),r6	;
    20be:	61 67       	addc.b	@r7,	r1	;
    20c0:	65 20       	jnz	$+204    	;abs 0x218c
    20c2:	49 6e       	addc.b	r14,	r9	;
    20c4:	70 75       	subc.b	@r5+,	r0	;
    20c6:	74 20       	jnz	$+234    	;abs 0x21b0
    20c8:	20 43       	br	#2		;r3 As==10
    20ca:	61 6c       	addc.b	@r12,	r1	;
    20cc:	69 62       	addc.b	#4,	r9	;r2 As==10
    20ce:	72 61       	addc.b	@r1+,	r2	;
    20d0:	74 69       	addc.b	@r9+,	r4	;
    20d2:	6f 6e       	addc.b	@r14,	r15	;
    20d4:	0a 0d       	.word	0x0d0a;	????
	...

000020d8 <voltage_input_calibration>:
    20d8:	30 12 b8 20 	push	#8376		;#0x20b8
    20dc:	b0 12 22 87 	call	#-30942	;#0x8722
    20e0:	21 53       	incd	r1		;
    20e2:	30 41       	ret			

000020e4 <Letext>:
    20e4:	45 78       	subc.b	r8,	r5	;
    20e6:	74 65       	addc.b	@r5+,	r4	;
    20e8:	72 6e       	addc.b	@r14+,	r2	;
    20ea:	61 6c       	addc.b	@r12,	r1	;
    20ec:	20 46       	br	@r6		;
    20ee:	6c 61       	addc.b	@r1,	r12	;
    20f0:	73 68       	.word	0x6873;	????
    20f2:	20 53       	incd	r0		;
    20f4:	52 41 4d 20 	mov.b	8269(r1),r2	;
    20f8:	42 75       	subc.b	r5,	r2	;
    20fa:	66 66       	addc.b	@r6,	r6	;
    20fc:	65 72       	subc.b	#4,	r5	;r2 As==10
    20fe:	20 31       	jn	$+578    	;abs 0x2340
    2100:	20 46       	br	@r6		;
    2102:	69 6c       	addc.b	@r12,	r9	;
    2104:	6c 20       	jnz	$+218    	;abs 0x21de
    2106:	00 1b       	.word	0x1b00;	????
    2108:	5b 33       	jn	$-328    	;abs 0x1fc0
    210a:	32 6d       	addc	@r13+,	r2	;
    210c:	00 5b       	add	r11,	r0	;
    210e:	50 41 53 53 	br	21331(r1)		;
    2112:	45 44       	mov.b	r4,	r5	;
    2114:	5d 0a       	.word	0x0a5d;	????
    2116:	0d 00       	.word	0x000d;	????
    2118:	1b 5b 33 30 	add	12339(r11),r11	;
    211c:	6d 00       	.word	0x006d;	????
    211e:	45 78       	subc.b	r8,	r5	;
    2120:	74 65       	addc.b	@r5+,	r4	;
    2122:	72 6e       	addc.b	@r14+,	r2	;
    2124:	61 6c       	addc.b	@r12,	r1	;
    2126:	20 46       	br	@r6		;
    2128:	6c 61       	addc.b	@r1,	r12	;
    212a:	73 68       	.word	0x6873;	????
    212c:	20 53       	incd	r0		;
    212e:	52 41 4d 20 	mov.b	8269(r1),r2	;
    2132:	42 75       	subc.b	r5,	r2	;
    2134:	66 66       	addc.b	@r6,	r6	;
    2136:	65 72       	subc.b	#4,	r5	;r2 As==10
    2138:	20 32       	jn	$-958    	;abs 0x1d7a
    213a:	20 46       	br	@r6		;
    213c:	69 6c       	addc.b	@r12,	r9	;
    213e:	6c 20       	jnz	$+218    	;abs 0x2218
    2140:	00 1b       	.word	0x1b00;	????
    2142:	5b 33       	jn	$-328    	;abs 0x1ffa
    2144:	31 6d       	addc	@r13+,	r1	;
    2146:	00 5b       	add	r11,	r0	;
    2148:	46 41       	mov.b	r1,	r6	;
    214a:	49 4c       	mov.b	r12,	r9	;
    214c:	45 44       	mov.b	r4,	r5	;
    214e:	5d 0a       	.word	0x0a5d;	????
    2150:	0d 00       	.word	0x000d;	????

00002152 <flash_integrity_test>:
#include <signal.h>
#include "ueaclib.h"
#include "external_flash.h"

int flash_integrity_test(void) {
    2152:	0b 12       	push	r11		;
    2154:	0a 12       	push	r10		;
    2156:	09 12       	push	r9		;
    2158:	08 12       	push	r8		;
  enum {PASS,FAIL};
  int i,fail_flag; 
  unsigned char data=0;
    215a:	49 43       	clr.b	r9		;
  // unsigned short page=0;
  // printf("### Flash Tests ###\n\r");
  // SRAM BUFFER 1

  //  poll_status_register_blocking();                  // Wait for the flash page erase/write to complete 
  fail_flag=PASS;
    215c:	08 43       	clr	r8		;
  data=0;

  for (i=0;i<PAGE_SIZE;i++) {
    215e:	0a 43       	clr	r10		;
    buffer1_write((unsigned short)i,data++);         // SRAM Buffer 1 Fill 
    2160:	4f 49       	mov.b	r9,	r15	;
    2162:	59 53       	inc.b	r9		;
    2164:	4e 4f       	mov.b	r15,	r14	;
    2166:	0f 4a       	mov	r10,	r15	;
    2168:	b0 12 7a 23 	call	#9082		;#0x237a
    216c:	1a 53       	inc	r10		;
    216e:	3a 90 08 01 	cmp	#264,	r10	;#0x0108
    2172:	f6 3b       	jl	$-18     	;abs 0x2160
  }
  data=0;
    2174:	49 43       	clr.b	r9		;
  for (i=0;i<PAGE_SIZE;i++) {
    2176:	0a 43       	clr	r10		;
    if (data++!=buffer1_read(i)) {
    2178:	4b 49       	mov.b	r9,	r11	;
    217a:	59 53       	inc.b	r9		;
    217c:	0f 4a       	mov	r10,	r15	;
    217e:	b0 12 fa 23 	call	#9210		;#0x23fa
    2182:	4b 9f       	cmp.b	r15,	r11	;
    2184:	01 24       	jz	$+4      	;abs 0x2188
      fail_flag=FAIL;
    2186:	18 43       	mov	#1,	r8	;r3 As==01
    2188:	1a 53       	inc	r10		;
    218a:	3a 90 08 01 	cmp	#264,	r10	;#0x0108
    218e:	f4 3b       	jl	$-22     	;abs 0x2178
    }
  }
  printf("External Flash SRAM Buffer 1 Fill ");
    2190:	30 12 e4 20 	push	#8420		;#0x20e4
    2194:	b0 12 22 87 	call	#-30942	;#0x8722
  if (fail_flag==FAIL) {
    2198:	21 53       	incd	r1		;
    219a:	18 93       	cmp	#1,	r8	;r3 As==01
    219c:	3e 24       	jz	$+126    	;abs 0x221a
    printf(RED);
    printf("[FAILED]\n\r");
  }
  else {
    printf(GREEN);
    219e:	30 12 07 21 	push	#8455		;#0x2107
    21a2:	b0 12 22 87 	call	#-30942	;#0x8722
    printf("[PASSED]\n\r");
    21a6:	30 12 0d 21 	push	#8461		;#0x210d
    21aa:	b0 12 22 87 	call	#-30942	;#0x8722
    21ae:	21 52       	add	#4,	r1	;r2 As==10
  }
  printf(BLACK);
    21b0:	30 12 18 21 	push	#8472		;#0x2118
    21b4:	b0 12 22 87 	call	#-30942	;#0x8722

  // BUFFER 2
  fail_flag=PASS;
    21b8:	08 43       	clr	r8		;
  data=0;
    21ba:	49 43       	clr.b	r9		;
  for (i=0;i<PAGE_SIZE;i++) {
    21bc:	0a 43       	clr	r10		;
    21be:	21 53       	incd	r1		;
    buffer2_write((unsigned short)i,data++);         // SRAM Buffer 1 Fill 
    21c0:	4f 49       	mov.b	r9,	r15	;
    21c2:	59 53       	inc.b	r9		;
    21c4:	4e 4f       	mov.b	r15,	r14	;
    21c6:	0f 4a       	mov	r10,	r15	;
    21c8:	b0 12 ba 23 	call	#9146		;#0x23ba
    21cc:	1a 53       	inc	r10		;
    21ce:	3a 90 08 01 	cmp	#264,	r10	;#0x0108
    21d2:	f6 3b       	jl	$-18     	;abs 0x21c0
  }
  data=0;
    21d4:	49 43       	clr.b	r9		;
  for (i=0;i<PAGE_SIZE;i++) {
    21d6:	0a 43       	clr	r10		;
    if (data++!=buffer2_read(i)) {
    21d8:	4b 49       	mov.b	r9,	r11	;
    21da:	59 53       	inc.b	r9		;
    21dc:	0f 4a       	mov	r10,	r15	;
    21de:	b0 12 3c 24 	call	#9276		;#0x243c
    21e2:	4b 9f       	cmp.b	r15,	r11	;
    21e4:	01 24       	jz	$+4      	;abs 0x21e8
      fail_flag=FAIL;
    21e6:	18 43       	mov	#1,	r8	;r3 As==01
    21e8:	1a 53       	inc	r10		;
    21ea:	3a 90 08 01 	cmp	#264,	r10	;#0x0108
    21ee:	f4 3b       	jl	$-22     	;abs 0x21d8
    }
  }
  printf("External Flash SRAM Buffer 2 Fill ");
    21f0:	30 12 1e 21 	push	#8478		;#0x211e
    21f4:	b0 12 22 87 	call	#-30942	;#0x8722
  if (fail_flag==FAIL) {
    21f8:	21 53       	incd	r1		;
    21fa:	18 93       	cmp	#1,	r8	;r3 As==01
    21fc:	07 24       	jz	$+16     	;abs 0x220c
    printf(RED);
    printf("[FAILED]\n\r");
  }
  else {
    printf(GREEN);
    21fe:	30 12 07 21 	push	#8455		;#0x2107
    2202:	b0 12 22 87 	call	#-30942	;#0x8722
    printf("[PASSED]\n\r");
    2206:	30 12 0d 21 	push	#8461		;#0x210d
    220a:	0e 3c       	jmp	$+30     	;abs 0x2228
    220c:	30 12 41 21 	push	#8513		;#0x2141
    2210:	b0 12 22 87 	call	#-30942	;#0x8722
    2214:	30 12 47 21 	push	#8519		;#0x2147
    2218:	07 3c       	jmp	$+16     	;abs 0x2228
    221a:	30 12 41 21 	push	#8513		;#0x2141
    221e:	b0 12 22 87 	call	#-30942	;#0x8722
    2222:	30 12 47 21 	push	#8519		;#0x2147
    2226:	c1 3f       	jmp	$-124    	;abs 0x21aa
    2228:	b0 12 22 87 	call	#-30942	;#0x8722
    222c:	21 52       	add	#4,	r1	;r2 As==10
  }
  printf(BLACK);
    222e:	30 12 18 21 	push	#8472		;#0x2118
    2232:	b0 12 22 87 	call	#-30942	;#0x8722
  
  // FLASH PAGES
/*   fail_flag=PASS; */
/*   printf("External Flash Array Write \r"); */
/*   for (page=0;page<NUMBER_PAGES;page++){ */
/*     printf("External Flash Array Write %d\r",page); */
/*     buffer1_to_page_e(page); */
/*     poll_status_register_blocking();                  // Wait for the flash page erase/write to complete */
/*     start_main_array_read(page,0); */
/*     data=0; */
/*     for (i=0;i<PAGE_SIZE;i++) { */
/*       if (data++!=send_spi_byte(0)) { */
/*         fail_flag=FAIL; */
/*       } */
/*     } */
/*     end_main_array_read(); */
/*   } */
/*   printf("External Flash Array Write "); */
/*   if (fail_flag==FAIL) { */
/*     printf(RED); */
/*     printf("[FAILED]\n\r"); */
/*   } */
/*   else { */
/*     printf(GREEN); */
/*     printf("[PASSED]\n\r"); */
/*   } */
/*   printf(BLACK); */
  return (0);
    2236:	21 53       	incd	r1		;
}
    2238:	0f 43       	clr	r15		;
    223a:	38 41       	pop	r8		;
    223c:	39 41       	pop	r9		;
    223e:	3a 41       	pop	r10		;
    2240:	3b 41       	pop	r11		;
    2242:	30 41       	ret			

00002244 <start_main_array_read>:

void start_main_array_read(unsigned short page,unsigned short addr) {
    2244:	0b 12       	push	r11		;
    2246:	0a 12       	push	r10		;
    2248:	0b 4f       	mov	r15,	r11	;
    224a:	0a 4e       	mov	r14,	r10	;
  unsigned char page_temp; 

  nCS_LOW;
    224c:	f2 c2 1d 00 	bic.b	#8,	&0x001d	;r2 As==11
  // opcode
  send_spi_byte(0xE8);  // SPI Mode 0 or 3  
    2250:	7f 40 e8 ff 	mov.b	#-24,	r15	;#0xffe8
    2254:	b0 12 d2 14 	call	#5330		;#0x14d2

  // Prepare/send the page and address fields
  page_temp = (unsigned char)(page>>7);
    2258:	0f 4b       	mov	r11,	r15	;
    225a:	12 c3       	clrc			
    225c:	0f 10       	rrc	r15		;
    225e:	0f 11       	rra	r15		;
    2260:	0f 11       	rra	r15		;
    2262:	0f 11       	rra	r15		;
    2264:	0f 11       	rra	r15		;
    2266:	0f 11       	rra	r15		;
    2268:	0f 11       	rra	r15		;
  send_spi_byte (page_temp);
    226a:	b0 12 d2 14 	call	#5330		;#0x14d2
  page_temp = (unsigned char) (page<<1);
    226e:	4f 4b       	mov.b	r11,	r15	;
    2270:	4f 5f       	rla.b	r15		;
  if (addr>0xff) {
    2272:	3a 90 00 01 	cmp	#256,	r10	;#0x0100
    2276:	01 28       	jnc	$+4      	;abs 0x227a
    page_temp |=0x01;
    2278:	5f d3       	bis.b	#1,	r15	;r3 As==01
  }
  send_spi_byte (page_temp);
    227a:	b0 12 d2 14 	call	#5330		;#0x14d2
  send_spi_byte ((unsigned char) addr);
    227e:	4f 4a       	mov.b	r10,	r15	;
    2280:	b0 12 d2 14 	call	#5330		;#0x14d2

  // additional bytes
  send_spi_byte(0x00);
    2284:	4f 43       	clr.b	r15		;
    2286:	b0 12 d2 14 	call	#5330		;#0x14d2
  send_spi_byte(0x00);
    228a:	4f 43       	clr.b	r15		;
    228c:	b0 12 d2 14 	call	#5330		;#0x14d2
  send_spi_byte(0x00);
    2290:	4f 43       	clr.b	r15		;
    2292:	b0 12 d2 14 	call	#5330		;#0x14d2
  send_spi_byte(0x00);
    2296:	4f 43       	clr.b	r15		;
    2298:	b0 12 d2 14 	call	#5330		;#0x14d2
}
    229c:	3a 41       	pop	r10		;
    229e:	3b 41       	pop	r11		;
    22a0:	30 41       	ret			

000022a2 <end_main_array_read>:
 
void end_main_array_read(void) {
  nCS_HIGH;
    22a2:	f2 d2 1d 00 	bis.b	#8,	&0x001d	;r2 As==11
}
    22a6:	30 41       	ret			

000022a8 <page_to_buffer1_compare>:

void page_to_buffer1_compare(unsigned short page) {
    22a8:	0b 12       	push	r11		;
    22aa:	0b 4f       	mov	r15,	r11	;
  unsigned char page_temp;
  nCS_LOW;
    22ac:	f2 c2 1d 00 	bic.b	#8,	&0x001d	;r2 As==11
  send_spi_byte(0x60);           // command for byte write to buff 1
    22b0:	7f 40 60 00 	mov.b	#96,	r15	;#0x0060
    22b4:	b0 12 d2 14 	call	#5330		;#0x14d2
  page_temp = (unsigned char)(page>>7);
    22b8:	0f 4b       	mov	r11,	r15	;
    22ba:	12 c3       	clrc			
    22bc:	0f 10       	rrc	r15		;
    22be:	0f 11       	rra	r15		;
    22c0:	0f 11       	rra	r15		;
    22c2:	0f 11       	rra	r15		;
    22c4:	0f 11       	rra	r15		;
    22c6:	0f 11       	rra	r15		;
    22c8:	0f 11       	rra	r15		;
  send_spi_byte (page_temp);
    22ca:	b0 12 d2 14 	call	#5330		;#0x14d2
  page_temp = (unsigned char) (page<<1);
    22ce:	4f 4b       	mov.b	r11,	r15	;
    22d0:	4f 5f       	rla.b	r15		;
  send_spi_byte (page_temp);
    22d2:	b0 12 d2 14 	call	#5330		;#0x14d2
  send_spi_byte (0x00);
    22d6:	4f 43       	clr.b	r15		;
    22d8:	b0 12 d2 14 	call	#5330		;#0x14d2
  nCS_HIGH;
    22dc:	f2 d2 1d 00 	bis.b	#8,	&0x001d	;r2 As==11
}
    22e0:	3b 41       	pop	r11		;
    22e2:	30 41       	ret			

000022e4 <buffer1_to_page_e>:

void buffer1_to_page_e(unsigned short page) {
    22e4:	0b 12       	push	r11		;
    22e6:	0b 4f       	mov	r15,	r11	;
  unsigned char page_temp;
  nCS_LOW;
    22e8:	f2 c2 1d 00 	bic.b	#8,	&0x001d	;r2 As==11
  send_spi_byte(0x83);       // 0x83 command for byte write to buff 1
    22ec:	7f 40 83 ff 	mov.b	#-125,	r15	;#0xff83
    22f0:	b0 12 d2 14 	call	#5330		;#0x14d2
  page_temp = (unsigned char)(page>>7);
    22f4:	0f 4b       	mov	r11,	r15	;
    22f6:	12 c3       	clrc			
    22f8:	0f 10       	rrc	r15		;
    22fa:	0f 11       	rra	r15		;
    22fc:	0f 11       	rra	r15		;
    22fe:	0f 11       	rra	r15		;
    2300:	0f 11       	rra	r15		;
    2302:	0f 11       	rra	r15		;
    2304:	0f 11       	rra	r15		;
  send_spi_byte (page_temp);
    2306:	b0 12 d2 14 	call	#5330		;#0x14d2
  page_temp = (unsigned char) (page<<1);
    230a:	4f 4b       	mov.b	r11,	r15	;
    230c:	4f 5f       	rla.b	r15		;
  send_spi_byte (page_temp);
    230e:	b0 12 d2 14 	call	#5330		;#0x14d2
  send_spi_byte (0x00);
    2312:	4f 43       	clr.b	r15		;
    2314:	b0 12 d2 14 	call	#5330		;#0x14d2
  nCS_HIGH;                 // starts the page erase and program 
    2318:	f2 d2 1d 00 	bis.b	#8,	&0x001d	;r2 As==11
}
    231c:	3b 41       	pop	r11		;
    231e:	30 41       	ret			

00002320 <buffer2_to_page_e>:

void buffer2_to_page_e(unsigned short page) {
    2320:	0b 12       	push	r11		;
    2322:	0b 4f       	mov	r15,	r11	;
  unsigned char page_temp;
  nCS_LOW;
    2324:	f2 c2 1d 00 	bic.b	#8,	&0x001d	;r2 As==11
  send_spi_byte(0x86);       // 0x86 command for byte write to buff 2
    2328:	7f 40 86 ff 	mov.b	#-122,	r15	;#0xff86
    232c:	b0 12 d2 14 	call	#5330		;#0x14d2
  page_temp = (unsigned char)(page>>7);
    2330:	0f 4b       	mov	r11,	r15	;
    2332:	12 c3       	clrc			
    2334:	0f 10       	rrc	r15		;
    2336:	0f 11       	rra	r15		;
    2338:	0f 11       	rra	r15		;
    233a:	0f 11       	rra	r15		;
    233c:	0f 11       	rra	r15		;
    233e:	0f 11       	rra	r15		;
    2340:	0f 11       	rra	r15		;
  send_spi_byte (page_temp);
    2342:	b0 12 d2 14 	call	#5330		;#0x14d2
  page_temp = (unsigned char) (page<<1);
    2346:	4f 4b       	mov.b	r11,	r15	;
    2348:	4f 5f       	rla.b	r15		;
  send_spi_byte (page_temp);
    234a:	b0 12 d2 14 	call	#5330		;#0x14d2
  send_spi_byte (0x00);
    234e:	4f 43       	clr.b	r15		;
    2350:	b0 12 d2 14 	call	#5330		;#0x14d2
  nCS_HIGH;                 // starts the page erase and program 
    2354:	f2 d2 1d 00 	bis.b	#8,	&0x001d	;r2 As==11
}
    2358:	3b 41       	pop	r11		;
    235a:	30 41       	ret			

0000235c <poll_status_register_blocking>:

unsigned char poll_status_register_blocking(void) {  
  unsigned char status;
  status = 0;
  nCS_LOW;  
    235c:	f2 c2 1d 00 	bic.b	#8,	&0x001d	;r2 As==11
  //  send_spi_byte(0x57);
  send_spi_byte(0xD7);
    2360:	7f 40 d7 ff 	mov.b	#-41,	r15	;#0xffd7
    2364:	b0 12 d2 14 	call	#5330		;#0x14d2
  while (!(status&0x80)) { 
    status = send_spi_byte(0x00); // send data to get the spi to clock
    2368:	4f 43       	clr.b	r15		;
    236a:	b0 12 d2 14 	call	#5330		;#0x14d2
    236e:	4f 93       	cmp.b	#0,	r15	;r3 As==00
    2370:	fb 37       	jge	$-8      	;abs 0x2368
  }
  nCS_HIGH;
    2372:	f2 d2 1d 00 	bis.b	#8,	&0x001d	;r2 As==11
  return (status); 
    2376:	7f f3       	and.b	#-1,	r15	;r3 As==11
}
    2378:	30 41       	ret			

0000237a <buffer1_write>:

void buffer1_write(unsigned short addr, unsigned char data_byte) {
    237a:	0b 12       	push	r11		;
    237c:	0a 12       	push	r10		;
    237e:	0b 4f       	mov	r15,	r11	;
    2380:	4a 4e       	mov.b	r14,	r10	;
  nCS_LOW;
    2382:	f2 c2 1d 00 	bic.b	#8,	&0x001d	;r2 As==11
  send_spi_byte(0x84);       // command for byte write to buff 1
    2386:	7f 40 84 ff 	mov.b	#-124,	r15	;#0xff84
    238a:	b0 12 d2 14 	call	#5330		;#0x14d2
  send_spi_byte(0x00);       // dummy byte
    238e:	4f 43       	clr.b	r15		;
    2390:	b0 12 d2 14 	call	#5330		;#0x14d2
  if (addr>0xFF) {
    2394:	3b 90 00 01 	cmp	#256,	r11	;#0x0100
    2398:	02 28       	jnc	$+6      	;abs 0x239e
    send_spi_byte(0x01);     // dummy byte except 
    239a:	5f 43       	mov.b	#1,	r15	;r3 As==01
    239c:	01 3c       	jmp	$+4      	;abs 0x23a0
  }
  else {
    send_spi_byte(0x00);     // dummy byte except 
    239e:	4f 43       	clr.b	r15		;
    23a0:	b0 12 d2 14 	call	#5330		;#0x14d2
  }  
  send_spi_byte((unsigned char) addr); // send the balance of the address
    23a4:	4f 4b       	mov.b	r11,	r15	;
    23a6:	b0 12 d2 14 	call	#5330		;#0x14d2
  send_spi_byte(data_byte);
    23aa:	4f 4a       	mov.b	r10,	r15	;
    23ac:	b0 12 d2 14 	call	#5330		;#0x14d2
  nCS_HIGH; 
    23b0:	f2 d2 1d 00 	bis.b	#8,	&0x001d	;r2 As==11
}
    23b4:	3a 41       	pop	r10		;
    23b6:	3b 41       	pop	r11		;
    23b8:	30 41       	ret			

000023ba <buffer2_write>:

void buffer2_write(unsigned short addr, unsigned char data_byte) {
    23ba:	0b 12       	push	r11		;
    23bc:	0a 12       	push	r10		;
    23be:	0b 4f       	mov	r15,	r11	;
    23c0:	4a 4e       	mov.b	r14,	r10	;
  nCS_LOW;
    23c2:	f2 c2 1d 00 	bic.b	#8,	&0x001d	;r2 As==11
  send_spi_byte(0x87);       // command for byte write to buff 2
    23c6:	7f 40 87 ff 	mov.b	#-121,	r15	;#0xff87
    23ca:	b0 12 d2 14 	call	#5330		;#0x14d2
  send_spi_byte(0x00);       // dummy byte
    23ce:	4f 43       	clr.b	r15		;
    23d0:	b0 12 d2 14 	call	#5330		;#0x14d2
  if (addr>0xFF) {
    23d4:	3b 90 00 01 	cmp	#256,	r11	;#0x0100
    23d8:	02 28       	jnc	$+6      	;abs 0x23de
    send_spi_byte(0x01);     // dummy byte except 
    23da:	5f 43       	mov.b	#1,	r15	;r3 As==01
    23dc:	01 3c       	jmp	$+4      	;abs 0x23e0
  }
  else {
    send_spi_byte(0x00);     // dummy byte except 
    23de:	4f 43       	clr.b	r15		;
    23e0:	b0 12 d2 14 	call	#5330		;#0x14d2
  }  
  send_spi_byte((unsigned char) addr); // send the balance of the address
    23e4:	4f 4b       	mov.b	r11,	r15	;
    23e6:	b0 12 d2 14 	call	#5330		;#0x14d2
  send_spi_byte(data_byte);
    23ea:	4f 4a       	mov.b	r10,	r15	;
    23ec:	b0 12 d2 14 	call	#5330		;#0x14d2
  nCS_HIGH; 
    23f0:	f2 d2 1d 00 	bis.b	#8,	&0x001d	;r2 As==11
}
    23f4:	3a 41       	pop	r10		;
    23f6:	3b 41       	pop	r11		;
    23f8:	30 41       	ret			

000023fa <buffer1_read>:

unsigned char buffer1_read(unsigned short addr) {
    23fa:	0b 12       	push	r11		;
    23fc:	0b 4f       	mov	r15,	r11	;
  unsigned char temp;
  nCS_LOW;
    23fe:	f2 c2 1d 00 	bic.b	#8,	&0x001d	;r2 As==11
  send_spi_byte(0xD4);       // command for byte write to buff 1
    2402:	7f 40 d4 ff 	mov.b	#-44,	r15	;#0xffd4
    2406:	b0 12 d2 14 	call	#5330		;#0x14d2
  send_spi_byte(0x00);       // dummy byte
    240a:	4f 43       	clr.b	r15		;
    240c:	b0 12 d2 14 	call	#5330		;#0x14d2
  if (addr>0xFF) {
    2410:	3b 90 00 01 	cmp	#256,	r11	;#0x0100
    2414:	02 28       	jnc	$+6      	;abs 0x241a
    send_spi_byte(0x01);     // MSB of buffer address
    2416:	5f 43       	mov.b	#1,	r15	;r3 As==01
    2418:	01 3c       	jmp	$+4      	;abs 0x241c
  }
  else {
    send_spi_byte(0x00);     // MSB of buffer address
    241a:	4f 43       	clr.b	r15		;
    241c:	b0 12 d2 14 	call	#5330		;#0x14d2
  }  
  send_spi_byte((unsigned char) addr); // send the balance of the address
    2420:	4f 4b       	mov.b	r11,	r15	;
    2422:	b0 12 d2 14 	call	#5330		;#0x14d2
  send_spi_byte(0x00);       // extra clocks required by the flash
    2426:	4f 43       	clr.b	r15		;
    2428:	b0 12 d2 14 	call	#5330		;#0x14d2
  temp=send_spi_byte(0x00);  // this is the data 
    242c:	4f 43       	clr.b	r15		;
    242e:	b0 12 d2 14 	call	#5330		;#0x14d2
  nCS_HIGH; 
    2432:	f2 d2 1d 00 	bis.b	#8,	&0x001d	;r2 As==11
  return(temp);
    2436:	7f f3       	and.b	#-1,	r15	;r3 As==11
}
    2438:	3b 41       	pop	r11		;
    243a:	30 41       	ret			

0000243c <buffer2_read>:

unsigned char buffer2_read(unsigned short addr) {
    243c:	0b 12       	push	r11		;
    243e:	0b 4f       	mov	r15,	r11	;
  unsigned char temp;
  nCS_LOW;
    2440:	f2 c2 1d 00 	bic.b	#8,	&0x001d	;r2 As==11
  send_spi_byte(0xD6);       // command for byte write to buff 1
    2444:	7f 40 d6 ff 	mov.b	#-42,	r15	;#0xffd6
    2448:	b0 12 d2 14 	call	#5330		;#0x14d2
  send_spi_byte(0x00);       // dummy byte
    244c:	4f 43       	clr.b	r15		;
    244e:	b0 12 d2 14 	call	#5330		;#0x14d2
  if (addr>0xFF) {
    2452:	3b 90 00 01 	cmp	#256,	r11	;#0x0100
    2456:	02 28       	jnc	$+6      	;abs 0x245c
    send_spi_byte(0x01);     // MSB of buffer address
    2458:	5f 43       	mov.b	#1,	r15	;r3 As==01
    245a:	01 3c       	jmp	$+4      	;abs 0x245e
  }
  else {
    send_spi_byte(0x00);     // MSB of buffer address
    245c:	4f 43       	clr.b	r15		;
    245e:	b0 12 d2 14 	call	#5330		;#0x14d2
  }  
  send_spi_byte((unsigned char) addr); // send the balance of the address
    2462:	4f 4b       	mov.b	r11,	r15	;
    2464:	b0 12 d2 14 	call	#5330		;#0x14d2
  send_spi_byte(0x00);       // extra clocks required by the flash
    2468:	4f 43       	clr.b	r15		;
    246a:	b0 12 d2 14 	call	#5330		;#0x14d2
  temp=send_spi_byte(0x00);  // this is the data 
    246e:	4f 43       	clr.b	r15		;
    2470:	b0 12 d2 14 	call	#5330		;#0x14d2
  nCS_HIGH; 
    2474:	f2 d2 1d 00 	bis.b	#8,	&0x001d	;r2 As==11
  return(temp);
    2478:	7f f3       	and.b	#-1,	r15	;r3 As==11
}
    247a:	3b 41       	pop	r11		;
    247c:	30 41       	ret			

0000247e <dac_translation>:
    247e:	70 01 71 01 72 01 72 01 73 01 74 01 74 01 75 01     p.q.r.r.s.t.t.u.
    248e:	75 01 76 01 77 01 77 01 78 01 78 01 79 01 7a 01     u.v.w.w.x.x.y.z.
    249e:	7a 01 7b 01 7c 01 7c 01 7d 01 7d 01 7e 01 7f 01     z.{.|.|.}.}.~...
    24ae:	7f 01 80 01 80 01 81 01 82 01 82 01 83 01 84 01     ................
    24be:	84 01 85 01 85 01 86 01 87 01 87 01 88 01 88 01     ................
    24ce:	89 01 8a 01 8a 01 8b 01 8c 01 8c 01 8d 01 8d 01     ................
    24de:	8e 01 8f 01 8f 01 90 01 90 01 91 01 92 01 92 01     ................
    24ee:	93 01 94 01 94 01 95 01 95 01 96 01 97 01 97 01     ................
    24fe:	98 01 99 01 99 01 9a 01 9a 01 9b 01 9c 01 9c 01     ................
    250e:	9d 01 9d 01 9e 01 9f 01 9f 01 a0 01 a1 01 a1 01     ................
    251e:	a2 01 a2 01 a3 01 a4 01 a4 01 a5 01 a5 01 a6 01     ................
    252e:	a7 01 a7 01 a8 01 a9 01 a9 01 aa 01 aa 01 ab 01     ................
    253e:	ac 01 ac 01 ad 01 ad 01 ae 01 af 01 af 01 b0 01     ................
    254e:	b1 01 b1 01 b2 01 b2 01 b3 01 b4 01 b4 01 b5 01     ................
    255e:	b5 01 b6 01 b7 01 b7 01 b8 01 b9 01 b9 01 ba 01     ................
    256e:	ba 01 bb 01 bc 01 bc 01 bd 01 bd 01 be 01 bf 01     ................
    257e:	bf 01 c0 01 c1 01 c1 01 c2 01 c2 01 c3 01 c4 01     ................
    258e:	c4 01 c5 01 c6 01 c6 01 c7 01 c7 01 c8 01 c9 01     ................
    259e:	c9 01 ca 01 ca 01 cb 01 cc 01 cc 01 cd 01 ce 01     ................
    25ae:	ce 01 cf 01 cf 01 d0 01 d1 01 d1 01 d2 01 d2 01     ................
    25be:	d3 01 d4 01 d4 01 d5 01 d6 01 d6 01 d7 01 d7 01     ................
    25ce:	d8 01 d9 01 d9 01 da 01 da 01 db 01 dc 01 dc 01     ................
    25de:	dd 01 de 01 de 01 df 01 df 01 e0 01 e1 01 e1 01     ................
    25ee:	e2 01 e2 01 e3 01 e4 01 e4 01 e5 01 e6 01 e6 01     ................
    25fe:	e7 01 e7 01 e8 01 e9 01 e9 01 ea 01 ea 01 eb 01     ................
    260e:	ec 01 ec 01 ed 01 ee 01 ee 01 ef 01 ef 01 f0 01     ................
    261e:	f1 01 f1 01 f2 01 f3 01 f3 01 f4 01 f4 01 f5 01     ................
    262e:	f6 01 f6 01 f7 01 f7 01 f8 01 f9 01 f9 01 fa 01     ................
    263e:	fb 01 fb 01 fc 01 fc 01 fd 01 fe 01 fe 01 ff 01     ................
    264e:	ff 01 00 02 01 02 01 02 02 02 03 02 03 02 04 02     ................
    265e:	04 02 05 02 06 02 06 02 07 02 07 02 08 02 09 02     ................
    266e:	09 02 0a 02 0b 02 0b 02 0c 02 0c 02 0d 02 0e 02     ................
    267e:	0e 02 0f 02 0f 02 10 02 11 02 11 02 12 02 13 02     ................
    268e:	13 02 14 02 14 02 15 02 16 02 16 02 17 02 18 02     ................
    269e:	18 02 19 02 19 02 1a 02 1b 02 1b 02 1c 02 1c 02     ................
    26ae:	1d 02 1e 02 1e 02 1f 02 20 02 20 02 21 02 21 02     ........ . .!.!.
    26be:	22 02 23 02 23 02 24 02 24 02 25 02 26 02 26 02     ".#.#.$.$.%.&.&.
    26ce:	27 02 28 02 28 02 29 02 29 02 2a 02 2b 02 2b 02     '.(.(.).).*.+.+.
    26de:	2c 02 2c 02 2d 02 2e 02 2e 02 2f 02 30 02 30 02     ,.,.-...../.0.0.
    26ee:	31 02 31 02 32 02 33 02 33 02 34 02 34 02 35 02     1.1.2.3.3.4.4.5.
    26fe:	36 02 36 02 37 02 38 02 38 02 39 02 39 02 3a 02     6.6.7.8.8.9.9.:.
    270e:	3b 02 3b 02 3c 02 3c 02 3d 02 3e 02 3e 02 3f 02     ;.;.<.<.=.>.>.?.
    271e:	40 02 40 02 41 02 41 02 42 02 43 02 43 02 44 02     @.@.A.A.B.C.C.D.
    272e:	45 02 45 02 46 02 46 02 47 02 48 02 48 02 49 02     E.E.F.F.G.H.H.I.
    273e:	49 02 4a 02 4b 02 4b 02 4c 02 4d 02 4d 02 4e 02     I.J.K.K.L.M.M.N.
    274e:	4e 02 4f 02 50 02 50 02 51 02 51 02 52 02 53 02     N.O.P.P.Q.Q.R.S.
    275e:	53 02 54 02 55 02 55 02 56 02 56 02 57 02 58 02     S.T.U.U.V.V.W.X.
    276e:	58 02 59 02 59 02 5a 02 5b 02 5b 02 5c 02 5d 02     X.Y.Y.Z.[.[.\.].
    277e:	5d 02 5e 02 5e 02 5f 02 60 02 60 02 61 02 61 02     ].^.^._.`.`.a.a.
    278e:	62 02 63 02 63 02 64 02 65 02 65 02 66 02 66 02     b.c.c.d.e.e.f.f.
    279e:	67 02 4e 4f 4b 0a 0d 00 30 2e 25 30 33 64 2c 00     g.NOK...0.%03d,.
    27ae:	4f 4b 0a 0d 00 25 64 2e 25 30 32 64 2c 00 2d 25     OK...%d.%02d,.-%
    27be:	64 2c 00 25 64 2c 00 2d 25 64 2c 25 64 2c 00 2a     d,.%d,.-%d,%d,.*
    27ce:	2c 2a 2c 00                                         ,*,.

000027d2 <ueac_execute_instruction>:
    27d2:	0b 12       	push	r11		;
    27d4:	0a 12       	push	r10		;
    27d6:	09 12       	push	r9		;
    27d8:	0b 4f       	mov	r15,	r11	;
    27da:	09 43       	clr	r9		;
    27dc:	df 93 00 00 	cmp.b	#1,	0(r15)	;r3 As==01
    27e0:	06 24       	jz	$+14     	;abs 0x27ee
      if (lla_report(system_state,&lla_data)==0) {
        printf("-%d,%d,",lla_data.input,lla_data.output);
      }
      else {
        printf("*,*,");
      }
#ifndef LINUX
#else 
      printf("UEAC_LLA_REPORT ");
#endif
      break;
    case UEAC_CAL:
#ifndef LINUX
      current_output_calibration(&ueac_state);
#else 
      printf("UEAC_CAL ");
#endif
      break;
    case UEAC_RST:
#ifndef LINUX
      printf("OK\n\r");
      system_reset();
#else 
      printf("UEAC_RST ");
#endif
      break;
    case UEAC_LON:
#ifndef LINUX
      led_screen_enable=1;
#else 
      printf("UEAC_LON ");
#endif
      break;
    case UEAC_LOF:
#ifndef LINUX
      led_screen_enable=0;
      clear_led_screen();
#else 
      printf("UEAC_LOF ");
#endif
      break;
    }
#ifndef LINUX
    printf("OK\n\r");
#else 
    printf("OK\n");
#endif
  }
  else {
#ifndef LINUX
    printf("NOK\n\r");
    27e2:	30 12 a0 27 	push	#10144		;#0x27a0
    27e6:	b0 12 22 87 	call	#-30942	;#0x8722
#else 
    printf("NOK\n");
#endif 
    return_val=1;
    27ea:	19 43       	mov	#1,	r9	;r3 As==01
    27ec:	52 3d       	jmp	$+678    	;abs 0x2a92
    27ee:	5f 4f 01 00 	mov.b	1(r15),	r15	;
    27f2:	3f 90 0d 00 	cmp	#13,	r15	;#0x000d
    27f6:	35 2c       	jc	$+108    	;abs 0x2862
    27f8:	0f 5f       	rla	r15		;
    27fa:	10 4f fe 27 	br	10238(r15)		;
    27fe:	18 28       	jnc	$+50     	;abs 0x2830
    2800:	a8 28       	jnc	$+338    	;abs 0x2952
    2802:	04 29       	jnc	$+522    	;abs 0x2a0c
    2804:	9a 29       	jnc	$+822    	;abs 0x2b3a
    2806:	fc 29       	jnc	$+1018   	;abs 0x2c00
    2808:	2a 2a       	jnc	$-938    	;abs 0x245e
    280a:	32 2a       	jnc	$-922    	;abs 0x2470
    280c:	3a 2a       	jnc	$-906    	;abs 0x2482
    280e:	42 2a       	jnc	$-890    	;abs 0x2494
    2810:	6a 2a       	jnc	$-810    	;abs 0x24e6
    2812:	78 2a       	jnc	$-782    	;abs 0x2504
    2814:	82 2a       	jnc	$-762    	;abs 0x251a
    2816:	88 2a       	jnc	$-750    	;abs 0x2528
    2818:	0a 43       	clr	r10		;
    281a:	0e 4b       	mov	r11,	r14	;
    281c:	4f 4a       	mov.b	r10,	r15	;
    281e:	b0 12 a2 2a 	call	#10914		;#0x2aa2
    2822:	0f 93       	cmp	#0,	r15	;r3 As==00
    2824:	23 24       	jz	$+72     	;abs 0x286c
    2826:	0f 4a       	mov	r10,	r15	;
    2828:	0f 5f       	rla	r15		;
    282a:	0f 5f       	rla	r15		;
    282c:	0f 5f       	rla	r15		;
    282e:	0f 5f       	rla	r15		;
    2830:	0f 5f       	rla	r15		;
    2832:	0e 4a       	mov	r10,	r14	;
    2834:	0e 5e       	rla	r14		;
    2836:	0f 5e       	add	r14,	r15	;
    2838:	0f 5e       	add	r14,	r15	;
    283a:	0f 5e       	add	r14,	r15	;
    283c:	0c 4a       	mov	r10,	r12	;
    283e:	3d 40 ce 07 	mov	#1998,	r13	;#0x07ce
    2842:	1e 4f 90 02 	mov	656(r15),r14	;
    2846:	5f 43       	mov.b	#1,	r15	;r3 As==01
    2848:	b0 12 c2 53 	call	#21442		;#0x53c2
    284c:	12 12 ce 07 	push	&0x07ce		;
    2850:	30 12 a6 27 	push	#10150		;#0x27a6
    2854:	b0 12 22 87 	call	#-30942	;#0x8722
    2858:	21 52       	add	#4,	r1	;r2 As==10
    285a:	1a 53       	inc	r10		;
    285c:	3a 90 19 00 	cmp	#25,	r10	;#0x0019
    2860:	dc 3b       	jl	$-70     	;abs 0x281a
    2862:	30 12 ae 27 	push	#10158		;#0x27ae
    2866:	b0 12 22 87 	call	#-30942	;#0x8722
    286a:	13 3d       	jmp	$+552    	;abs 0x2a92
    286c:	0f 4a       	mov	r10,	r15	;
    286e:	0f 5f       	rla	r15		;
    2870:	0f 5f       	rla	r15		;
    2872:	0f 5f       	rla	r15		;
    2874:	0f 5f       	rla	r15		;
    2876:	0f 5f       	rla	r15		;
    2878:	0e 4a       	mov	r10,	r14	;
    287a:	0e 5e       	rla	r14		;
    287c:	0f 5e       	add	r14,	r15	;
    287e:	0f 5e       	add	r14,	r15	;
    2880:	0f 5e       	add	r14,	r15	;
    2882:	0c 4a       	mov	r10,	r12	;
    2884:	3d 40 ce 07 	mov	#1998,	r13	;#0x07ce
    2888:	1e 4f 90 02 	mov	656(r15),r14	;
    288c:	4f 43       	clr.b	r15		;
    288e:	b0 12 c2 53 	call	#21442		;#0x53c2
    2892:	12 12 d0 07 	push	&0x07d0		;
    2896:	12 12 ce 07 	push	&0x07ce		;
    289a:	30 12 b3 27 	push	#10163		;#0x27b3
    289e:	b0 12 22 87 	call	#-30942	;#0x8722
    28a2:	31 50 06 00 	add	#6,	r1	;#0x0006
    28a6:	d9 3f       	jmp	$-76     	;abs 0x285a
    28a8:	0a 43       	clr	r10		;
    28aa:	0e 4b       	mov	r11,	r14	;
    28ac:	4f 4a       	mov.b	r10,	r15	;
    28ae:	b0 12 a2 2a 	call	#10914		;#0x2aa2
    28b2:	0f 93       	cmp	#0,	r15	;r3 As==00
    28b4:	1f 24       	jz	$+64     	;abs 0x28f4
    28b6:	0f 4a       	mov	r10,	r15	;
    28b8:	0f 5f       	rla	r15		;
    28ba:	0f 5f       	rla	r15		;
    28bc:	0f 5f       	rla	r15		;
    28be:	0f 5f       	rla	r15		;
    28c0:	0f 5f       	rla	r15		;
    28c2:	0e 4a       	mov	r10,	r14	;
    28c4:	0e 5e       	rla	r14		;
    28c6:	0f 5e       	add	r14,	r15	;
    28c8:	0f 5e       	add	r14,	r15	;
    28ca:	0f 5e       	add	r14,	r15	;
    28cc:	0c 4a       	mov	r10,	r12	;
    28ce:	3d 40 ce 07 	mov	#1998,	r13	;#0x07ce
    28d2:	1e 4f 90 02 	mov	656(r15),r14	;
    28d6:	5f 43       	mov.b	#1,	r15	;r3 As==01
    28d8:	b0 12 c2 53 	call	#21442		;#0x53c2
    28dc:	12 12 ce 07 	push	&0x07ce		;
    28e0:	30 12 bc 27 	push	#10172		;#0x27bc
    28e4:	b0 12 22 87 	call	#-30942	;#0x8722
    28e8:	21 52       	add	#4,	r1	;r2 As==10
    28ea:	1a 53       	inc	r10		;
    28ec:	3a 90 19 00 	cmp	#25,	r10	;#0x0019
    28f0:	dc 3b       	jl	$-70     	;abs 0x28aa
    28f2:	b7 3f       	jmp	$-144    	;abs 0x2862
    28f4:	0f 4a       	mov	r10,	r15	;
    28f6:	0f 5f       	rla	r15		;
    28f8:	0f 5b       	add	r11,	r15	;
    28fa:	1f 12 10 00 	push	16(r15)		;
    28fe:	30 12 c1 27 	push	#10177		;#0x27c1
    2902:	f0 3f       	jmp	$-30     	;abs 0x28e4
    2904:	5f 4b 04 00 	mov.b	4(r11),	r15	;
    2908:	4a 4f       	mov.b	r15,	r10	;
    290a:	0a 5a       	rla	r10		;
    290c:	0a 5f       	add	r15,	r10	;
    290e:	0a 5f       	add	r15,	r10	;
    2910:	0a 5f       	add	r15,	r10	;
    2912:	5f 4b 03 00 	mov.b	3(r11),	r15	;
    2916:	0a 5f       	add	r15,	r10	;
    2918:	3a 50 fa ff 	add	#-6,	r10	;#0xfffa
    291c:	0e 4b       	mov	r11,	r14	;
    291e:	4f 4a       	mov.b	r10,	r15	;
    2920:	b0 12 a2 2a 	call	#10914		;#0x2aa2
    2924:	0f 93       	cmp	#0,	r15	;r3 As==00
    2926:	1b 24       	jz	$+56     	;abs 0x295e
    2928:	0f 4a       	mov	r10,	r15	;
    292a:	0f 5f       	rla	r15		;
    292c:	0f 5f       	rla	r15		;
    292e:	0f 5f       	rla	r15		;
    2930:	0f 5f       	rla	r15		;
    2932:	0f 5f       	rla	r15		;
    2934:	0e 4a       	mov	r10,	r14	;
    2936:	0e 5e       	rla	r14		;
    2938:	0f 5e       	add	r14,	r15	;
    293a:	0f 5e       	add	r14,	r15	;
    293c:	0f 5e       	add	r14,	r15	;
    293e:	0c 4a       	mov	r10,	r12	;
    2940:	3d 40 ce 07 	mov	#1998,	r13	;#0x07ce
    2944:	1e 4f 90 02 	mov	656(r15),r14	;
    2948:	5f 43       	mov.b	#1,	r15	;r3 As==01
    294a:	b0 12 c2 53 	call	#21442		;#0x53c2
    294e:	12 12 ce 07 	push	&0x07ce		;
    2952:	30 12 a6 27 	push	#10150		;#0x27a6
    2956:	b0 12 22 87 	call	#-30942	;#0x8722
    295a:	21 52       	add	#4,	r1	;r2 As==10
    295c:	82 3f       	jmp	$-250    	;abs 0x2862
    295e:	0f 4a       	mov	r10,	r15	;
    2960:	0f 5f       	rla	r15		;
    2962:	0f 5f       	rla	r15		;
    2964:	0f 5f       	rla	r15		;
    2966:	0f 5f       	rla	r15		;
    2968:	0f 5f       	rla	r15		;
    296a:	0e 4a       	mov	r10,	r14	;
    296c:	0e 5e       	rla	r14		;
    296e:	0f 5e       	add	r14,	r15	;
    2970:	0f 5e       	add	r14,	r15	;
    2972:	0f 5e       	add	r14,	r15	;
    2974:	0c 4a       	mov	r10,	r12	;
    2976:	3d 40 ce 07 	mov	#1998,	r13	;#0x07ce
    297a:	1e 4f 90 02 	mov	656(r15),r14	;
    297e:	4f 43       	clr.b	r15		;
    2980:	b0 12 c2 53 	call	#21442		;#0x53c2
    2984:	12 12 d0 07 	push	&0x07d0		;
    2988:	12 12 ce 07 	push	&0x07ce		;
    298c:	30 12 b3 27 	push	#10163		;#0x27b3
    2990:	b0 12 22 87 	call	#-30942	;#0x8722
    2994:	31 50 06 00 	add	#6,	r1	;#0x0006
    2998:	64 3f       	jmp	$-310    	;abs 0x2862
    299a:	5f 4b 04 00 	mov.b	4(r11),	r15	;
    299e:	4a 4f       	mov.b	r15,	r10	;
    29a0:	0a 5a       	rla	r10		;
    29a2:	0a 5f       	add	r15,	r10	;
    29a4:	0a 5f       	add	r15,	r10	;
    29a6:	0a 5f       	add	r15,	r10	;
    29a8:	5f 4b 03 00 	mov.b	3(r11),	r15	;
    29ac:	0a 5f       	add	r15,	r10	;
    29ae:	3a 50 fa ff 	add	#-6,	r10	;#0xfffa
    29b2:	0e 4b       	mov	r11,	r14	;
    29b4:	4f 4a       	mov.b	r10,	r15	;
    29b6:	b0 12 a2 2a 	call	#10914		;#0x2aa2
    29ba:	0f 93       	cmp	#0,	r15	;r3 As==00
    29bc:	18 24       	jz	$+50     	;abs 0x29ee
    29be:	0f 4a       	mov	r10,	r15	;
    29c0:	0f 5f       	rla	r15		;
    29c2:	0f 5f       	rla	r15		;
    29c4:	0f 5f       	rla	r15		;
    29c6:	0f 5f       	rla	r15		;
    29c8:	0f 5f       	rla	r15		;
    29ca:	0e 4a       	mov	r10,	r14	;
    29cc:	0e 5e       	rla	r14		;
    29ce:	0f 5e       	add	r14,	r15	;
    29d0:	0f 5e       	add	r14,	r15	;
    29d2:	0f 5e       	add	r14,	r15	;
    29d4:	0c 4a       	mov	r10,	r12	;
    29d6:	3d 40 ce 07 	mov	#1998,	r13	;#0x07ce
    29da:	1e 4f 90 02 	mov	656(r15),r14	;
    29de:	5f 43       	mov.b	#1,	r15	;r3 As==01
    29e0:	b0 12 c2 53 	call	#21442		;#0x53c2
    29e4:	12 12 ce 07 	push	&0x07ce		;
    29e8:	30 12 bc 27 	push	#10172		;#0x27bc
    29ec:	b4 3f       	jmp	$-150    	;abs 0x2956
    29ee:	0a 5a       	rla	r10		;
    29f0:	0a 5b       	add	r11,	r10	;
    29f2:	1a 12 10 00 	push	16(r10)		;
    29f6:	30 12 c1 27 	push	#10177		;#0x27c1
    29fa:	ad 3f       	jmp	$-164    	;abs 0x2956
    29fc:	5f 4b 04 00 	mov.b	4(r11),	r15	;
    2a00:	4a 4f       	mov.b	r15,	r10	;
    2a02:	0a 5a       	rla	r10		;
    2a04:	0a 5f       	add	r15,	r10	;
    2a06:	0a 5f       	add	r15,	r10	;
    2a08:	0a 5f       	add	r15,	r10	;
    2a0a:	5f 4b 03 00 	mov.b	3(r11),	r15	;
    2a0e:	0a 5f       	add	r15,	r10	;
    2a10:	3a 50 fa ff 	add	#-6,	r10	;#0xfffa
    2a14:	1e 4b 08 00 	mov	8(r11),	r14	;
    2a18:	0f 4a       	mov	r10,	r15	;
    2a1a:	b0 12 10 16 	call	#5648		;#0x1610
    2a1e:	0a 5a       	rla	r10		;
    2a20:	0a 5b       	add	r11,	r10	;
    2a22:	9a 4b 08 00 	mov	8(r11),	16(r10)	;
    2a26:	10 00 
    2a28:	1c 3f       	jmp	$-454    	;abs 0x2862
    2a2a:	0f 4b       	mov	r11,	r15	;
    2a2c:	b0 12 14 56 	call	#22036		;#0x5614
    2a30:	18 3f       	jmp	$-462    	;abs 0x2862
    2a32:	0f 4b       	mov	r11,	r15	;
    2a34:	b0 12 e0 56 	call	#22240		;#0x56e0
    2a38:	14 3f       	jmp	$-470    	;abs 0x2862
    2a3a:	0f 4b       	mov	r11,	r15	;
    2a3c:	b0 12 42 57 	call	#22338		;#0x5742
    2a40:	10 3f       	jmp	$-478    	;abs 0x2862
    2a42:	3e 40 68 02 	mov	#616,	r14	;#0x0268
    2a46:	0f 4b       	mov	r11,	r15	;
    2a48:	b0 12 ea 55 	call	#21994		;#0x55ea
    2a4c:	0f 93       	cmp	#0,	r15	;r3 As==00
    2a4e:	07 20       	jnz	$+16     	;abs 0x2a5e
    2a50:	12 12 6a 02 	push	&0x026a		;
    2a54:	12 12 68 02 	push	&0x0268		;
    2a58:	30 12 c5 27 	push	#10181		;#0x27c5
    2a5c:	99 3f       	jmp	$-204    	;abs 0x2990
    2a5e:	30 12 cd 27 	push	#10189		;#0x27cd
    2a62:	b0 12 22 87 	call	#-30942	;#0x8722
    2a66:	21 53       	incd	r1		;
    2a68:	fc 3e       	jmp	$-518    	;abs 0x2862
    2a6a:	30 12 ae 27 	push	#10158		;#0x27ae
    2a6e:	b0 12 22 87 	call	#-30942	;#0x8722
    2a72:	b0 12 28 14 	call	#5160		;#0x1428
    2a76:	f7 3f       	jmp	$-16     	;abs 0x2a66
    2a78:	3f 40 86 06 	mov	#1670,	r15	;#0x0686
    2a7c:	b0 12 a0 1d 	call	#7584		;#0x1da0
    2a80:	f0 3e       	jmp	$-542    	;abs 0x2862
    2a82:	d2 43 10 02 	mov.b	#1,	&0x0210	;r3 As==01
    2a86:	ed 3e       	jmp	$-548    	;abs 0x2862
    2a88:	c2 43 10 02 	mov.b	#0,	&0x0210	;r3 As==00
    2a8c:	b0 12 36 18 	call	#6198		;#0x1836
    2a90:	e8 3e       	jmp	$-558    	;abs 0x2862
    2a92:	21 53       	incd	r1		;
  }
  system_state->instruction.command_reg=UEAC_READY;
    2a94:	cb 43 00 00 	mov.b	#0,	0(r11)	;r3 As==00
  return(return_val);
}
    2a98:	0f 49       	mov	r9,	r15	;
    2a9a:	39 41       	pop	r9		;
    2a9c:	3a 41       	pop	r10		;
    2a9e:	3b 41       	pop	r11		;
    2aa0:	30 41       	ret			

00002aa2 <lla_input_check>:

int lla_input_check(char chan,ueac_t *system_state) {
    2aa2:	0b 12       	push	r11		;
    2aa4:	4d 4f       	mov.b	r15,	r13	;
    2aa6:	0c 4e       	mov	r14,	r12	;
  int return_val=0;
    2aa8:	0b 43       	clr	r11		;
  if (system_state->lla_input&((unsigned long)(0x00000001<<chan))) {
    2aaa:	1f 43       	mov	#1,	r15	;r3 As==01
    2aac:	8d 11       	sxt	r13		;
    2aae:	0d 93       	cmp	#0,	r13	;r3 As==00
    2ab0:	03 24       	jz	$+8      	;abs 0x2ab8
    2ab2:	0f 5f       	rla	r15		;
    2ab4:	1d 83       	dec	r13		;
    2ab6:	fd 23       	jnz	$-4      	;abs 0x2ab2
    2ab8:	0e 4f       	mov	r15,	r14	;
    2aba:	0f 4e       	mov	r14,	r15	;
    2abc:	0f 5f       	rla	r15		;
    2abe:	0f 7f       	subc	r15,	r15	;
    2ac0:	3f e3       	inv	r15		;
    2ac2:	1e fc 0c 00 	and	12(r12),r14	;
    2ac6:	1f fc 0e 00 	and	14(r12),r15	;
    2aca:	0f de       	bis	r14,	r15	;
    2acc:	0f 93       	cmp	#0,	r15	;r3 As==00
    2ace:	01 24       	jz	$+4      	;abs 0x2ad2
    return_val=1;
    2ad0:	1b 43       	mov	#1,	r11	;r3 As==01
  }
  return (return_val);
}
    2ad2:	0f 4b       	mov	r11,	r15	;
    2ad4:	3b 41       	pop	r11		;
    2ad6:	30 41       	ret			
    2ad8:	78 69       	addc.b	@r9+,	r8	;
    2ada:	6e 3d       	jmp	$+734    	;abs 0x2db8
    2adc:	25 64       	addc	@r4,	r5	;
    2ade:	20 00       	.word	0x0020;	????
    2ae0:	79 69       	addc.b	@r9+,	r9	;
    2ae2:	6e 3d       	jmp	$+734    	;abs 0x2dc0
    2ae4:	25 64       	addc	@r4,	r5	;
    2ae6:	20 00       	.word	0x0020;	????
    2ae8:	78 6f       	addc.b	@r15+,	r8	;
    2aea:	75 74       	subc.b	@r4+,	r5	;
    2aec:	3d 25       	jz	$+636    	;abs 0x2d68
    2aee:	64 20       	jnz	$+202    	;abs 0x2bb8
    2af0:	00 79       	subc	r9,	r0	;
    2af2:	6f 75       	subc.b	@r5,	r15	;
    2af4:	74 3d       	jmp	$+746    	;abs 0x2dde
    2af6:	25 64       	addc	@r4,	r5	;
    2af8:	0a 00       	.word	0x000a;	????
    2afa:	64 65       	addc.b	@r5,	r4	;
    2afc:	73 63       	.word	0x6373;	????
    2afe:	72 69       	addc.b	@r9+,	r2	;
    2b00:	70 74       	subc.b	@r4+,	r0	;
    2b02:	6f 72       	subc.b	#4,	r15	;r2 As==10
    2b04:	3d 25       	jz	$+636    	;abs 0x2d80
    2b06:	64 20       	jnz	$+202    	;abs 0x2bd0
    2b08:	00 66       	addc	r6,	r0	;
    2b0a:	75 6e       	addc.b	@r14+,	r5	;
    2b0c:	63 74       	.word	0x7463;	????
    2b0e:	69 6f       	addc.b	@r15,	r9	;
    2b10:	6e 3d       	jmp	$+734    	;abs 0x2dee
    2b12:	25 64       	addc	@r4,	r5	;
    2b14:	20 00       	.word	0x0020;	????
    2b16:	70 65       	addc.b	@r5+,	r0	;
    2b18:	72 69       	addc.b	@r9+,	r2	;
    2b1a:	6f 64       	addc.b	@r4,	r15	;
    2b1c:	3d 25       	jz	$+636    	;abs 0x2d98
    2b1e:	64 0a       	.word	0x0a64;	????
	...

00002b22 <report_instruction>:

void report_instruction(ueac_t *system_state) {
    2b22:	0b 12       	push	r11		;
    2b24:	0b 4f       	mov	r15,	r11	;
  
  printf("xin=%d ",system_state->instruction.pin_x);
    2b26:	5f 4f 03 00 	mov.b	3(r15),	r15	;
    2b2a:	0f 12       	push	r15		;
    2b2c:	30 12 d8 2a 	push	#10968		;#0x2ad8
    2b30:	b0 12 22 87 	call	#-30942	;#0x8722
  printf("yin=%d ",system_state->instruction.pin_y);
    2b34:	5f 4b 04 00 	mov.b	4(r11),	r15	;
    2b38:	0f 12       	push	r15		;
    2b3a:	30 12 e0 2a 	push	#10976		;#0x2ae0
    2b3e:	b0 12 22 87 	call	#-30942	;#0x8722
  printf("xout=%d ",system_state->instruction.pin_x_alt);
    2b42:	5f 4b 05 00 	mov.b	5(r11),	r15	;
    2b46:	0f 12       	push	r15		;
    2b48:	30 12 e8 2a 	push	#10984		;#0x2ae8
    2b4c:	b0 12 22 87 	call	#-30942	;#0x8722
  printf("yout=%d\n",system_state->instruction.pin_y_alt);
    2b50:	5f 4b 06 00 	mov.b	6(r11),	r15	;
    2b54:	0f 12       	push	r15		;
    2b56:	30 12 f1 2a 	push	#10993		;#0x2af1
    2b5a:	b0 12 22 87 	call	#-30942	;#0x8722
  printf("descriptor=%d ",system_state->instruction.lla_descriptor);
    2b5e:	5f 4b 02 00 	mov.b	2(r11),	r15	;
    2b62:	0f 12       	push	r15		;
    2b64:	30 12 fa 2a 	push	#11002		;#0x2afa
    2b68:	b0 12 22 87 	call	#-30942	;#0x8722
  printf("function=%d ",system_state->instruction.lla_function);
    2b6c:	5f 4b 0a 00 	mov.b	10(r11),r15	;
    2b70:	0f 12       	push	r15		;
    2b72:	30 12 09 2b 	push	#11017		;#0x2b09
    2b76:	b0 12 22 87 	call	#-30942	;#0x8722
  printf("period=%d\n",system_state->instruction.lla_period);
    2b7a:	5f 4b 0b 00 	mov.b	11(r11),r15	;
    2b7e:	0f 12       	push	r15		;
    2b80:	30 12 16 2b 	push	#11030		;#0x2b16
    2b84:	b0 12 22 87 	call	#-30942	;#0x8722
    2b88:	31 50 1c 00 	add	#28,	r1	;#0x001c
}
    2b8c:	3b 41       	pop	r11		;
    2b8e:	30 41       	ret			

00002b90 <DELIMITER>:
    2b90:	2c 00                                               ,.

00002b92 <TERMINATOR>:
    2b92:	0a 00                                               ..

00002b94 <RST>:
    2b94:	52 53 54 0a 00                                      RST..

00002b99 <CAL>:
    2b99:	43 41 4c 0a 00                                      CAL..

00002b9e <LON>:
    2b9e:	4c 4f 4e 0a 00                                      LON..

00002ba3 <LOF>:
    2ba3:	4c 4f 46 0a 00                                      LOF..

00002ba8 <GRID_NUM_MIN>:
    2ba8:	31 00                                               1.

00002baa <GRID_NUM_MAX>:
    2baa:	35 00                                               5.

00002bac <delspace>:
    2bac:	0b 12       	push	r11		;
    2bae:	0c 4f       	mov	r15,	r12	;
    2bb0:	0b 43       	clr	r11		;
    2bb2:	6d 4f       	mov.b	@r15,	r13	;
    2bb4:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    2bb6:	0c 24       	jz	$+26     	;abs 0x2bd0
    2bb8:	7d 90 20 00 	cmp.b	#32,	r13	;#0x0020
    2bbc:	04 24       	jz	$+10     	;abs 0x2bc6
    2bbe:	ce 4d 00 00 	mov.b	r13,	0(r14)	;
    2bc2:	1e 53       	inc	r14		;
    2bc4:	1b 53       	inc	r11		;
    2bc6:	1c 53       	inc	r12		;
    2bc8:	6f 4c       	mov.b	@r12,	r15	;
    2bca:	4d 4f       	mov.b	r15,	r13	;
    2bcc:	4f 93       	cmp.b	#0,	r15	;r3 As==00
    2bce:	f4 23       	jnz	$-22     	;abs 0x2bb8
    2bd0:	ce 43 00 00 	mov.b	#0,	0(r14)	;r3 As==00
    2bd4:	0f 4b       	mov	r11,	r15	;
    2bd6:	3b 41       	pop	r11		;
    2bd8:	30 41       	ret			
    2bda:	52 00       	.word	0x0052;	????
    2bdc:	4e 4f       	mov.b	r15,	r14	;
    2bde:	4b 0a       	.word	0x0a4b;	????
    2be0:	0d 00       	.word	0x000d;	????
    2be2:	57 00       	.word	0x0057;	????
    2be4:	50 00       	.word	0x0050;	????
    2be6:	4c 00       	.word	0x004c;	????
    2be8:	41 00       	.word	0x0041;	????
    2bea:	44 00       	.word	0x0044;	????
    2bec:	45 00       	.word	0x0045;	????
    2bee:	56 00       	.word	0x0056;	????
    2bf0:	49 00       	.word	0x0049;	????
    2bf2:	46 6f       	addc.b	r15,	r6	;
    2bf4:	75 6e       	addc.b	@r14+,	r5	;
    2bf6:	64 20       	jnz	$+202    	;abs 0x2cc0
    2bf8:	54 65 72 6d 	addc.b	28018(r5),r4	;
    2bfc:	69 6e       	addc.b	@r14,	r9	;
    2bfe:	61 74       	subc.b	@r4,	r1	;
    2c00:	6f 72       	subc.b	#4,	r15	;r2 As==10
    2c02:	00 46       	br	r6		;
    2c04:	31 30       	jn	$+100    	;abs 0x2c68
    2c06:	20 25       	jz	$+578    	;abs 0x2e48
    2c08:	73 0a       	.word	0x0a73;	????
	...

00002c0c <interpreter>:
    2c0c:	0b 12       	push	r11		;
    2c0e:	0a 12       	push	r10		;
    2c10:	09 12       	push	r9		;
    2c12:	08 12       	push	r8		;
    2c14:	07 12       	push	r7		;
    2c16:	06 12       	push	r6		;
    2c18:	04 12       	push	r4		;
    2c1a:	31 80 16 00 	sub	#22,	r1	;#0x0016
    2c1e:	04 41       	mov	r1,	r4	;
    2c20:	08 4e       	mov	r14,	r8	;
    2c22:	47 43       	clr.b	r7		;
    2c24:	09 43       	clr	r9		;
    2c26:	06 43       	clr	r6		;
    2c28:	0a 43       	clr	r10		;
    2c2a:	6e 4e       	mov.b	@r14,	r14	;
    2c2c:	5e 93       	cmp.b	#1,	r14	;r3 As==01
    2c2e:	fe 27       	jz	$-2      	;abs 0x2c2c
    2c30:	3e 40 90 2b 	mov	#11152,	r14	;#0x2b90
    2c34:	b0 12 2a 8f 	call	#-28886	;#0x8f2a
    2c38:	0f 93       	cmp	#0,	r15	;r3 As==00
    2c3a:	26 24       	jz	$+78     	;abs 0x2c88
    2c3c:	0e 44       	mov	r4,	r14	;
    2c3e:	b0 12 ac 2b 	call	#11180		;#0x2bac
    2c42:	39 90 0a 00 	cmp	#10,	r9	;#0x000a
    2c46:	17 2c       	jc	$+48     	;abs 0x2c76
    2c48:	0f 49       	mov	r9,	r15	;
    2c4a:	0f 5f       	rla	r15		;
    2c4c:	10 4f 50 2c 	br	11344(r15)		;
    2c50:	64 2c       	jc	$+202    	;abs 0x2d1a
    2c52:	46 2d       	jc	$+654    	;abs 0x2ee0
    2c54:	4a 2e       	jc	$-874    	;abs 0x28ea
    2c56:	98 2e       	jc	$-718    	;abs 0x2988
    2c58:	e4 2e       	jc	$-566    	;abs 0x2a22
    2c5a:	7e 2f       	jc	$-258    	;abs 0x2b58
    2c5c:	b8 2f       	jc	$-142    	;abs 0x2bce
    2c5e:	f6 2f       	jc	$-18     	;abs 0x2c4c
    2c60:	34 30       	jn	$+106    	;abs 0x2cca
    2c62:	84 30       	jn	$+266    	;abs 0x2d6c
    2c64:	3e 40 da 2b 	mov	#11226,	r14	;#0x2bda
    2c68:	0f 44       	mov	r4,	r15	;
    2c6a:	b0 12 c4 8d 	call	#-29244	;#0x8dc4
    2c6e:	0f 93       	cmp	#0,	r15	;r3 As==00
    2c70:	1e 20       	jnz	$+62     	;abs 0x2cae
    2c72:	06 43       	clr	r6		;
    2c74:	19 43       	mov	#1,	r9	;r3 As==01
    2c76:	3e 40 90 2b 	mov	#11152,	r14	;#0x2b90
    2c7a:	0f 43       	clr	r15		;
    2c7c:	b0 12 2a 8f 	call	#-28886	;#0x8f2a
    2c80:	0f 93       	cmp	#0,	r15	;r3 As==00
    2c82:	02 24       	jz	$+6      	;abs 0x2c88
    2c84:	2a 93       	cmp	#2,	r10	;r3 As==10
    2c86:	da 23       	jnz	$-74     	;abs 0x2c3c
    2c88:	1a 93       	cmp	#1,	r10	;r3 As==01
    2c8a:	07 24       	jz	$+16     	;abs 0x2c9a
    2c8c:	30 12 dc 2b 	push	#11228		;#0x2bdc
    2c90:	b0 12 22 87 	call	#-30942	;#0x8722
    2c94:	21 53       	incd	r1		;
    2c96:	30 40 b0 30 	br	#0x30b0		;
    2c9a:	d8 43 00 00 	mov.b	#1,	0(r8)	;r3 As==01
    2c9e:	0f 48       	mov	r8,	r15	;
    2ca0:	b0 12 d2 27 	call	#10194		;#0x27d2
    2ca4:	6e 48       	mov.b	@r8,	r14	;
    2ca6:	5e 93       	cmp.b	#1,	r14	;r3 As==01
    2ca8:	fe 27       	jz	$-2      	;abs 0x2ca6
    2caa:	30 40 b0 30 	br	#0x30b0		;
    2cae:	3e 40 e2 2b 	mov	#11234,	r14	;#0x2be2
    2cb2:	0f 44       	mov	r4,	r15	;
    2cb4:	b0 12 c4 8d 	call	#-29244	;#0x8dc4
    2cb8:	0f 93       	cmp	#0,	r15	;r3 As==00
    2cba:	02 20       	jnz	$+6      	;abs 0x2cc0
    2cbc:	16 43       	mov	#1,	r6	;r3 As==01
    2cbe:	da 3f       	jmp	$-74     	;abs 0x2c74
    2cc0:	3e 40 e4 2b 	mov	#11236,	r14	;#0x2be4
    2cc4:	0f 44       	mov	r4,	r15	;
    2cc6:	b0 12 c4 8d 	call	#-29244	;#0x8dc4
    2cca:	0f 93       	cmp	#0,	r15	;r3 As==00
    2ccc:	02 20       	jnz	$+6      	;abs 0x2cd2
    2cce:	26 43       	mov	#2,	r6	;r3 As==10
    2cd0:	d1 3f       	jmp	$-92     	;abs 0x2c74
    2cd2:	3e 40 e6 2b 	mov	#11238,	r14	;#0x2be6
    2cd6:	0f 44       	mov	r4,	r15	;
    2cd8:	b0 12 c4 8d 	call	#-29244	;#0x8dc4
    2cdc:	0f 93       	cmp	#0,	r15	;r3 As==00
    2cde:	03 20       	jnz	$+8      	;abs 0x2ce6
    2ce0:	36 40 03 00 	mov	#3,	r6	;#0x0003
    2ce4:	c7 3f       	jmp	$-112    	;abs 0x2c74
    2ce6:	3e 40 94 2b 	mov	#11156,	r14	;#0x2b94
    2cea:	0f 44       	mov	r4,	r15	;
    2cec:	b0 12 c4 8d 	call	#-29244	;#0x8dc4
    2cf0:	0f 93       	cmp	#0,	r15	;r3 As==00
    2cf2:	05 20       	jnz	$+12     	;abs 0x2cfe
    2cf4:	f8 40 09 00 	mov.b	#9,	1(r8)	;#0x0009
    2cf8:	01 00 
    2cfa:	1a 43       	mov	#1,	r10	;r3 As==01
    2cfc:	bb 3f       	jmp	$-136    	;abs 0x2c74
    2cfe:	3e 40 99 2b 	mov	#11161,	r14	;#0x2b99
    2d02:	0f 44       	mov	r4,	r15	;
    2d04:	b0 12 c4 8d 	call	#-29244	;#0x8dc4
    2d08:	0f 93       	cmp	#0,	r15	;r3 As==00
    2d0a:	04 20       	jnz	$+10     	;abs 0x2d14
    2d0c:	f8 40 0a 00 	mov.b	#10,	1(r8)	;#0x000a
    2d10:	01 00 
    2d12:	f3 3f       	jmp	$-24     	;abs 0x2cfa
    2d14:	3e 40 9e 2b 	mov	#11166,	r14	;#0x2b9e
    2d18:	0f 44       	mov	r4,	r15	;
    2d1a:	b0 12 c4 8d 	call	#-29244	;#0x8dc4
    2d1e:	0f 93       	cmp	#0,	r15	;r3 As==00
    2d20:	04 20       	jnz	$+10     	;abs 0x2d2a
    2d22:	f8 40 0b 00 	mov.b	#11,	1(r8)	;#0x000b
    2d26:	01 00 
    2d28:	e8 3f       	jmp	$-46     	;abs 0x2cfa
    2d2a:	3e 40 a3 2b 	mov	#11171,	r14	;#0x2ba3
    2d2e:	0f 44       	mov	r4,	r15	;
    2d30:	b0 12 c4 8d 	call	#-29244	;#0x8dc4
    2d34:	0f 93       	cmp	#0,	r15	;r3 As==00
    2d36:	04 20       	jnz	$+10     	;abs 0x2d40
    2d38:	f8 40 0c 00 	mov.b	#12,	1(r8)	;#0x000c
    2d3c:	01 00 
    2d3e:	dd 3f       	jmp	$-68     	;abs 0x2cfa
    2d40:	2a 43       	mov	#2,	r10	;r3 As==10
    2d42:	57 43       	mov.b	#1,	r7	;r3 As==01
    2d44:	97 3f       	jmp	$-208    	;abs 0x2c74
    2d46:	16 93       	cmp	#1,	r6	;r3 As==01
    2d48:	72 24       	jz	$+230    	;abs 0x2e2e
    2d4a:	26 93       	cmp	#2,	r6	;r3 As==10
    2d4c:	56 38       	jl	$+174    	;abs 0x2dfa
    2d4e:	26 93       	cmp	#2,	r6	;r3 As==10
    2d50:	33 24       	jz	$+104    	;abs 0x2db8
    2d52:	36 90 03 00 	cmp	#3,	r6	;#0x0003
    2d56:	8f 23       	jnz	$-224    	;abs 0x2c76
    2d58:	3e 40 e8 2b 	mov	#11240,	r14	;#0x2be8
    2d5c:	0f 44       	mov	r4,	r15	;
    2d5e:	b0 12 c4 8d 	call	#-29244	;#0x8dc4
    2d62:	0f 93       	cmp	#0,	r15	;r3 As==00
    2d64:	05 20       	jnz	$+12     	;abs 0x2d70
    2d66:	f8 40 05 00 	mov.b	#5,	1(r8)	;#0x0005
    2d6a:	01 00 
    2d6c:	29 43       	mov	#2,	r9	;r3 As==10
    2d6e:	83 3f       	jmp	$-248    	;abs 0x2c76
    2d70:	3e 40 ea 2b 	mov	#11242,	r14	;#0x2bea
    2d74:	0f 44       	mov	r4,	r15	;
    2d76:	b0 12 c4 8d 	call	#-29244	;#0x8dc4
    2d7a:	0f 93       	cmp	#0,	r15	;r3 As==00
    2d7c:	04 20       	jnz	$+10     	;abs 0x2d86
    2d7e:	f8 40 06 00 	mov.b	#6,	1(r8)	;#0x0006
    2d82:	01 00 
    2d84:	f3 3f       	jmp	$-24     	;abs 0x2d6c
    2d86:	3e 40 ec 2b 	mov	#11244,	r14	;#0x2bec
    2d8a:	0f 44       	mov	r4,	r15	;
    2d8c:	b0 12 c4 8d 	call	#-29244	;#0x8dc4
    2d90:	0f 93       	cmp	#0,	r15	;r3 As==00
    2d92:	04 20       	jnz	$+10     	;abs 0x2d9c
    2d94:	f8 40 07 00 	mov.b	#7,	1(r8)	;#0x0007
    2d98:	01 00 
    2d9a:	e8 3f       	jmp	$-46     	;abs 0x2d6c
    2d9c:	3e 40 da 2b 	mov	#11226,	r14	;#0x2bda
    2da0:	0f 44       	mov	r4,	r15	;
    2da2:	b0 12 c4 8d 	call	#-29244	;#0x8dc4
    2da6:	0f 93       	cmp	#0,	r15	;r3 As==00
    2da8:	03 20       	jnz	$+8      	;abs 0x2db0
    2daa:	f8 42 01 00 	mov.b	#8,	1(r8)	;r2 As==11
    2dae:	de 3f       	jmp	$-66     	;abs 0x2d6c
    2db0:	2a 43       	mov	#2,	r10	;r3 As==10
    2db2:	77 40 05 00 	mov.b	#5,	r7	;#0x0005
    2db6:	5f 3f       	jmp	$-320    	;abs 0x2c76
    2db8:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    2dbc:	0f 44       	mov	r4,	r15	;
    2dbe:	b0 12 86 8d 	call	#-29306	;#0x8d86
    2dc2:	0f 93       	cmp	#0,	r15	;r3 As==00
    2dc4:	17 24       	jz	$+48     	;abs 0x2df4
    2dc6:	cf 43 00 00 	mov.b	#0,	0(r15)	;r3 As==00
    2dca:	3e 40 ee 2b 	mov	#11246,	r14	;#0x2bee
    2dce:	0f 44       	mov	r4,	r15	;
    2dd0:	b0 12 c4 8d 	call	#-29244	;#0x8dc4
    2dd4:	0f 93       	cmp	#0,	r15	;r3 As==00
    2dd6:	04 20       	jnz	$+10     	;abs 0x2de0
    2dd8:	c8 43 01 00 	mov.b	#0,	1(r8)	;r3 As==00
    2ddc:	1a 43       	mov	#1,	r10	;r3 As==01
    2dde:	4b 3f       	jmp	$-360    	;abs 0x2c76
    2de0:	3e 40 f0 2b 	mov	#11248,	r14	;#0x2bf0
    2de4:	0f 44       	mov	r4,	r15	;
    2de6:	b0 12 c4 8d 	call	#-29244	;#0x8dc4
    2dea:	0f 93       	cmp	#0,	r15	;r3 As==00
    2dec:	e1 23       	jnz	$-60     	;abs 0x2db0
    2dee:	d8 43 01 00 	mov.b	#1,	1(r8)	;r3 As==01
    2df2:	f4 3f       	jmp	$-22     	;abs 0x2ddc
    2df4:	2a 43       	mov	#2,	r10	;r3 As==10
    2df6:	67 42       	mov.b	#4,	r7	;r2 As==10
    2df8:	3e 3f       	jmp	$-386    	;abs 0x2c76
    2dfa:	06 93       	cmp	#0,	r6	;r3 As==00
    2dfc:	3c 23       	jnz	$-390    	;abs 0x2c76
    2dfe:	3e 40 ee 2b 	mov	#11246,	r14	;#0x2bee
    2e02:	0f 44       	mov	r4,	r15	;
    2e04:	b0 12 c4 8d 	call	#-29244	;#0x8dc4
    2e08:	0f 93       	cmp	#0,	r15	;r3 As==00
    2e0a:	03 20       	jnz	$+8      	;abs 0x2e12
    2e0c:	e8 43 01 00 	mov.b	#2,	1(r8)	;r3 As==10
    2e10:	ad 3f       	jmp	$-164    	;abs 0x2d6c
    2e12:	3e 40 f0 2b 	mov	#11248,	r14	;#0x2bf0
    2e16:	0f 44       	mov	r4,	r15	;
    2e18:	b0 12 c4 8d 	call	#-29244	;#0x8dc4
    2e1c:	0f 93       	cmp	#0,	r15	;r3 As==00
    2e1e:	04 20       	jnz	$+10     	;abs 0x2e28
    2e20:	f8 40 03 00 	mov.b	#3,	1(r8)	;#0x0003
    2e24:	01 00 
    2e26:	a2 3f       	jmp	$-186    	;abs 0x2d6c
    2e28:	2a 43       	mov	#2,	r10	;r3 As==10
    2e2a:	67 43       	mov.b	#2,	r7	;r3 As==10
    2e2c:	24 3f       	jmp	$-438    	;abs 0x2c76
    2e2e:	3e 40 f0 2b 	mov	#11248,	r14	;#0x2bf0
    2e32:	0f 44       	mov	r4,	r15	;
    2e34:	b0 12 c4 8d 	call	#-29244	;#0x8dc4
    2e38:	0f 93       	cmp	#0,	r15	;r3 As==00
    2e3a:	03 20       	jnz	$+8      	;abs 0x2e42
    2e3c:	e8 42 01 00 	mov.b	#4,	1(r8)	;r2 As==10
    2e40:	95 3f       	jmp	$-212    	;abs 0x2d6c
    2e42:	2a 43       	mov	#2,	r10	;r3 As==10
    2e44:	77 40 03 00 	mov.b	#3,	r7	;#0x0003
    2e48:	16 3f       	jmp	$-466    	;abs 0x2c76
    2e4a:	06 93       	cmp	#0,	r6	;r3 As==00
    2e4c:	14 3b       	jl	$-470    	;abs 0x2c76
    2e4e:	26 93       	cmp	#2,	r6	;r3 As==10
    2e50:	03 38       	jl	$+8      	;abs 0x2e58
    2e52:	36 90 03 00 	cmp	#3,	r6	;#0x0003
    2e56:	0f 23       	jnz	$-480    	;abs 0x2c76
    2e58:	3d 40 0a 00 	mov	#10,	r13	;#0x000a
    2e5c:	0e 44       	mov	r4,	r14	;
    2e5e:	3e 50 14 00 	add	#20,	r14	;#0x0014
    2e62:	0f 44       	mov	r4,	r15	;
    2e64:	b0 12 06 85 	call	#-31482	;#0x8506
    2e68:	0d 4e       	mov	r14,	r13	;
    2e6a:	0e 4f       	mov	r15,	r14	;
    2e6c:	1f 44 14 00 	mov	20(r4),	r15	;
    2e70:	cf 93 00 00 	cmp.b	#0,	0(r15)	;r3 As==00
    2e74:	0d 20       	jnz	$+28     	;abs 0x2e90
    2e76:	0b 4d       	mov	r13,	r11	;
    2e78:	0c 4e       	mov	r14,	r12	;
    2e7a:	3b 53       	add	#-1,	r11	;r3 As==11
    2e7c:	3c 63       	addc	#-1,	r12	;r3 As==11
    2e7e:	3b 80 05 00 	sub	#5,	r11	;#0x0005
    2e82:	0c 73       	sbc	r12		;
    2e84:	05 2c       	jc	$+12     	;abs 0x2e90
    2e86:	c8 4d 03 00 	mov.b	r13,	3(r8)	;
    2e8a:	39 40 03 00 	mov	#3,	r9	;#0x0003
    2e8e:	f3 3e       	jmp	$-536    	;abs 0x2c76
    2e90:	2a 43       	mov	#2,	r10	;r3 As==10
    2e92:	77 40 06 00 	mov.b	#6,	r7	;#0x0006
    2e96:	ef 3e       	jmp	$-544    	;abs 0x2c76
    2e98:	06 93       	cmp	#0,	r6	;r3 As==00
    2e9a:	ed 3a       	jl	$-548    	;abs 0x2c76
    2e9c:	26 93       	cmp	#2,	r6	;r3 As==10
    2e9e:	03 38       	jl	$+8      	;abs 0x2ea6
    2ea0:	36 90 03 00 	cmp	#3,	r6	;#0x0003
    2ea4:	e8 22       	jnz	$-558    	;abs 0x2c76
    2ea6:	3d 40 0a 00 	mov	#10,	r13	;#0x000a
    2eaa:	0e 44       	mov	r4,	r14	;
    2eac:	3e 50 14 00 	add	#20,	r14	;#0x0014
    2eb0:	0f 44       	mov	r4,	r15	;
    2eb2:	b0 12 06 85 	call	#-31482	;#0x8506
    2eb6:	0d 4e       	mov	r14,	r13	;
    2eb8:	0e 4f       	mov	r15,	r14	;
    2eba:	1f 44 14 00 	mov	20(r4),	r15	;
    2ebe:	cf 93 00 00 	cmp.b	#0,	0(r15)	;r3 As==00
    2ec2:	e6 23       	jnz	$-50     	;abs 0x2e90
    2ec4:	0b 4d       	mov	r13,	r11	;
    2ec6:	0c 4e       	mov	r14,	r12	;
    2ec8:	3b 53       	add	#-1,	r11	;r3 As==11
    2eca:	3c 63       	addc	#-1,	r12	;r3 As==11
    2ecc:	3b 80 05 00 	sub	#5,	r11	;#0x0005
    2ed0:	0c 73       	sbc	r12		;
    2ed2:	04 2c       	jc	$+10     	;abs 0x2edc
    2ed4:	c8 4d 04 00 	mov.b	r13,	4(r8)	;
    2ed8:	29 42       	mov	#4,	r9	;r2 As==10
    2eda:	cd 3e       	jmp	$-612    	;abs 0x2c76
    2edc:	2a 43       	mov	#2,	r10	;r3 As==10
    2ede:	77 40 09 00 	mov.b	#9,	r7	;#0x0009
    2ee2:	c9 3e       	jmp	$-620    	;abs 0x2c76
    2ee4:	06 93       	cmp	#0,	r6	;r3 As==00
    2ee6:	c7 3a       	jl	$-624    	;abs 0x2c76
    2ee8:	26 93       	cmp	#2,	r6	;r3 As==10
    2eea:	1d 38       	jl	$+60     	;abs 0x2f26
    2eec:	36 90 03 00 	cmp	#3,	r6	;#0x0003
    2ef0:	c2 22       	jnz	$-634    	;abs 0x2c76
    2ef2:	3d 40 0a 00 	mov	#10,	r13	;#0x000a
    2ef6:	0e 44       	mov	r4,	r14	;
    2ef8:	3e 50 14 00 	add	#20,	r14	;#0x0014
    2efc:	0f 44       	mov	r4,	r15	;
    2efe:	b0 12 06 85 	call	#-31482	;#0x8506
    2f02:	0d 4e       	mov	r14,	r13	;
    2f04:	0e 4f       	mov	r15,	r14	;
    2f06:	1f 44 14 00 	mov	20(r4),	r15	;
    2f0a:	cf 93 00 00 	cmp.b	#0,	0(r15)	;r3 As==00
    2f0e:	c0 23       	jnz	$-126    	;abs 0x2e90
    2f10:	0b 4d       	mov	r13,	r11	;
    2f12:	0c 4e       	mov	r14,	r12	;
    2f14:	3b 80 06 00 	sub	#6,	r11	;#0x0006
    2f18:	0c 73       	sbc	r12		;
    2f1a:	e0 2f       	jc	$-62     	;abs 0x2edc
    2f1c:	c8 4d 05 00 	mov.b	r13,	5(r8)	;
    2f20:	39 40 05 00 	mov	#5,	r9	;#0x0005
    2f24:	a8 3e       	jmp	$-686    	;abs 0x2c76
    2f26:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    2f2a:	0f 44       	mov	r4,	r15	;
    2f2c:	b0 12 86 8d 	call	#-29306	;#0x8d86
    2f30:	0f 93       	cmp	#0,	r15	;r3 As==00
    2f32:	21 24       	jz	$+68     	;abs 0x2f76
    2f34:	cf 43 00 00 	mov.b	#0,	0(r15)	;r3 As==00
    2f38:	3d 40 0a 00 	mov	#10,	r13	;#0x000a
    2f3c:	0e 44       	mov	r4,	r14	;
    2f3e:	3e 50 14 00 	add	#20,	r14	;#0x0014
    2f42:	0f 44       	mov	r4,	r15	;
    2f44:	b0 12 06 85 	call	#-31482	;#0x8506
    2f48:	0d 4e       	mov	r14,	r13	;
    2f4a:	0e 4f       	mov	r15,	r14	;
    2f4c:	1f 44 14 00 	mov	20(r4),	r15	;
    2f50:	cf 93 00 00 	cmp.b	#0,	0(r15)	;r3 As==00
    2f54:	9d 23       	jnz	$-196    	;abs 0x2e90
    2f56:	0b 4d       	mov	r13,	r11	;
    2f58:	0c 4e       	mov	r14,	r12	;
    2f5a:	3b 50 c8 00 	add	#200,	r11	;#0x00c8
    2f5e:	0c 63       	adc	r12		;
    2f60:	3b 80 91 01 	sub	#401,	r11	;#0x0191
    2f64:	0c 73       	sbc	r12		;
    2f66:	03 2c       	jc	$+8      	;abs 0x2f6e
    2f68:	88 4d 08 00 	mov	r13,	8(r8)	;
    2f6c:	37 3f       	jmp	$-400    	;abs 0x2ddc
    2f6e:	2a 43       	mov	#2,	r10	;r3 As==10
    2f70:	77 40 0c 00 	mov.b	#12,	r7	;#0x000c
    2f74:	80 3e       	jmp	$-766    	;abs 0x2c76
    2f76:	2a 43       	mov	#2,	r10	;r3 As==10
    2f78:	77 40 0a 00 	mov.b	#10,	r7	;#0x000a
    2f7c:	7c 3e       	jmp	$-774    	;abs 0x2c76
    2f7e:	36 90 03 00 	cmp	#3,	r6	;#0x0003
    2f82:	79 22       	jnz	$-780    	;abs 0x2c76
    2f84:	3d 40 0a 00 	mov	#10,	r13	;#0x000a
    2f88:	0e 44       	mov	r4,	r14	;
    2f8a:	3e 50 14 00 	add	#20,	r14	;#0x0014
    2f8e:	0f 44       	mov	r4,	r15	;
    2f90:	b0 12 06 85 	call	#-31482	;#0x8506
    2f94:	0d 4e       	mov	r14,	r13	;
    2f96:	0e 4f       	mov	r15,	r14	;
    2f98:	1f 44 14 00 	mov	20(r4),	r15	;
    2f9c:	cf 93 00 00 	cmp.b	#0,	0(r15)	;r3 As==00
    2fa0:	77 23       	jnz	$-272    	;abs 0x2e90
    2fa2:	0b 4d       	mov	r13,	r11	;
    2fa4:	0c 4e       	mov	r14,	r12	;
    2fa6:	3b 80 06 00 	sub	#6,	r11	;#0x0006
    2faa:	0c 73       	sbc	r12		;
    2fac:	97 2f       	jc	$-208    	;abs 0x2edc
    2fae:	c8 4d 06 00 	mov.b	r13,	6(r8)	;
    2fb2:	39 40 06 00 	mov	#6,	r9	;#0x0006
    2fb6:	5f 3e       	jmp	$-832    	;abs 0x2c76
    2fb8:	36 90 03 00 	cmp	#3,	r6	;#0x0003
    2fbc:	5c 22       	jnz	$-838    	;abs 0x2c76
    2fbe:	3d 40 0a 00 	mov	#10,	r13	;#0x000a
    2fc2:	0e 44       	mov	r4,	r14	;
    2fc4:	3e 50 14 00 	add	#20,	r14	;#0x0014
    2fc8:	0f 44       	mov	r4,	r15	;
    2fca:	b0 12 06 85 	call	#-31482	;#0x8506
    2fce:	0d 4e       	mov	r14,	r13	;
    2fd0:	0e 4f       	mov	r15,	r14	;
    2fd2:	1f 44 14 00 	mov	20(r4),	r15	;
    2fd6:	cf 93 00 00 	cmp.b	#0,	0(r15)	;r3 As==00
    2fda:	5a 23       	jnz	$-330    	;abs 0x2e90
    2fdc:	0b 4d       	mov	r13,	r11	;
    2fde:	0c 4e       	mov	r14,	r12	;
    2fe0:	3b 53       	add	#-1,	r11	;r3 As==11
    2fe2:	3c 63       	addc	#-1,	r12	;r3 As==11
    2fe4:	3b 80 0a 00 	sub	#10,	r11	;#0x000a
    2fe8:	0c 73       	sbc	r12		;
    2fea:	52 2f       	jc	$-346    	;abs 0x2e90
    2fec:	c8 4d 02 00 	mov.b	r13,	2(r8)	;
    2ff0:	39 40 07 00 	mov	#7,	r9	;#0x0007
    2ff4:	40 3e       	jmp	$-894    	;abs 0x2c76
    2ff6:	36 90 03 00 	cmp	#3,	r6	;#0x0003
    2ffa:	3d 22       	jnz	$-900    	;abs 0x2c76
    2ffc:	3d 40 0a 00 	mov	#10,	r13	;#0x000a
    3000:	0e 44       	mov	r4,	r14	;
    3002:	3e 50 14 00 	add	#20,	r14	;#0x0014
    3006:	0f 44       	mov	r4,	r15	;
    3008:	b0 12 06 85 	call	#-31482	;#0x8506
    300c:	0d 4e       	mov	r14,	r13	;
    300e:	0e 4f       	mov	r15,	r14	;
    3010:	1f 44 14 00 	mov	20(r4),	r15	;
    3014:	cf 93 00 00 	cmp.b	#0,	0(r15)	;r3 As==00
    3018:	3b 23       	jnz	$-392    	;abs 0x2e90
    301a:	0b 4d       	mov	r13,	r11	;
    301c:	0c 4e       	mov	r14,	r12	;
    301e:	3b 53       	add	#-1,	r11	;r3 As==11
    3020:	3c 63       	addc	#-1,	r12	;r3 As==11
    3022:	3b 80 34 00 	sub	#52,	r11	;#0x0034
    3026:	0c 73       	sbc	r12		;
    3028:	33 2f       	jc	$-408    	;abs 0x2e90
    302a:	c8 4d 0a 00 	mov.b	r13,	10(r8)	;
    302e:	39 42       	mov	#8,	r9	;r2 As==11
    3030:	30 40 76 2c 	br	#0x2c76		;
    3034:	36 90 03 00 	cmp	#3,	r6	;#0x0003
    3038:	02 24       	jz	$+6      	;abs 0x303e
    303a:	30 40 76 2c 	br	#0x2c76		;
    303e:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    3042:	0f 44       	mov	r4,	r15	;
    3044:	b0 12 86 8d 	call	#-29306	;#0x8d86
    3048:	0f 93       	cmp	#0,	r15	;r3 As==00
    304a:	95 27       	jz	$-212    	;abs 0x2f76
    304c:	cf 43 00 00 	mov.b	#0,	0(r15)	;r3 As==00
    3050:	3d 40 0a 00 	mov	#10,	r13	;#0x000a
    3054:	0e 44       	mov	r4,	r14	;
    3056:	3e 50 14 00 	add	#20,	r14	;#0x0014
    305a:	0f 44       	mov	r4,	r15	;
    305c:	b0 12 06 85 	call	#-31482	;#0x8506
    3060:	0d 4e       	mov	r14,	r13	;
    3062:	0e 4f       	mov	r15,	r14	;
    3064:	1f 44 14 00 	mov	20(r4),	r15	;
    3068:	cf 93 00 00 	cmp.b	#0,	0(r15)	;r3 As==00
    306c:	11 23       	jnz	$-476    	;abs 0x2e90
    306e:	0b 4d       	mov	r13,	r11	;
    3070:	0c 4e       	mov	r14,	r12	;
    3072:	3b 53       	add	#-1,	r11	;r3 As==11
    3074:	3c 63       	addc	#-1,	r12	;r3 As==11
    3076:	3b 80 ff 00 	sub	#255,	r11	;#0x00ff
    307a:	0c 73       	sbc	r12		;
    307c:	09 2f       	jc	$-492    	;abs 0x2e90
    307e:	c8 4d 0b 00 	mov.b	r13,	11(r8)	;
    3082:	ac 3e       	jmp	$-678    	;abs 0x2ddc
    3084:	2d 43       	mov	#2,	r13	;r3 As==10
    3086:	3e 40 92 2b 	mov	#11154,	r14	;#0x2b92
    308a:	0f 44       	mov	r4,	r15	;
    308c:	b0 12 32 8e 	call	#-29134	;#0x8e32
    3090:	0f 93       	cmp	#0,	r15	;r3 As==00
    3092:	06 20       	jnz	$+14     	;abs 0x30a0
    3094:	3f 40 f2 2b 	mov	#11250,	r15	;#0x2bf2
    3098:	b0 12 58 8d 	call	#-29352	;#0x8d58
    309c:	30 40 76 2c 	br	#0x2c76		;
    30a0:	04 12       	push	r4		;
    30a2:	30 12 03 2c 	push	#11267		;#0x2c03
    30a6:	b0 12 22 87 	call	#-30942	;#0x8722
    30aa:	21 52       	add	#4,	r1	;r2 As==10
    30ac:	30 40 76 2c 	br	#0x2c76		;
    30b0:	4f 47       	mov.b	r7,	r15	;
    30b2:	31 50 16 00 	add	#22,	r1	;#0x0016
    30b6:	34 41       	pop	r4		;
    30b8:	36 41       	pop	r6		;
    30ba:	37 41       	pop	r7		;
    30bc:	38 41       	pop	r8		;
    30be:	39 41       	pop	r9		;
    30c0:	3a 41       	pop	r10		;
    30c2:	3b 41       	pop	r11		;
    30c4:	30 41       	ret			

000030c6 <update_a2d_data>:
    30c6:	0b 12       	push	r11		;
    30c8:	0a 12       	push	r10		;
    30ca:	0a 4f       	mov	r15,	r10	;
    30cc:	0b 43       	clr	r11		;
    30ce:	0c 43       	clr	r12		;
    30d0:	8f 4e 22 00 	mov	r14,	34(r15)	;
    30d4:	6f 4f       	mov.b	@r15,	r15	;
    30d6:	0f 5f       	rla	r15		;
    30d8:	0f 5a       	add	r10,	r15	;
    30da:	8f 4e 02 00 	mov	r14,	2(r15)	;
    30de:	da 53 00 00 	inc.b	0(r10)		;
    30e2:	fa 90 10 00 	cmp.b	#16,	0(r10)	;#0x0010
    30e6:	00 00 
    30e8:	02 28       	jnc	$+6      	;abs 0x30ee
    30ea:	ca 43 00 00 	mov.b	#0,	0(r10)	;r3 As==00
    30ee:	0d 43       	clr	r13		;
    30f0:	0f 4d       	mov	r13,	r15	;
    30f2:	0f 5f       	rla	r15		;
    30f4:	0f 5a       	add	r10,	r15	;
    30f6:	1e 4f 02 00 	mov	2(r15),	r14	;
    30fa:	0f 43       	clr	r15		;
    30fc:	0b 5e       	add	r14,	r11	;
    30fe:	0c 6f       	addc	r15,	r12	;
    3100:	1d 53       	inc	r13		;
    3102:	3d 90 10 00 	cmp	#16,	r13	;#0x0010
    3106:	f4 3b       	jl	$-22     	;abs 0x30f0
    3108:	0e 4b       	mov	r11,	r14	;
    310a:	0f 4c       	mov	r12,	r15	;
    310c:	0c 93       	cmp	#0,	r12	;r3 As==00
    310e:	03 34       	jge	$+8      	;abs 0x3116
    3110:	3e 50 0f 00 	add	#15,	r14	;#0x000f
    3114:	0f 63       	adc	r15		;
    3116:	0b 4e       	mov	r14,	r11	;
    3118:	0c 4f       	mov	r15,	r12	;
    311a:	0c 11       	rra	r12		;
    311c:	0b 10       	rrc	r11		;
    311e:	0c 11       	rra	r12		;
    3120:	0b 10       	rrc	r11		;
    3122:	0c 11       	rra	r12		;
    3124:	0b 10       	rrc	r11		;
    3126:	0c 11       	rra	r12		;
    3128:	0b 10       	rrc	r11		;
    312a:	8a 4b 24 00 	mov	r11,	36(r10)	;
    312e:	0f 4b       	mov	r11,	r15	;
    3130:	3a 41       	pop	r10		;
    3132:	3b 41       	pop	r11		;
    3134:	30 41       	ret			
    3136:	69 6e       	addc.b	@r14,	r9	;
    3138:	73 65       	.word	0x6573;	????
    313a:	72 74       	subc.b	@r4+,	r2	;
    313c:	69 6f       	addc.b	@r15,	r9	;
    313e:	6e 5f       	add.b	@r15,	r14	;
    3140:	70 6f       	addc.b	@r15+,	r0	;
    3142:	69 6e       	addc.b	@r14,	r9	;
    3144:	74 3d       	jmp	$+746    	;abs 0x342e
    3146:	25 64       	addc	@r4,	r5	;
    3148:	0a 00       	.word	0x000a;	????
    314a:	72 61       	addc.b	@r1+,	r2	;
    314c:	77 5f       	add.b	@r15+,	r7	;
    314e:	72 65       	addc.b	@r5+,	r2	;
    3150:	73 75       	.word	0x7573;	????
    3152:	6c 74       	subc.b	@r4,	r12	;
    3154:	3d 25       	jz	$+636    	;abs 0x33d0
    3156:	64 0a       	.word	0x0a64;	????
    3158:	00 66       	addc	r6,	r0	;
    315a:	69 6c       	addc.b	@r12,	r9	;
    315c:	74 65       	addc.b	@r5+,	r4	;
    315e:	72 65       	addc.b	@r5+,	r2	;
    3160:	64 5f       	add.b	@r15,	r4	;
    3162:	72 65       	addc.b	@r5+,	r2	;
    3164:	73 75       	.word	0x7573;	????
    3166:	6c 74       	subc.b	@r4,	r12	;
    3168:	73 3d       	jmp	$+744    	;abs 0x3450
    316a:	25 64       	addc	@r4,	r5	;
    316c:	0a 00       	.word	0x000a;	????
    316e:	25 35       	jge	$+588    	;abs 0x33ba
    3170:	64 20       	jnz	$+202    	;abs 0x323a
	...

00003174 <report_channel_structure>:
    3174:	0b 12       	push	r11		;
    3176:	0a 12       	push	r10		;
    3178:	09 12       	push	r9		;
    317a:	08 12       	push	r8		;
    317c:	09 4f       	mov	r15,	r9	;
    317e:	6f 4f       	mov.b	@r15,	r15	;
    3180:	0f 12       	push	r15		;
    3182:	30 12 36 31 	push	#12598		;#0x3136
    3186:	b0 12 22 87 	call	#-30942	;#0x8722
    318a:	19 12 22 00 	push	34(r9)		;
    318e:	30 12 4a 31 	push	#12618		;#0x314a
    3192:	b0 12 22 87 	call	#-30942	;#0x8722
    3196:	19 12 24 00 	push	36(r9)		;
    319a:	30 12 59 31 	push	#12633		;#0x3159
    319e:	b0 12 22 87 	call	#-30942	;#0x8722
    31a2:	08 43       	clr	r8		;
    31a4:	31 50 0c 00 	add	#12,	r1	;#0x000c
    31a8:	0b 43       	clr	r11		;
    31aa:	0a 48       	mov	r8,	r10	;
    31ac:	0a 5a       	rla	r10		;
    31ae:	0a 5a       	rla	r10		;
    31b0:	0f 4a       	mov	r10,	r15	;
    31b2:	0f 5b       	add	r11,	r15	;
    31b4:	0f 5f       	rla	r15		;
    31b6:	0f 59       	add	r9,	r15	;
    31b8:	1f 12 02 00 	push	2(r15)		;
    31bc:	30 12 6e 31 	push	#12654		;#0x316e
    31c0:	b0 12 22 87 	call	#-30942	;#0x8722
    31c4:	21 52       	add	#4,	r1	;r2 As==10
    31c6:	1b 53       	inc	r11		;
    31c8:	2b 92       	cmp	#4,	r11	;r2 As==10
    31ca:	f2 3b       	jl	$-26     	;abs 0x31b0
    31cc:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    31d0:	b0 12 14 15 	call	#5396		;#0x1514
    31d4:	18 53       	inc	r8		;
    31d6:	28 92       	cmp	#4,	r8	;r2 As==10
    31d8:	e7 3b       	jl	$-48     	;abs 0x31a8
    31da:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    31de:	b0 12 14 15 	call	#5396		;#0x1514
    31e2:	0f 43       	clr	r15		;
    31e4:	38 41       	pop	r8		;
    31e6:	39 41       	pop	r9		;
    31e8:	3a 41       	pop	r10		;
    31ea:	3b 41       	pop	r11		;
    31ec:	30 41       	ret			

000031ee <initialize_channel_structure>:
    31ee:	0d 4f       	mov	r15,	r13	;
    31f0:	cf 43 00 00 	mov.b	#0,	0(r15)	;r3 As==00
    31f4:	0e 43       	clr	r14		;
    31f6:	0f 4e       	mov	r14,	r15	;
    31f8:	0f 5f       	rla	r15		;
    31fa:	0f 5d       	add	r13,	r15	;
    31fc:	8f 43 02 00 	mov	#0,	2(r15)	;r3 As==00
    3200:	1e 53       	inc	r14		;
    3202:	3e 90 10 00 	cmp	#16,	r14	;#0x0010
    3206:	f7 3b       	jl	$-16     	;abs 0x31f6
    3208:	8d 43 22 00 	mov	#0,	34(r13)	;r3 As==00
    320c:	8d 43 24 00 	mov	#0,	36(r13)	;r3 As==00
    3210:	0f 43       	clr	r15		;
    3212:	30 41       	ret			

00003214 <timer_a0_irq>:
    3214:	0f 12       	push	r15		;
    3216:	0e 12       	push	r14		;
    3218:	0d 12       	push	r13		;
    321a:	0c 12       	push	r12		;
    321c:	0b 12       	push	r11		;
    321e:	b2 50 00 09 	add	#2304,	&0x0172	;#0x0900
    3222:	72 01 
    3224:	5f 42 0e 02 	mov.b	&0x020e,r15	;0x020e
    3228:	4f 93       	cmp.b	#0,	r15	;r3 As==00
    322a:	b3 20       	jnz	$+360    	;abs 0x3392
    322c:	1f 42 0c 02 	mov	&0x020c,r15	;0x020c
    3230:	0e 4f       	mov	r15,	r14	;
    3232:	3e f0 07 00 	and	#7,	r14	;#0x0007
    3236:	82 4e 0a 02 	mov	r14,	&0x020a	;
    323a:	1f 53       	inc	r15		;
    323c:	82 4f 0c 02 	mov	r15,	&0x020c	;
    3240:	5f 42 0c 02 	mov.b	&0x020c,r15	;0x020c
    3244:	b0 12 f8 15 	call	#5624		;#0x15f8
    3248:	1e 42 0a 02 	mov	&0x020a,r14	;0x020a
    324c:	0f 4e       	mov	r14,	r15	;
    324e:	0f 5f       	rla	r15		;
    3250:	0f 5f       	rla	r15		;
    3252:	0f 5f       	rla	r15		;
    3254:	0f 5f       	rla	r15		;
    3256:	0f 5f       	rla	r15		;
    3258:	0e 5e       	rla	r14		;
    325a:	0f 5e       	add	r14,	r15	;
    325c:	0f 5e       	add	r14,	r15	;
    325e:	0f 5e       	add	r14,	r15	;
    3260:	3f 50 6c 02 	add	#620,	r15	;#0x026c
    3264:	1e 42 40 01 	mov	&0x0140,r14	;0x0140
    3268:	b0 12 c6 30 	call	#12486		;#0x30c6
    326c:	1e 42 0a 02 	mov	&0x020a,r14	;0x020a
    3270:	0f 4e       	mov	r14,	r15	;
    3272:	0f 5f       	rla	r15		;
    3274:	0f 5f       	rla	r15		;
    3276:	0f 5f       	rla	r15		;
    3278:	0f 5f       	rla	r15		;
    327a:	0f 5f       	rla	r15		;
    327c:	0e 5e       	rla	r14		;
    327e:	0f 5e       	add	r14,	r15	;
    3280:	0f 5e       	add	r14,	r15	;
    3282:	0f 5e       	add	r14,	r15	;
    3284:	3f 50 9c 03 	add	#924,	r15	;#0x039c
    3288:	1e 42 42 01 	mov	&0x0142,r14	;0x0142
    328c:	b0 12 c6 30 	call	#12486		;#0x30c6
    3290:	1e 42 0a 02 	mov	&0x020a,r14	;0x020a
    3294:	0f 4e       	mov	r14,	r15	;
    3296:	0f 5f       	rla	r15		;
    3298:	0f 5f       	rla	r15		;
    329a:	0f 5f       	rla	r15		;
    329c:	0f 5f       	rla	r15		;
    329e:	0f 5f       	rla	r15		;
    32a0:	0e 5e       	rla	r14		;
    32a2:	0f 5e       	add	r14,	r15	;
    32a4:	0f 5e       	add	r14,	r15	;
    32a6:	0f 5e       	add	r14,	r15	;
    32a8:	3f 50 cc 04 	add	#1228,	r15	;#0x04cc
    32ac:	1e 42 44 01 	mov	&0x0144,r14	;0x0144
    32b0:	b0 12 c6 30 	call	#12486		;#0x30c6
    32b4:	82 93 0a 02 	cmp	#0,	&0x020a	;r3 As==00
    32b8:	65 24       	jz	$+204    	;abs 0x3384
    32ba:	3e 40 86 06 	mov	#1670,	r14	;#0x0686
    32be:	5f 42 0a 02 	mov.b	&0x020a,r15	;0x020a
    32c2:	b0 12 a2 2a 	call	#10914		;#0x2aa2
    32c6:	0f 93       	cmp	#0,	r15	;r3 As==00
    32c8:	52 24       	jz	$+166    	;abs 0x336e
    32ca:	3b 40 11 02 	mov	#529,	r11	;#0x0211
    32ce:	1f 42 0a 02 	mov	&0x020a,r15	;0x020a
    32d2:	0f 5b       	add	r11,	r15	;
    32d4:	df 43 00 00 	mov.b	#1,	0(r15)	;r3 As==01
    32d8:	5f 42 0a 02 	mov.b	&0x020a,r15	;0x020a
    32dc:	7f 52       	add.b	#8,	r15	;r2 As==11
    32de:	3e 40 86 06 	mov	#1670,	r14	;#0x0686
    32e2:	b0 12 a2 2a 	call	#10914		;#0x2aa2
    32e6:	0f 93       	cmp	#0,	r15	;r3 As==00
    32e8:	39 24       	jz	$+116    	;abs 0x335c
    32ea:	1f 42 0a 02 	mov	&0x020a,r15	;0x020a
    32ee:	0f 5b       	add	r11,	r15	;
    32f0:	df 43 08 00 	mov.b	#1,	8(r15)	;r3 As==01
    32f4:	5f 42 0a 02 	mov.b	&0x020a,r15	;0x020a
    32f8:	7f 50 10 00 	add.b	#16,	r15	;#0x0010
    32fc:	3e 40 86 06 	mov	#1670,	r14	;#0x0686
    3300:	b0 12 a2 2a 	call	#10914		;#0x2aa2
    3304:	0f 93       	cmp	#0,	r15	;r3 As==00
    3306:	21 24       	jz	$+68     	;abs 0x334a
    3308:	1f 42 0a 02 	mov	&0x020a,r15	;0x020a
    330c:	0f 5b       	add	r11,	r15	;
    330e:	df 43 10 00 	mov.b	#1,	16(r15)	;r3 As==01
    3312:	3e 40 86 06 	mov	#1670,	r14	;#0x0686
    3316:	7f 40 18 00 	mov.b	#24,	r15	;#0x0018
    331a:	b0 12 a2 2a 	call	#10914		;#0x2aa2
    331e:	0f 93       	cmp	#0,	r15	;r3 As==00
    3320:	0d 24       	jz	$+28     	;abs 0x333c
    3322:	e2 43 29 02 	mov.b	#2,	&0x0229	;r3 As==10
    3326:	3f 40 86 06 	mov	#1670,	r15	;#0x0686
    332a:	b0 12 ac 57 	call	#22444		;#0x57ac
    332e:	b0 12 d6 15 	call	#5590		;#0x15d6
    3332:	92 43 cc 07 	mov	#1,	&0x07cc	;r3 As==01
    3336:	5f 42 0e 02 	mov.b	&0x020e,r15	;0x020e
    333a:	2b 3c       	jmp	$+88     	;abs 0x3392
    333c:	1f 42 46 01 	mov	&0x0146,r15	;0x0146
    3340:	8f 10       	swpb	r15		;
    3342:	5f 53       	inc.b	r15		;
    3344:	c2 4f 29 02 	mov.b	r15,	&0x0229	;
    3348:	ee 3f       	jmp	$-34     	;abs 0x3326
    334a:	1e 42 0a 02 	mov	&0x020a,r14	;0x020a
    334e:	0e 5b       	add	r11,	r14	;
    3350:	1f 42 44 01 	mov	&0x0144,r15	;0x0144
    3354:	8f 10       	swpb	r15		;
    3356:	ce 4f 10 00 	mov.b	r15,	16(r14)	;
    335a:	db 3f       	jmp	$-72     	;abs 0x3312
    335c:	1e 42 0a 02 	mov	&0x020a,r14	;0x020a
    3360:	0e 5b       	add	r11,	r14	;
    3362:	1f 42 42 01 	mov	&0x0142,r15	;0x0142
    3366:	8f 10       	swpb	r15		;
    3368:	ce 4f 08 00 	mov.b	r15,	8(r14)	;
    336c:	c3 3f       	jmp	$-120    	;abs 0x32f4
    336e:	3b 40 11 02 	mov	#529,	r11	;#0x0211
    3372:	1e 42 0a 02 	mov	&0x020a,r14	;0x020a
    3376:	0e 5b       	add	r11,	r14	;
    3378:	1f 42 40 01 	mov	&0x0140,r15	;0x0140
    337c:	8f 10       	swpb	r15		;
    337e:	ce 4f 00 00 	mov.b	r15,	0(r14)	;
    3382:	aa 3f       	jmp	$-170    	;abs 0x32d8
    3384:	1e 42 46 01 	mov	&0x0146,r14	;0x0146
    3388:	3f 40 fc 05 	mov	#1532,	r15	;#0x05fc
    338c:	b0 12 c6 30 	call	#12486		;#0x30c6
    3390:	94 3f       	jmp	$-214    	;abs 0x32ba
    3392:	5f e3       	xor.b	#1,	r15	;r3 As==01
    3394:	c2 4f 0e 02 	mov.b	r15,	&0x020e	;
    3398:	5f 42 10 02 	mov.b	&0x0210,r15	;0x0210
    339c:	b0 12 d8 16 	call	#5848		;#0x16d8
    33a0:	3b 41       	pop	r11		;
    33a2:	3c 41       	pop	r12		;
    33a4:	3d 41       	pop	r13		;
    33a6:	3e 41       	pop	r14		;
    33a8:	3f 41       	pop	r15		;
    33aa:	00 13       	reti			

000033ac <delay_1_25mS>:
    33ac:	1f 93       	cmp	#1,	r15	;r3 As==01
    33ae:	08 38       	jl	$+18     	;abs 0x33c0
    33b0:	82 93 cc 07 	cmp	#0,	&0x07cc	;r3 As==00
    33b4:	03 24       	jz	$+8      	;abs 0x33bc
    33b6:	3f 53       	add	#-1,	r15	;r3 As==11
    33b8:	82 43 cc 07 	mov	#0,	&0x07cc	;r3 As==00
    33bc:	0f 93       	cmp	#0,	r15	;r3 As==00
    33be:	f8 23       	jnz	$-14     	;abs 0x33b0
    33c0:	30 41       	ret			

000033c2 <a2d_i_conversion>:
	...
    33ca:	00 00 01 00 01 00 01 00 01 00 02 00 02 00 02 00     ................
    33da:	02 00 02 00 03 00 03 00 03 00 03 00 04 00 04 00     ................
    33ea:	04 00 04 00 04 00 05 00 05 00 05 00 05 00 06 00     ................
    33fa:	06 00 06 00 06 00 07 00 07 00 07 00 07 00 07 00     ................
    340a:	08 00 08 00 08 00 08 00 09 00 09 00 09 00 09 00     ................
    341a:	09 00 0a 00 0a 00 0a 00 0a 00 0b 00 0b 00 0b 00     ................
    342a:	0b 00 0c 00 0c 00 0c 00 0c 00 0c 00 0d 00 0d 00     ................
    343a:	0d 00 0d 00 0e 00 0e 00 0e 00 0e 00 0e 00 0f 00     ................
    344a:	0f 00 0f 00 0f 00 10 00 10 00 10 00 10 00 11 00     ................
    345a:	11 00 11 00 11 00 11 00 12 00 12 00 12 00 12 00     ................
    346a:	13 00 13 00 13 00 13 00 13 00 14 00 14 00 14 00     ................
    347a:	14 00 15 00 15 00 15 00 15 00 16 00 16 00 16 00     ................
    348a:	16 00 16 00 17 00 17 00 17 00 17 00 18 00 18 00     ................
    349a:	18 00 18 00 18 00 19 00 19 00 19 00 19 00 1a 00     ................
    34aa:	1a 00 1a 00 1a 00 1b 00 1b 00 1b 00 1b 00 1b 00     ................
    34ba:	1c 00 1c 00 1c 00 1c 00 1d 00 1d 00 1d 00 1d 00     ................
    34ca:	1d 00 1e 00 1e 00 1e 00 1e 00 1f 00 1f 00 1f 00     ................
    34da:	1f 00 1f 00 20 00 20 00 20 00 20 00 21 00 21 00     .... . . . .!.!.
    34ea:	21 00 21 00 22 00 22 00 22 00 22 00 22 00 23 00     !.!.".".".".".#.
    34fa:	23 00 23 00 23 00 24 00 24 00 24 00 24 00 24 00     #.#.#.$.$.$.$.$.
    350a:	25 00 25 00 25 00 25 00 26 00 26 00 26 00 26 00     %.%.%.%.&.&.&.&.
    351a:	27 00 27 00 27 00 27 00 27 00 28 00 28 00 28 00     '.'.'.'.'.(.(.(.
    352a:	28 00 29 00 29 00 29 00 29 00 29 00 2a 00 2a 00     (.).).).).).*.*.
    353a:	2a 00 2a 00 2b 00 2b 00 2b 00 2b 00 2c 00 2c 00     *.*.+.+.+.+.,.,.
    354a:	2c 00 2c 00 2c 00 2d 00 2d 00 2d 00 2d 00 2e 00     ,.,.,.-.-.-.-...
    355a:	2e 00 2e 00 2e 00 2e 00 2f 00 2f 00 2f 00 2f 00     .......././././.
    356a:	30 00 30 00 30 00 30 00 31 00 31 00 31 00 31 00     0.0.0.0.1.1.1.1.
    357a:	31 00 32 00 32 00 32 00 32 00 33 00 33 00 33 00     1.2.2.2.2.3.3.3.
    358a:	33 00 33 00 34 00 34 00 34 00 34 00 35 00 35 00     3.3.4.4.4.4.5.5.
    359a:	35 00 35 00 36 00 36 00 36 00 36 00 36 00 37 00     5.5.6.6.6.6.6.7.
    35aa:	37 00 37 00 37 00 38 00 38 00 38 00 38 00 38 00     7.7.7.8.8.8.8.8.
    35ba:	39 00 39 00 39 00 39 00 3a 00 3a 00 3a 00 3a 00     9.9.9.9.:.:.:.:.
    35ca:	3a 00 3b 00 3b 00 3b 00 3b 00 3c 00 3c 00 3c 00     :.;.;.;.;.<.<.<.
    35da:	3c 00 3d 00 3d 00 3d 00 3d 00 3d 00 3e 00 3e 00     <.=.=.=.=.=.>.>.
    35ea:	3e 00 3e 00 3f 00 3f 00 3f 00 3f 00 3f 00 40 00     >.>.?.?.?.?.?.@.
    35fa:	40 00 40 00 40 00 41 00 41 00 41 00 41 00 42 00     @.@.@.A.A.A.A.B.
    360a:	42 00 42 00 42 00 42 00 43 00 43 00 43 00 43 00     B.B.B.B.C.C.C.C.
    361a:	44 00 44 00 44 00 44 00 44 00 45 00 45 00 45 00     D.D.D.D.D.E.E.E.
    362a:	45 00 46 00 46 00 46 00 46 00 47 00 47 00 47 00     E.F.F.F.F.G.G.G.
    363a:	47 00 47 00 48 00 48 00 48 00 48 00 49 00 49 00     G.G.H.H.H.H.I.I.
    364a:	49 00 49 00 49 00 4a 00 4a 00 4a 00 4a 00 4b 00     I.I.I.J.J.J.J.K.
    365a:	4b 00 4b 00 4b 00 4c 00 4c 00 4c 00 4c 00 4c 00     K.K.K.L.L.L.L.L.
    366a:	4d 00 4d 00 4d 00 4d 00 4e 00 4e 00 4e 00 4e 00     M.M.M.M.N.N.N.N.
    367a:	4e 00 4f 00 4f 00 4f 00 4f 00 50 00 50 00 50 00     N.O.O.O.O.P.P.P.
    368a:	50 00 51 00 51 00 51 00 51 00 51 00 52 00 52 00     P.Q.Q.Q.Q.Q.R.R.
    369a:	52 00 52 00 53 00 53 00 53 00 53 00 53 00 54 00     R.R.S.S.S.S.S.T.
    36aa:	54 00 54 00 54 00 55 00 55 00 55 00 55 00 55 00     T.T.T.U.U.U.U.U.
    36ba:	56 00 56 00 56 00 56 00 57 00 57 00 57 00 57 00     V.V.V.V.W.W.W.W.
    36ca:	58 00 58 00 58 00 58 00 58 00 59 00 59 00 59 00     X.X.X.X.X.Y.Y.Y.
    36da:	59 00 5a 00 5a 00 5a 00 5a 00 5a 00 5b 00 5b 00     Y.Z.Z.Z.Z.Z.[.[.
    36ea:	5b 00 5b 00 5c 00 5c 00 5c 00 5c 00 5d 00 5d 00     [.[.\.\.\.\.].].
    36fa:	5d 00 5d 00 5d 00 5e 00 5e 00 5e 00 5e 00 5f 00     ].].].^.^.^.^._.
    370a:	5f 00 5f 00 5f 00 5f 00 60 00 60 00 60 00 60 00     _._._._.`.`.`.`.
    371a:	61 00 61 00 61 00 61 00 62 00 62 00 62 00 62 00     a.a.a.a.b.b.b.b.
    372a:	62 00 63 00 63 00 63 00 63 00 64 00 64 00 64 00     b.c.c.c.c.d.d.d.
    373a:	64 00 64 00 65 00 65 00 65 00 65 00 66 00 66 00     d.d.e.e.e.e.f.f.
    374a:	66 00 66 00 67 00 67 00 67 00 67 00 67 00 68 00     f.f.g.g.g.g.g.h.
    375a:	68 00 68 00 68 00 69 00 69 00 69 00 69 00 69 00     h.h.h.i.i.i.i.i.
    376a:	6a 00 6a 00 6a 00 6a 00 6b 00 6b 00 6b 00 6b 00     j.j.j.j.k.k.k.k.
    377a:	6c 00 6c 00 6c 00 6c 00 6c 00 6d 00 6d 00 6d 00     l.l.l.l.l.m.m.m.
    378a:	6d 00 6e 00 6e 00 6e 00 6e 00 6e 00 6f 00 6f 00     m.n.n.n.n.n.o.o.
    379a:	6f 00 6f 00 70 00 70 00 70 00 70 00 70 00 71 00     o.o.p.p.p.p.p.q.
    37aa:	71 00 71 00 71 00 72 00 72 00 72 00 72 00 73 00     q.q.q.r.r.r.r.s.
    37ba:	73 00 73 00 73 00 73 00 74 00 74 00 74 00 74 00     s.s.s.s.t.t.t.t.
    37ca:	75 00 75 00 75 00 75 00 75 00 76 00 76 00 76 00     u.u.u.u.u.v.v.v.
    37da:	76 00 77 00 77 00 77 00 77 00 78 00 78 00 78 00     v.w.w.w.w.x.x.x.
    37ea:	78 00 78 00 79 00 79 00 79 00 79 00 7a 00 7a 00     x.x.y.y.y.y.z.z.
    37fa:	7a 00 7a 00 7a 00 7b 00 7b 00 7b 00 7b 00 7c 00     z.z.z.{.{.{.{.|.
    380a:	7c 00 7c 00 7c 00 7d 00 7d 00 7d 00 7d 00 7d 00     |.|.|.}.}.}.}.}.
    381a:	7e 00 7e 00 7e 00 7e 00 7f 00 7f 00 7f 00 7f 00     ~.~.~.~.........
    382a:	7f 00 80 00 80 00 80 00 80 00 81 00 81 00 81 00     ................
    383a:	81 00 82 00 82 00 82 00 82 00 82 00 83 00 83 00     ................
    384a:	83 00 83 00 84 00 84 00 84 00 84 00 84 00 85 00     ................
    385a:	85 00 85 00 85 00 86 00 86 00 86 00 86 00 87 00     ................
    386a:	87 00 87 00 87 00 87 00 88 00 88 00 88 00 88 00     ................
    387a:	89 00 89 00 89 00 89 00 89 00 8a 00 8a 00 8a 00     ................
    388a:	8a 00 8b 00 8b 00 8b 00 8b 00 8b 00 8c 00 8c 00     ................
    389a:	8c 00 8c 00 8d 00 8d 00 8d 00 8d 00 8e 00 8e 00     ................
    38aa:	8e 00 8e 00 8e 00 8f 00 8f 00 8f 00 8f 00 90 00     ................
    38ba:	90 00 90 00 90 00 90 00 91 00 91 00 91 00 91 00     ................
    38ca:	92 00 92 00 92 00 92 00 93 00 93 00 93 00 93 00     ................
    38da:	93 00 94 00 94 00 94 00 94 00 95 00 95 00 95 00     ................
    38ea:	95 00 95 00 96 00 96 00 96 00 96 00 97 00 97 00     ................
    38fa:	97 00 97 00 98 00 98 00 98 00 98 00 98 00 99 00     ................
    390a:	99 00 99 00 99 00 9a 00 9a 00 9a 00 9a 00 9a 00     ................
    391a:	9b 00 9b 00 9b 00 9b 00 9c 00 9c 00 9c 00 9c 00     ................
    392a:	9d 00 9d 00 9d 00 9d 00 9d 00 9e 00 9e 00 9e 00     ................
    393a:	9e 00 9f 00 9f 00 9f 00 9f 00 9f 00 a0 00 a0 00     ................
    394a:	a0 00 a0 00 a1 00 a1 00 a1 00 a1 00 a2 00 a2 00     ................
    395a:	a2 00 a2 00 a2 00 a3 00 a3 00 a3 00 a3 00 a4 00     ................
    396a:	a4 00 a4 00 a4 00 a4 00 a5 00 a5 00 a5 00 a5 00     ................
    397a:	a6 00 a6 00 a6 00 a6 00 a6 00 a7 00 a7 00 a7 00     ................
    398a:	a7 00 a8 00 a8 00 a8 00 a8 00 a9 00 a9 00 a9 00     ................
    399a:	a9 00 a9 00 aa 00 aa 00 aa 00 aa 00 ab 00 ab 00     ................
    39aa:	ab 00 ab 00 ab 00 ac 00 ac 00 ac 00 ac 00 ad 00     ................
    39ba:	ad 00 ad 00 ad 00 ae 00 ae 00 ae 00 ae 00 ae 00     ................
    39ca:	af 00 af 00 af 00 af 00 b0 00 b0 00 b0 00 b0 00     ................
    39da:	b0 00 b1 00 b1 00 b1 00 b1 00 b2 00 b2 00 b2 00     ................
    39ea:	b2 00 b3 00 b3 00 b3 00 b3 00 b3 00 b4 00 b4 00     ................
    39fa:	b4 00 b4 00 b5 00 b5 00 b5 00 b5 00 b5 00 b6 00     ................
    3a0a:	b6 00 b6 00 b6 00 b7 00 b7 00 b7 00 b7 00 b8 00     ................
    3a1a:	b8 00 b8 00 b8 00 b8 00 b9 00 b9 00 b9 00 b9 00     ................
    3a2a:	ba 00 ba 00 ba 00 ba 00 ba 00 bb 00 bb 00 bb 00     ................
    3a3a:	bb 00 bc 00 bc 00 bc 00 bc 00 bd 00 bd 00 bd 00     ................
    3a4a:	bd 00 bd 00 be 00 be 00 be 00 be 00 bf 00 bf 00     ................
    3a5a:	bf 00 bf 00 bf 00 c0 00 c0 00 c0 00 c0 00 c1 00     ................
    3a6a:	c1 00 c1 00 c1 00 c1 00 c2 00 c2 00 c2 00 c2 00     ................
    3a7a:	c3 00 c3 00 c3 00 c3 00 c4 00 c4 00 c4 00 c4 00     ................
    3a8a:	c4 00 c5 00 c5 00 c5 00 c5 00 c6 00 c6 00 c6 00     ................
    3a9a:	c6 00 c6 00 c7 00 c7 00 c7 00 c7 00 c8 00 c8 00     ................
    3aaa:	c8 00 c8 00 c9 00 c9 00 c9 00 c9 00 c9 00 ca 00     ................
    3aba:	ca 00 ca 00 ca 00 cb 00 cb 00 cb 00 cb 00 cb 00     ................
    3aca:	cc 00 cc 00 cc 00 cc 00 cd 00 cd 00 cd 00 cd 00     ................
    3ada:	ce 00 ce 00 ce 00 ce 00 ce 00 cf 00 cf 00 cf 00     ................
    3aea:	cf 00 d0 00 d0 00 d0 00 d0 00 d0 00 d1 00 d1 00     ................
    3afa:	d1 00 d1 00 d2 00 d2 00 d2 00 d2 00 d3 00 d3 00     ................
    3b0a:	d3 00 d3 00 d3 00 d4 00 d4 00 d4 00 d4 00 d5 00     ................
    3b1a:	d5 00 d5 00 d5 00 d5 00 d6 00 d6 00 d6 00 d6 00     ................
    3b2a:	d7 00 d7 00 d7 00 d7 00 d8 00 d8 00 d8 00 d8 00     ................
    3b3a:	d8 00 d9 00 d9 00 d9 00 d9 00 da 00 da 00 da 00     ................
    3b4a:	da 00 da 00 db 00 db 00 db 00 db 00 dc 00 dc 00     ................
    3b5a:	dc 00 dc 00 dc 00 dd 00 dd 00 dd 00 dd 00 de 00     ................
    3b6a:	de 00 de 00 de 00 df 00 df 00 df 00 df 00 df 00     ................
    3b7a:	e0 00 e0 00 e0 00 e0 00 e1 00 e1 00 e1 00 e1 00     ................
    3b8a:	e1 00 e2 00 e2 00 e2 00 e2 00 e3 00 e3 00 e3 00     ................
    3b9a:	e3 00 e4 00 e4 00 e4 00 e4 00 e4 00 e5 00 e5 00     ................
    3baa:	e5 00 e5 00 e6 00 e6 00 e6 00 e6 00 e6 00 e7 00     ................
    3bba:	e7 00 e7 00 e7 00 e8 00 e8 00 e8 00 e8 00 e9 00     ................
    3bca:	e9 00 e9 00 e9 00 e9 00 ea 00 ea 00 ea 00 ea 00     ................
    3bda:	eb 00 eb 00 eb 00 eb 00 eb 00 ec 00 ec 00 ec 00     ................
    3bea:	ec 00 ed 00 ed 00 ed 00 ed 00 ee 00 ee 00 ee 00     ................
    3bfa:	ee 00 ee 00 ef 00 ef 00 ef 00 ef 00 f0 00 f0 00     ................
    3c0a:	f0 00 f0 00 f0 00 f1 00 f1 00 f1 00 f1 00 f2 00     ................
    3c1a:	f2 00 f2 00 f2 00 f3 00 f3 00 f3 00 f3 00 f3 00     ................
    3c2a:	f4 00 f4 00 f4 00 f4 00 f5 00 f5 00 f5 00 f5 00     ................
    3c3a:	f5 00 f6 00 f6 00 f6 00 f6 00 f7 00 f7 00 f7 00     ................
    3c4a:	f7 00 f7 00 f8 00 f8 00 f8 00 f8 00 f9 00 f9 00     ................
    3c5a:	f9 00 f9 00 fa 00 fa 00 fa 00 fa 00 fa 00 fb 00     ................
    3c6a:	fb 00 fb 00 fb 00 fc 00 fc 00 fc 00 fc 00 fc 00     ................
    3c7a:	fd 00 fd 00 fd 00 fd 00 fe 00 fe 00 fe 00 fe 00     ................
    3c8a:	ff 00 ff 00 ff 00 ff 00 ff 00 00 01 00 01 00 01     ................
    3c9a:	00 01 01 01 01 01 01 01 01 01 01 01 02 01 02 01     ................
    3caa:	02 01 02 01 03 01 03 01 03 01 03 01 04 01 04 01     ................
    3cba:	04 01 04 01 04 01 05 01 05 01 05 01 05 01 06 01     ................
    3cca:	06 01 06 01 06 01 06 01 07 01 07 01 07 01 07 01     ................
    3cda:	08 01 08 01 08 01 08 01 09 01 09 01 09 01 09 01     ................
    3cea:	09 01 0a 01 0a 01 0a 01 0a 01 0b 01 0b 01 0b 01     ................
    3cfa:	0b 01 0b 01 0c 01 0c 01 0c 01 0c 01 0d 01 0d 01     ................
    3d0a:	0d 01 0d 01 0e 01 0e 01 0e 01 0e 01 0e 01 0f 01     ................
    3d1a:	0f 01 0f 01 0f 01 10 01 10 01 10 01 10 01 10 01     ................
    3d2a:	11 01 11 01 11 01 11 01 12 01 12 01 12 01 12 01     ................
    3d3a:	12 01 13 01 13 01 13 01 13 01 14 01 14 01 14 01     ................
    3d4a:	14 01 15 01 15 01 15 01 15 01 15 01 16 01 16 01     ................
    3d5a:	16 01 16 01 17 01 17 01 17 01 17 01 17 01 18 01     ................
    3d6a:	18 01 18 01 18 01 19 01 19 01 19 01 19 01 1a 01     ................
    3d7a:	1a 01 1a 01 1a 01 1a 01 1b 01 1b 01 1b 01 1b 01     ................
    3d8a:	1c 01 1c 01 1c 01 1c 01 1c 01 1d 01 1d 01 1d 01     ................
    3d9a:	1d 01 1e 01 1e 01 1e 01 1e 01 1f 01 1f 01 1f 01     ................
    3daa:	1f 01 1f 01 20 01 20 01 20 01 20 01 21 01 21 01     .... . . . .!.!.
    3dba:	21 01 21 01 21 01 22 01 22 01 22 01 22 01 23 01     !.!.!.".".".".#.
    3dca:	23 01 23 01 23 01 24 01 24 01 24 01 24 01 24 01     #.#.#.$.$.$.$.$.
    3dda:	25 01 25 01 25 01 25 01 26 01 26 01 26 01 26 01     %.%.%.%.&.&.&.&.
    3dea:	26 01 27 01 27 01 27 01 27 01 28 01 28 01 28 01     &.'.'.'.'.(.(.(.
    3dfa:	28 01 29 01 29 01 29 01 29 01 29 01 2a 01 2a 01     (.).).).).).*.*.
    3e0a:	2a 01 2a 01 2b 01 2b 01 2b 01 2b 01 2b 01 2c 01     *.*.+.+.+.+.+.,.
    3e1a:	2c 01 2c 01 2c 01 2d 01 2d 01 2d 01 2d 01 2e 01     ,.,.,.-.-.-.-...
    3e2a:	2e 01 2e 01 2e 01 2e 01 2f 01 2f 01 2f 01 2f 01     .......././././.
    3e3a:	30 01 30 01 30 01 30 01 30 01 31 01 31 01 31 01     0.0.0.0.0.1.1.1.
    3e4a:	31 01 32 01 32 01 32 01 32 01 32 01 33 01 33 01     1.2.2.2.2.2.3.3.
    3e5a:	33 01 33 01 34 01 34 01 34 01 34 01 35 01 35 01     3.3.4.4.4.4.5.5.
    3e6a:	35 01 35 01 35 01 36 01 36 01 36 01 36 01 37 01     5.5.5.6.6.6.6.7.
    3e7a:	37 01 37 01 37 01 37 01 38 01 38 01 38 01 38 01     7.7.7.7.8.8.8.8.
    3e8a:	39 01 39 01 39 01 39 01 3a 01 3a 01 3a 01 3a 01     9.9.9.9.:.:.:.:.
    3e9a:	3a 01 3b 01 3b 01 3b 01 3b 01 3c 01 3c 01 3c 01     :.;.;.;.;.<.<.<.
    3eaa:	3c 01 3c 01 3d 01 3d 01 3d 01 3d 01 3e 01 3e 01     <.<.=.=.=.=.>.>.
    3eba:	3e 01 3e 01 3f 01 3f 01 3f 01 3f 01 3f 01 40 01     >.>.?.?.?.?.?.@.
    3eca:	40 01 40 01 40 01 41 01 41 01 41 01 41 01 41 01     @.@.@.A.A.A.A.A.
    3eda:	42 01 42 01 42 01 42 01 43 01 43 01 43 01 43 01     B.B.B.B.C.C.C.C.
    3eea:	44 01 44 01 44 01 44 01 44 01 45 01 45 01 45 01     D.D.D.D.D.E.E.E.
    3efa:	45 01 46 01 46 01 46 01 46 01 46 01 47 01 47 01     E.F.F.F.F.F.G.G.
    3f0a:	47 01 47 01 48 01 48 01 48 01 48 01 49 01 49 01     G.G.H.H.H.H.I.I.
    3f1a:	49 01 49 01 49 01 4a 01 4a 01 4a 01 4a 01 4b 01     I.I.I.J.J.J.J.K.
    3f2a:	4b 01 4b 01 4b 01 4b 01 4c 01 4c 01 4c 01 4c 01     K.K.K.K.L.L.L.L.
    3f3a:	4d 01 4d 01 4d 01 4d 01 4d 01 4e 01 4e 01 4e 01     M.M.M.M.M.N.N.N.
    3f4a:	4e 01 4f 01 4f 01 4f 01 4f 01 50 01 50 01 50 01     N.O.O.O.O.P.P.P.
    3f5a:	50 01 50 01 51 01 51 01 51 01 51 01 52 01 52 01     P.P.Q.Q.Q.Q.R.R.
    3f6a:	52 01 52 01 52 01 53 01 53 01 53 01 53 01 54 01     R.R.R.S.S.S.S.T.
    3f7a:	54 01 54 01 54 01 55 01 55 01 55 01 55 01 55 01     T.T.T.U.U.U.U.U.
    3f8a:	56 01 56 01 56 01 56 01 57 01 57 01 57 01 57 01     V.V.V.V.W.W.W.W.
    3f9a:	57 01 58 01 58 01 58 01 58 01 59 01 59 01 59 01     W.X.X.X.X.Y.Y.Y.
    3faa:	59 01 5a 01 5a 01 5a 01 5a 01 5a 01 5b 01 5b 01     Y.Z.Z.Z.Z.Z.[.[.
    3fba:	5b 01 5b 01 5c 01 5c 01 5c 01 5c 01 5c 01 5d 01     [.[.\.\.\.\.\.].
    3fca:	5d 01 5d 01 5d 01 5e 01 5e 01 5e 01 5e 01 5f 01     ].].].^.^.^.^._.
    3fda:	5f 01 5f 01 5f 01 5f 01 60 01 60 01 60 01 60 01     _._._._.`.`.`.`.
    3fea:	61 01 61 01 61 01 61 01 61 01 62 01 62 01 62 01     a.a.a.a.a.b.b.b.
    3ffa:	62 01 63 01 63 01 63 01 63 01 64 01 64 01 64 01     b.c.c.c.c.d.d.d.
    400a:	64 01 64 01 65 01 65 01 65 01 65 01 66 01 66 01     d.d.e.e.e.e.f.f.
    401a:	66 01 66 01 66 01 67 01 67 01 67 01 67 01 68 01     f.f.f.g.g.g.g.h.
    402a:	68 01 68 01 68 01 68 01 69 01 69 01 69 01 69 01     h.h.h.h.i.i.i.i.
    403a:	6a 01 6a 01 6a 01 6a 01 6b 01 6b 01 6b 01 6b 01     j.j.j.j.k.k.k.k.
    404a:	6b 01 6c 01 6c 01 6c 01 6c 01 6d 01 6d 01 6d 01     k.l.l.l.l.m.m.m.
    405a:	6d 01 6d 01 6e 01 6e 01 6e 01 6e 01 6f 01 6f 01     m.m.n.n.n.n.o.o.
    406a:	6f 01 6f 01 70 01 70 01 70 01 70 01 70 01 71 01     o.o.p.p.p.p.p.q.
    407a:	71 01 71 01 71 01 72 01 72 01 72 01 72 01 72 01     q.q.q.r.r.r.r.r.
    408a:	73 01 73 01 73 01 73 01 74 01 74 01 74 01 74 01     s.s.s.s.t.t.t.t.
    409a:	75 01 75 01 75 01 75 01 75 01 76 01 76 01 76 01     u.u.u.u.u.v.v.v.
    40aa:	76 01 77 01 77 01 77 01 77 01 77 01 78 01 78 01     v.w.w.w.w.w.x.x.
    40ba:	78 01 78 01 79 01 79 01 79 01 79 01 7a 01 7a 01     x.x.y.y.y.y.z.z.
    40ca:	7a 01 7a 01 7a 01 7b 01 7b 01 7b 01 7b 01 7c 01     z.z.z.{.{.{.{.|.
    40da:	7c 01 7c 01 7c 01 7c 01 7d 01 7d 01 7d 01 7d 01     |.|.|.|.}.}.}.}.
    40ea:	7e 01 7e 01 7e 01 7e 01 7f 01 7f 01 7f 01 7f 01     ~.~.~.~.........
    40fa:	7f 01 80 01 80 01 80 01 80 01 81 01 81 01 81 01     ................
    410a:	81 01 81 01 82 01 82 01 82 01 82 01 83 01 83 01     ................
    411a:	83 01 83 01 83 01 84 01 84 01 84 01 84 01 85 01     ................
    412a:	85 01 85 01 85 01 86 01 86 01 86 01 86 01 86 01     ................
    413a:	87 01 87 01 87 01 87 01 88 01 88 01 88 01 88 01     ................
    414a:	88 01 89 01 89 01 89 01 89 01 8a 01 8a 01 8a 01     ................
    415a:	8a 01 8b 01 8b 01 8b 01 8b 01 8b 01 8c 01 8c 01     ................
    416a:	8c 01 8c 01 8d 01 8d 01 8d 01 8d 01 8d 01 8e 01     ................
    417a:	8e 01 8e 01 8e 01 8f 01 8f 01 8f 01 8f 01 90 01     ................
    418a:	90 01 90 01 90 01 90 01 91 01 91 01 91 01 91 01     ................
    419a:	92 01 92 01 92 01 92 01 92 01 93 01 93 01 93 01     ................
    41aa:	93 01 94 01 94 01 94 01 94 01 95 01 95 01 95 01     ................
    41ba:	95 01 95 01 96 01 96 01 96 01 96 01 97 01 97 01     ................
    41ca:	97 01 97 01 97 01 98 01 98 01 98 01 98 01 99 01     ................
    41da:	99 01 99 01 99 01 9a 01 9a 01 9a 01 9a 01 9a 01     ................
    41ea:	9b 01 9b 01 9b 01 9b 01 9c 01 9c 01 9c 01 9c 01     ................
    41fa:	9c 01 9d 01 9d 01 9d 01 9d 01 9e 01 9e 01 9e 01     ................
    420a:	9e 01 9e 01 9f 01 9f 01 9f 01 9f 01 a0 01 a0 01     ................
    421a:	a0 01 a0 01 a1 01 a1 01 a1 01 a1 01 a1 01 a2 01     ................
    422a:	a2 01 a2 01 a2 01 a3 01 a3 01 a3 01 a3 01 a3 01     ................
    423a:	a4 01 a4 01 a4 01 a4 01 a5 01 a5 01 a5 01 a5 01     ................
    424a:	a6 01 a6 01 a6 01 a6 01 a6 01 a7 01 a7 01 a7 01     ................
    425a:	a7 01 a8 01 a8 01 a8 01 a8 01 a8 01 a9 01 a9 01     ................
    426a:	a9 01 a9 01 aa 01 aa 01 aa 01 aa 01 ab 01 ab 01     ................
    427a:	ab 01 ab 01 ab 01 ac 01 ac 01 ac 01 ac 01 ad 01     ................
    428a:	ad 01 ad 01 ad 01 ad 01 ae 01 ae 01 ae 01 ae 01     ................
    429a:	af 01 af 01 af 01 af 01 b0 01 b0 01 b0 01 b0 01     ................
    42aa:	b0 01 b1 01 b1 01 b1 01 b1 01 b2 01 b2 01 b2 01     ................
    42ba:	b2 01 b2 01 b3 01 b3 01 b3 01 b3 01 b4 01 b4 01     ................
    42ca:	b4 01 b4 01 b5 01 b5 01 b5 01 b5 01 b5 01 b6 01     ................
    42da:	b6 01 b6 01 b6 01 b7 01 b7 01 b7 01 b7 01 b7 01     ................
    42ea:	b8 01 b8 01 b8 01 b8 01 b9 01 b9 01 b9 01 b9 01     ................
    42fa:	b9 01 ba 01 ba 01 ba 01 ba 01 bb 01 bb 01 bb 01     ................
    430a:	bb 01 bc 01 bc 01 bc 01 bc 01 bc 01 bd 01 bd 01     ................
    431a:	bd 01 bd 01 be 01 be 01 be 01 be 01 be 01 bf 01     ................
    432a:	bf 01 bf 01 bf 01 c0 01 c0 01 c0 01 c0 01 c1 01     ................
    433a:	c1 01 c1 01 c1 01 c1 01 c2 01 c2 01 c2 01 c2 01     ................
    434a:	c3 01 c3 01 c3 01 c3 01 c3 01 c4 01 c4 01 c4 01     ................
    435a:	c4 01 c5 01 c5 01 c5 01 c5 01 c6 01 c6 01 c6 01     ................
    436a:	c6 01 c6 01 c7 01 c7 01 c7 01 c7 01 c8 01 c8 01     ................
    437a:	c8 01 c8 01 c8 01 c9 01 c9 01 c9 01 c9 01 ca 01     ................
    438a:	ca 01 ca 01 ca 01 cb 01 cb 01 cb 01 cb 01 cb 01     ................
    439a:	cc 01 cc 01 cc 01 cc 01 cd 01 cd 01 cd 01 cd 01     ................
    43aa:	cd 01 ce 01 ce 01 ce 01 ce 01 cf 01 cf 01 cf 01     ................
    43ba:	cf 01 d0 01 d0 01 d0 01 d0 01 d0 01 d1 01 d1 01     ................
    43ca:	d1 01 d1 01 d2 01 d2 01 d2 01 d2 01 d2 01 d3 01     ................
    43da:	d3 01 d3 01 d3 01 d4 01 d4 01 d4 01 d4 01 d4 01     ................
    43ea:	d5 01 d5 01 d5 01 d5 01 d6 01 d6 01 d6 01 d6 01     ................
    43fa:	d7 01 d7 01 d7 01 d7 01 d7 01 d8 01 d8 01 d8 01     ................
    440a:	d8 01 d9 01 d9 01 d9 01 d9 01 d9 01 da 01 da 01     ................
    441a:	da 01 da 01 db 01 db 01 db 01 db 01 dc 01 dc 01     ................
    442a:	dc 01 dc 01 dc 01 dd 01 dd 01 dd 01 dd 01 de 01     ................
    443a:	de 01 de 01 de 01 de 01 df 01 df 01 df 01 df 01     ................
    444a:	e0 01 e0 01 e0 01 e0 01 e1 01 e1 01 e1 01 e1 01     ................
    445a:	e1 01 e2 01 e2 01 e2 01 e2 01 e3 01 e3 01 e3 01     ................
    446a:	e3 01 e3 01 e4 01 e4 01 e4 01 e4 01 e5 01 e5 01     ................
    447a:	e5 01 e5 01 e6 01 e6 01 e6 01 e6 01 e6 01 e7 01     ................
    448a:	e7 01 e7 01 e7 01 e8 01 e8 01 e8 01 e8 01 e8 01     ................
    449a:	e9 01 e9 01 e9 01 e9 01 ea 01 ea 01 ea 01 ea 01     ................
    44aa:	eb 01 eb 01 eb 01 eb 01 eb 01 ec 01 ec 01 ec 01     ................
    44ba:	ec 01 ed 01 ed 01 ed 01 ed 01 ed 01 ee 01 ee 01     ................
    44ca:	ee 01 ee 01 ef 01 ef 01 ef 01 ef 01 ef 01 f0 01     ................
    44da:	f0 01 f0 01 f0 01 f1 01 f1 01 f1 01 f1 01 f2 01     ................
    44ea:	f2 01 f2 01 f2 01 f2 01 f3 01 f3 01 f3 01 f3 01     ................
    44fa:	f4 01 f4 01 f4 01 f4 01 f4 01 f5 01 f5 01 f5 01     ................
    450a:	f5 01 f6 01 f6 01 f6 01 f6 01 f7 01 f7 01 f7 01     ................
    451a:	f7 01 f7 01 f8 01 f8 01 f8 01 f8 01 f9 01 f9 01     ................
    452a:	f9 01 f9 01 f9 01 fa 01 fa 01 fa 01 fa 01 fb 01     ................
    453a:	fb 01 fb 01 fb 01 fc 01 fc 01 fc 01 fc 01 fc 01     ................
    454a:	fd 01 fd 01 fd 01 fd 01 fe 01 fe 01 fe 01 fe 01     ................
    455a:	fe 01 ff 01 ff 01 ff 01 ff 01 00 02 00 02 00 02     ................
    456a:	00 02 01 02 01 02 01 02 01 02 01 02 02 02 02 02     ................
    457a:	02 02 02 02 03 02 03 02 03 02 03 02 03 02 04 02     ................
    458a:	04 02 04 02 04 02 05 02 05 02 05 02 05 02 06 02     ................
    459a:	06 02 06 02 06 02 06 02 07 02 07 02 07 02 07 02     ................
    45aa:	08 02 08 02 08 02 08 02 08 02 09 02 09 02 09 02     ................
    45ba:	09 02 0a 02 0a 02 0a 02 0a 02 0a 02 0b 02 0b 02     ................
    45ca:	0b 02 0b 02 0c 02 0c 02 0c 02 0c 02 0d 02 0d 02     ................
    45da:	0d 02 0d 02 0d 02 0e 02 0e 02 0e 02 0e 02 0f 02     ................
    45ea:	0f 02 0f 02 0f 02 0f 02 10 02 10 02 10 02 10 02     ................
    45fa:	11 02 11 02 11 02 11 02 12 02 12 02 12 02 12 02     ................
    460a:	12 02 13 02 13 02 13 02 13 02 14 02 14 02 14 02     ................
    461a:	14 02 14 02 15 02 15 02 15 02 15 02 16 02 16 02     ................
    462a:	16 02 16 02 17 02 17 02 17 02 17 02 17 02 18 02     ................
    463a:	18 02 18 02 18 02 19 02 19 02 19 02 19 02 19 02     ................
    464a:	1a 02 1a 02 1a 02 1a 02 1b 02 1b 02 1b 02 1b 02     ................
    465a:	1c 02 1c 02 1c 02 1c 02 1c 02 1d 02 1d 02 1d 02     ................
    466a:	1d 02 1e 02 1e 02 1e 02 1e 02 1e 02 1f 02 1f 02     ................
    467a:	1f 02 1f 02 20 02 20 02 20 02 20 02 21 02 21 02     .... . . . .!.!.
    468a:	21 02 21 02 21 02 22 02 22 02 22 02 22 02 23 02     !.!.!.".".".".#.
    469a:	23 02 23 02 23 02 23 02 24 02 24 02 24 02 24 02     #.#.#.#.$.$.$.$.
    46aa:	25 02 25 02 25 02 25 02 25 02 26 02 26 02 26 02     %.%.%.%.%.&.&.&.
    46ba:	26 02 27 02 27 02 27 02 27 02 28 02 28 02 28 02     &.'.'.'.'.(.(.(.
    46ca:	28 02 28 02 29 02 29 02 29 02 29 02 2a 02 2a 02     (.(.).).).).*.*.
    46da:	2a 02 2a 02 2a 02 2b 02 2b 02 2b 02 2b 02 2c 02     *.*.*.+.+.+.+.,.
    46ea:	2c 02 2c 02 2c 02 2d 02 2d 02 2d 02 2d 02 2d 02     ,.,.,.-.-.-.-.-.
    46fa:	2e 02 2e 02 2e 02 2e 02 2f 02 2f 02 2f 02 2f 02     .......././././.
    470a:	2f 02 30 02 30 02 30 02 30 02 31 02 31 02 31 02     /.0.0.0.0.1.1.1.
    471a:	31 02 32 02 32 02 32 02 32 02 32 02 33 02 33 02     1.2.2.2.2.2.3.3.
    472a:	33 02 33 02 34 02 34 02 34 02 34 02 34 02 35 02     3.3.4.4.4.4.4.5.
    473a:	35 02 35 02 35 02 36 02 36 02 36 02 36 02 37 02     5.5.5.6.6.6.6.7.
    474a:	37 02 37 02 37 02 37 02 38 02 38 02 38 02 38 02     7.7.7.7.8.8.8.8.
    475a:	39 02 39 02 39 02 39 02 39 02 3a 02 3a 02 3a 02     9.9.9.9.9.:.:.:.
    476a:	3a 02 3b 02 3b 02 3b 02 3b 02 3c 02 3c 02 3c 02     :.;.;.;.;.<.<.<.
    477a:	3c 02 3c 02 3d 02 3d 02 3d 02 3d 02 3e 02 3e 02     <.<.=.=.=.=.>.>.
    478a:	3e 02 3e 02 3e 02 3f 02 3f 02 3f 02 3f 02 40 02     >.>.>.?.?.?.?.@.
    479a:	40 02 40 02 40 02 40 02 41 02 41 02 41 02 41 02     @.@.@.@.A.A.A.A.
    47aa:	42 02 42 02 42 02 42 02 43 02 43 02 43 02 43 02     B.B.B.B.C.C.C.C.
    47ba:	43 02 44 02 44 02 44 02 44 02 45 02 45 02 45 02     C.D.D.D.D.E.E.E.
    47ca:	45 02 45 02 46 02 46 02 46 02 46 02 47 02 47 02     E.E.F.F.F.F.G.G.
    47da:	47 02 47 02 48 02 48 02 48 02 48 02 48 02 49 02     G.G.H.H.H.H.H.I.
    47ea:	49 02 49 02 49 02 4a 02 4a 02 4a 02 4a 02 4a 02     I.I.I.J.J.J.J.J.
    47fa:	4b 02 4b 02 4b 02 4b 02 4c 02 4c 02 4c 02 4c 02     K.K.K.K.L.L.L.L.
    480a:	4d 02 4d 02 4d 02 4d 02 4d 02 4e 02 4e 02 4e 02     M.M.M.M.M.N.N.N.
    481a:	4e 02 4f 02 4f 02 4f 02 4f 02 4f 02 50 02 50 02     N.O.O.O.O.O.P.P.
    482a:	50 02 50 02 51 02 51 02 51 02 51 02 52 02 52 02     P.P.Q.Q.Q.Q.R.R.
    483a:	52 02 52 02 52 02 53 02 53 02 53 02 53 02 54 02     R.R.R.S.S.S.S.T.
    484a:	54 02 54 02 54 02 54 02 55 02 55 02 55 02 55 02     T.T.T.T.U.U.U.U.
    485a:	56 02 56 02 56 02 56 02 57 02 57 02 57 02 57 02     V.V.V.V.W.W.W.W.
    486a:	57 02 58 02 58 02 58 02 58 02 59 02 59 02 59 02     W.X.X.X.X.Y.Y.Y.
    487a:	59 02 59 02 5a 02 5a 02 5a 02 5a 02 5b 02 5b 02     Y.Y.Z.Z.Z.Z.[.[.
    488a:	5b 02 5b 02 5c 02 5c 02 5c 02 5c 02 5c 02 5d 02     [.[.\.\.\.\.\.].
    489a:	5d 02 5d 02 5d 02 5e 02 5e 02 5e 02 5e 02 5e 02     ].].].^.^.^.^.^.
    48aa:	5f 02 5f 02 5f 02 5f 02 60 02 60 02 60 02 60 02     _._._._.`.`.`.`.
    48ba:	60 02 61 02 61 02 61 02 61 02 62 02 62 02 62 02     `.a.a.a.a.b.b.b.
    48ca:	62 02 63 02 63 02 63 02 63 02 63 02 64 02 64 02     b.c.c.c.c.c.d.d.
    48da:	64 02 64 02 65 02 65 02 65 02 65 02 65 02 66 02     d.d.e.e.e.e.e.f.
    48ea:	66 02 66 02 66 02 67 02 67 02 67 02 67 02 68 02     f.f.f.g.g.g.g.h.
    48fa:	68 02 68 02 68 02 68 02 69 02 69 02 69 02 69 02     h.h.h.h.i.i.i.i.
    490a:	6a 02 6a 02 6a 02 6a 02 6a 02 6b 02 6b 02 6b 02     j.j.j.j.j.k.k.k.
    491a:	6b 02 6c 02 6c 02 6c 02 6c 02 6d 02 6d 02 6d 02     k.l.l.l.l.m.m.m.
    492a:	6d 02 6d 02 6e 02 6e 02 6e 02 6e 02 6f 02 6f 02     m.m.n.n.n.n.o.o.
    493a:	6f 02 6f 02 6f 02 70 02 70 02 70 02 70 02 71 02     o.o.o.p.p.p.p.q.
    494a:	71 02 71 02 71 02 72 02 72 02 72 02 72 02 72 02     q.q.q.r.r.r.r.r.
    495a:	73 02 73 02 73 02 73 02 74 02 74 02 74 02 74 02     s.s.s.s.t.t.t.t.
    496a:	74 02 75 02 75 02 75 02 75 02 76 02 76 02 76 02     t.u.u.u.u.v.v.v.
    497a:	76 02 77 02 77 02 77 02 77 02 77 02 78 02 78 02     v.w.w.w.w.w.x.x.
    498a:	78 02 78 02 79 02 79 02 79 02 79 02 79 02 7a 02     x.x.y.y.y.y.y.z.
    499a:	7a 02 7a 02 7a 02 7b 02 7b 02 7b 02 7b 02 7b 02     z.z.z.{.{.{.{.{.
    49aa:	7c 02 7c 02 7c 02 7c 02 7d 02 7d 02 7d 02 7d 02     |.|.|.|.}.}.}.}.
    49ba:	7e 02 7e 02 7e 02 7e 02 7e 02 7f 02 7f 02 7f 02     ~.~.~.~.~.......
    49ca:	7f 02 80 02 80 02 80 02 80 02 80 02 81 02 81 02     ................
    49da:	81 02 81 02 82 02 82 02 82 02 82 02 83 02 83 02     ................
    49ea:	83 02 83 02 83 02 84 02 84 02 84 02 84 02 85 02     ................
    49fa:	85 02 85 02 85 02 85 02 86 02 86 02 86 02 86 02     ................
    4a0a:	87 02 87 02 87 02 87 02 88 02 88 02 88 02 88 02     ................
    4a1a:	88 02 89 02 89 02 89 02 89 02 8a 02 8a 02 8a 02     ................
    4a2a:	8a 02 8a 02 8b 02 8b 02 8b 02 8b 02 8c 02 8c 02     ................
    4a3a:	8c 02 8c 02 8d 02 8d 02 8d 02 8d 02 8d 02 8e 02     ................
    4a4a:	8e 02 8e 02 8e 02 8f 02 8f 02 8f 02 8f 02 8f 02     ................
    4a5a:	90 02 90 02 90 02 90 02 91 02 91 02 91 02 91 02     ................
    4a6a:	92 02 92 02 92 02 92 02 92 02 93 02 93 02 93 02     ................
    4a7a:	93 02 94 02 94 02 94 02 94 02 94 02 95 02 95 02     ................
    4a8a:	95 02 95 02 96 02 96 02 96 02 96 02 96 02 97 02     ................
    4a9a:	97 02 97 02 97 02 98 02 98 02 98 02 98 02 99 02     ................
    4aaa:	99 02 99 02 99 02 99 02 9a 02 9a 02 9a 02 9a 02     ................
    4aba:	9b 02 9b 02 9b 02 9b 02 9b 02 9c 02 9c 02 9c 02     ................
    4aca:	9c 02 9d 02 9d 02 9d 02 9d 02 9e 02 9e 02 9e 02     ................
    4ada:	9e 02 9e 02 9f 02 9f 02 9f 02 9f 02 a0 02 a0 02     ................
    4aea:	a0 02 a0 02 a0 02 a1 02 a1 02 a1 02 a1 02 a2 02     ................
    4afa:	a2 02 a2 02 a2 02 a3 02 a3 02 a3 02 a3 02 a3 02     ................
    4b0a:	a4 02 a4 02 a4 02 a4 02 a5 02 a5 02 a5 02 a5 02     ................
    4b1a:	a5 02 a6 02 a6 02 a6 02 a6 02 a7 02 a7 02 a7 02     ................
    4b2a:	a7 02 a8 02 a8 02 a8 02 a8 02 a8 02 a9 02 a9 02     ................
    4b3a:	a9 02 a9 02 aa 02 aa 02 aa 02 aa 02 aa 02 ab 02     ................
    4b4a:	ab 02 ab 02 ab 02 ac 02 ac 02 ac 02 ac 02 ad 02     ................
    4b5a:	ad 02 ad 02 ad 02 ad 02 ae 02 ae 02 ae 02 ae 02     ................
    4b6a:	af 02 af 02 af 02 af 02 af 02 b0 02 b0 02 b0 02     ................
    4b7a:	b0 02 b1 02 b1 02 b1 02 b1 02 b1 02 b2 02 b2 02     ................
    4b8a:	b2 02 b2 02 b3 02 b3 02 b3 02 b3 02 b4 02 b4 02     ................
    4b9a:	b4 02 b4 02 b4 02 b5 02 b5 02 b5 02 b5 02 b6 02     ................
    4baa:	b6 02 b6 02 b6 02 b6 02 b7 02 b7 02 b7 02 b7 02     ................
    4bba:	b8 02 b8 02 b8 02 b8 02 b9 02 b9 02 b9 02 b9 02     ................
    4bca:	b9 02 ba 02 ba 02 ba 02 ba 02 bb 02 bb 02 bb 02     ................
    4bda:	bb 02 bb 02 bc 02 bc 02 bc 02 bc 02 bd 02 bd 02     ................
    4bea:	bd 02 bd 02 be 02 be 02 be 02 be 02 be 02 bf 02     ................
    4bfa:	bf 02 bf 02 bf 02 c0 02 c0 02 c0 02 c0 02 c0 02     ................
    4c0a:	c1 02 c1 02 c1 02 c1 02 c2 02 c2 02 c2 02 c2 02     ................
    4c1a:	c3 02 c3 02 c3 02 c3 02 c3 02 c4 02 c4 02 c4 02     ................
    4c2a:	c4 02 c5 02 c5 02 c5 02 c5 02 c5 02 c6 02 c6 02     ................
    4c3a:	c6 02 c6 02 c7 02 c7 02 c7 02 c7 02 c8 02 c8 02     ................
    4c4a:	c8 02 c8 02 c8 02 c9 02 c9 02 c9 02 c9 02 ca 02     ................
    4c5a:	ca 02 ca 02 ca 02 ca 02 cb 02 cb 02 cb 02 cb 02     ................
    4c6a:	cc 02 cc 02 cc 02 cc 02 cc 02 cd 02 cd 02 cd 02     ................
    4c7a:	cd 02 ce 02 ce 02 ce 02 ce 02 cf 02 cf 02 cf 02     ................
    4c8a:	cf 02 cf 02 d0 02 d0 02 d0 02 d0 02 d1 02 d1 02     ................
    4c9a:	d1 02 d1 02 d1 02 d2 02 d2 02 d2 02 d2 02 d3 02     ................
    4caa:	d3 02 d3 02 d3 02 d4 02 d4 02 d4 02 d4 02 d4 02     ................
    4cba:	d5 02 d5 02 d5 02 d5 02 d6 02 d6 02 d6 02 d6 02     ................
    4cca:	d6 02 d7 02 d7 02 d7 02 d7 02 d8 02 d8 02 d8 02     ................
    4cda:	d8 02 d9 02 d9 02 d9 02 d9 02 d9 02 da 02 da 02     ................
    4cea:	da 02 da 02 db 02 db 02 db 02 db 02 db 02 dc 02     ................
    4cfa:	dc 02 dc 02 dc 02 dd 02 dd 02 dd 02 dd 02 de 02     ................
    4d0a:	de 02 de 02 de 02 de 02 df 02 df 02 df 02 df 02     ................
    4d1a:	e0 02 e0 02 e0 02 e0 02 e0 02 e1 02 e1 02 e1 02     ................
    4d2a:	e1 02 e2 02 e2 02 e2 02 e2 02 e3 02 e3 02 e3 02     ................
    4d3a:	e3 02 e3 02 e4 02 e4 02 e4 02 e4 02 e5 02 e5 02     ................
    4d4a:	e5 02 e5 02 e5 02 e6 02 e6 02 e6 02 e6 02 e7 02     ................
    4d5a:	e7 02 e7 02 e7 02 e7 02 e8 02 e8 02 e8 02 e8 02     ................
    4d6a:	e9 02 e9 02 e9 02 e9 02 ea 02 ea 02 ea 02 ea 02     ................
    4d7a:	ea 02 eb 02 eb 02 eb 02 eb 02 ec 02 ec 02 ec 02     ................
    4d8a:	ec 02 ec 02 ed 02 ed 02 ed 02 ed 02 ee 02 ee 02     ................
    4d9a:	ee 02 ee 02 ef 02 ef 02 ef 02 ef 02 ef 02 f0 02     ................
    4daa:	f0 02 f0 02 f0 02 f1 02 f1 02 f1 02 f1 02 f1 02     ................
    4dba:	f2 02 f2 02 f2 02 f2 02 f3 02 f3 02 f3 02 f3 02     ................
    4dca:	f4 02 f4 02 f4 02 f4 02 f4 02 f5 02 f5 02 f5 02     ................
    4dda:	f5 02 f6 02 f6 02 f6 02 f6 02 f6 02 f7 02 f7 02     ................
    4dea:	f7 02 f7 02 f8 02 f8 02 f8 02 f8 02 f9 02 f9 02     ................
    4dfa:	f9 02 f9 02 f9 02 fa 02 fa 02 fa 02 fa 02 fb 02     ................
    4e0a:	fb 02 fb 02 fb 02 fb 02 fc 02 fc 02 fc 02 fc 02     ................
    4e1a:	fd 02 fd 02 fd 02 fd 02 fe 02 fe 02 fe 02 fe 02     ................
    4e2a:	fe 02 ff 02 ff 02 ff 02 ff 02 00 03 00 03 00 03     ................
    4e3a:	00 03 00 03 01 03 01 03 01 03 01 03 02 03 02 03     ................
    4e4a:	02 03 02 03 02 03 03 03 03 03 03 03 03 03 04 03     ................
    4e5a:	04 03 04 03 04 03 05 03 05 03 05 03 05 03 05 03     ................
    4e6a:	06 03 06 03 06 03 06 03 07 03 07 03 07 03 07 03     ................
    4e7a:	07 03 08 03 08 03 08 03 08 03 09 03 09 03 09 03     ................
    4e8a:	09 03 0a 03 0a 03 0a 03 0a 03 0a 03 0b 03 0b 03     ................
    4e9a:	0b 03 0b 03 0c 03 0c 03 0c 03 0c 03 0c 03 0d 03     ................
    4eaa:	0d 03 0d 03 0d 03 0e 03 0e 03 0e 03 0e 03 0f 03     ................
    4eba:	0f 03 0f 03 0f 03 0f 03 10 03 10 03 10 03 10 03     ................
    4eca:	11 03 11 03 11 03 11 03 11 03 12 03 12 03 12 03     ................
    4eda:	12 03 13 03 13 03 13 03 13 03 14 03 14 03 14 03     ................
    4eea:	14 03 14 03 15 03 15 03 15 03 15 03 16 03 16 03     ................
    4efa:	16 03 16 03 16 03 17 03 17 03 17 03 17 03 18 03     ................
    4f0a:	18 03 18 03 18 03 19 03 19 03 19 03 19 03 19 03     ................
    4f1a:	1a 03 1a 03 1a 03 1a 03 1b 03 1b 03 1b 03 1b 03     ................
    4f2a:	1b 03 1c 03 1c 03 1c 03 1c 03 1d 03 1d 03 1d 03     ................
    4f3a:	1d 03 1d 03 1e 03 1e 03 1e 03 1e 03 1f 03 1f 03     ................
    4f4a:	1f 03 1f 03 20 03 20 03 20 03 20 03 20 03 21 03     .... . . . . .!.
    4f5a:	21 03 21 03 21 03 22 03 22 03 22 03 22 03 22 03     !.!.!.".".".".".
    4f6a:	23 03 23 03 23 03 23 03 24 03 24 03 24 03 24 03     #.#.#.#.$.$.$.$.
    4f7a:	25 03 25 03 25 03 25 03 25 03 26 03 26 03 26 03     %.%.%.%.%.&.&.&.
    4f8a:	26 03 27 03 27 03 27 03 27 03 27 03 28 03 28 03     &.'.'.'.'.'.(.(.
    4f9a:	28 03 28 03 29 03 29 03 29 03 29 03 2a 03 2a 03     (.(.).).).).*.*.
    4faa:	2a 03 2a 03 2a 03 2b 03 2b 03 2b 03 2b 03 2c 03     *.*.*.+.+.+.+.,.
    4fba:	2c 03 2c 03 2c 03 2c 03 2d 03 2d 03 2d 03 2d 03     ,.,.,.,.-.-.-.-.
    4fca:	2e 03 2e 03 2e 03 2e 03 2f 03 2f 03 2f 03 2f 03     .......././././.
    4fda:	2f 03 30 03 30 03 30 03 30 03 31 03 31 03 31 03     /.0.0.0.0.1.1.1.
    4fea:	31 03 31 03 32 03 32 03 32 03 32 03 33 03 33 03     1.1.2.2.2.2.3.3.
    4ffa:	33 03 33 03 34 03 34 03 34 03 34 03 34 03 35 03     3.3.4.4.4.4.4.5.
    500a:	35 03 35 03 35 03 36 03 36 03 36 03 36 03 36 03     5.5.5.6.6.6.6.6.
    501a:	37 03 37 03 37 03 37 03 38 03 38 03 38 03 38 03     7.7.7.7.8.8.8.8.
    502a:	38 03 39 03 39 03 39 03 39 03 3a 03 3a 03 3a 03     8.9.9.9.9.:.:.:.
    503a:	3a 03 3b 03 3b 03 3b 03 3b 03 3b 03 3c 03 3c 03     :.;.;.;.;.;.<.<.
    504a:	3c 03 3c 03 3d 03 3d 03 3d 03 3d 03 3d 03 3e 03     <.<.=.=.=.=.=.>.
    505a:	3e 03 3e 03 3e 03 3f 03 3f 03 3f 03 3f 03 40 03     >.>.>.?.?.?.?.@.
    506a:	40 03 40 03 40 03 40 03 41 03 41 03 41 03 41 03     @.@.@.@.A.A.A.A.
    507a:	42 03 42 03 42 03 42 03 42 03 43 03 43 03 43 03     B.B.B.B.B.C.C.C.
    508a:	43 03 44 03 44 03 44 03 44 03 45 03 45 03 45 03     C.D.D.D.D.E.E.E.
    509a:	45 03 45 03 46 03 46 03 46 03 46 03 47 03 47 03     E.E.F.F.F.F.G.G.
    50aa:	47 03 47 03 47 03 48 03 48 03 48 03 48 03 49 03     G.G.G.H.H.H.H.I.
    50ba:	49 03 49 03 49 03 4a 03 4a 03 4a 03 4a 03 4a 03     I.I.I.J.J.J.J.J.
    50ca:	4b 03 4b 03 4b 03 4b 03 4c 03 4c 03 4c 03 4c 03     K.K.K.K.L.L.L.L.
    50da:	4c 03 4d 03 4d 03 4d 03 4d 03 4e 03 4e 03 4e 03     L.M.M.M.M.N.N.N.
    50ea:	4e 03 4f 03 4f 03 4f 03 4f 03 4f 03 50 03 50 03     N.O.O.O.O.O.P.P.
    50fa:	50 03 50 03 51 03 51 03 51 03 51 03 51 03 52 03     P.P.Q.Q.Q.Q.Q.R.
    510a:	52 03 52 03 52 03 53 03 53 03 53 03 53 03 53 03     R.R.R.S.S.S.S.S.
    511a:	54 03 54 03 54 03 54 03 55 03 55 03 55 03 55 03     T.T.T.T.U.U.U.U.
    512a:	56 03 56 03 56 03 56 03 56 03 57 03 57 03 57 03     V.V.V.V.V.W.W.W.
    513a:	57 03 58 03 58 03 58 03 58 03 58 03 59 03 59 03     W.X.X.X.X.X.Y.Y.
    514a:	59 03 59 03 5a 03 5a 03 5a 03 5a 03 5b 03 5b 03     Y.Y.Z.Z.Z.Z.[.[.
    515a:	5b 03 5b 03 5b 03 5c 03 5c 03 5c 03 5c 03 5d 03     [.[.[.\.\.\.\.].
    516a:	5d 03 5d 03 5d 03 5d 03 5e 03 5e 03 5e 03 5e 03     ].].].].^.^.^.^.
    517a:	5f 03 5f 03 5f 03 5f 03 60 03 60 03 60 03 60 03     _._._._.`.`.`.`.
    518a:	60 03 61 03 61 03 61 03 61 03 62 03 62 03 62 03     `.a.a.a.a.b.b.b.
    519a:	62 03 62 03 63 03 63 03 63 03 63 03 64 03 64 03     b.b.c.c.c.c.d.d.
    51aa:	64 03 64 03 65 03 65 03 65 03 65 03 65 03 66 03     d.d.e.e.e.e.e.f.
    51ba:	66 03 66 03 66 03 67 03 67 03 67 03 67 03 67 03     f.f.f.g.g.g.g.g.
    51ca:	68 03 68 03 68 03 68 03 69 03 69 03 69 03 69 03     h.h.h.h.i.i.i.i.
    51da:	6a 03 6a 03 6a 03 6a 03 6a 03 6b 03 6b 03 6b 03     j.j.j.j.j.k.k.k.
    51ea:	6b 03 6c 03 6c 03 6c 03 6c 03 6c 03 6d 03 6d 03     k.l.l.l.l.l.m.m.
    51fa:	6d 03 6d 03 6e 03 6e 03 6e 03 6e 03 6e 03 6f 03     m.m.n.n.n.n.n.o.
    520a:	6f 03 6f 03 6f 03 70 03 70 03 70 03 70 03 71 03     o.o.o.p.p.p.p.q.
    521a:	71 03 71 03 71 03 71 03 72 03 72 03 72 03 72 03     q.q.q.q.r.r.r.r.
    522a:	73 03 73 03 73 03 73 03 73 03 74 03 74 03 74 03     s.s.s.s.s.t.t.t.
    523a:	74 03 75 03 75 03 75 03 75 03 76 03 76 03 76 03     t.u.u.u.u.v.v.v.
    524a:	76 03 76 03 77 03 77 03 77 03 77 03 78 03 78 03     v.v.w.w.w.w.x.x.
    525a:	78 03 78 03 78 03 79 03 79 03 79 03 79 03 7a 03     x.x.x.y.y.y.y.z.
    526a:	7a 03 7a 03 7a 03 7b 03 7b 03 7b 03 7b 03 7b 03     z.z.z.{.{.{.{.{.
    527a:	7c 03 7c 03 7c 03 7c 03 7d 03 7d 03 7d 03 7d 03     |.|.|.|.}.}.}.}.
    528a:	7d 03 7e 03 7e 03 7e 03 7e 03 7f 03 7f 03 7f 03     }.~.~.~.~.......
    529a:	7f 03 80 03 80 03 80 03 80 03 80 03 81 03 81 03     ................
    52aa:	81 03 81 03 82 03 82 03 82 03 82 03 82 03 83 03     ................
    52ba:	83 03 83 03 83 03 84 03 84 03 84 03 84 03 85 03     ................
    52ca:	85 03 85 03 85 03 85 03 86 03 86 03 86 03 86 03     ................
    52da:	87 03 87 03 87 03 87 03 87 03 88 03 88 03 88 03     ................
    52ea:	88 03 89 03 89 03 89 03 89 03 8a 03 8a 03 8a 03     ................
    52fa:	8a 03 8a 03 8b 03 8b 03 8b 03 8b 03 8c 03 8c 03     ................
    530a:	8c 03 8c 03 8c 03 8d 03 8d 03 8d 03 8d 03 8e 03     ................
    531a:	8e 03 8e 03 8e 03 8e 03 8f 03 8f 03 8f 03 8f 03     ................
    532a:	90 03 90 03 90 03 90 03 91 03 91 03 91 03 91 03     ................
    533a:	91 03 92 03 92 03 92 03 92 03 93 03 93 03 93 03     ................
    534a:	93 03 93 03 94 03 94 03 94 03 94 03 95 03 95 03     ................
    535a:	95 03 95 03 96 03 96 03 96 03 96 03 96 03 97 03     ................
    536a:	97 03 97 03 97 03 98 03 98 03 98 03 98 03 98 03     ................
    537a:	99 03 99 03 99 03 99 03 9a 03 9a 03 9a 03 9a 03     ................
    538a:	9b 03 9b 03 9b 03 9b 03 9b 03 9c 03 9c 03 9c 03     ................
    539a:	9c 03 9d 03 9d 03 9d 03 9d 03 9d 03 9e 03 9e 03     ................
    53aa:	9e 03 9e 03 9f 03 9f 03 9f 03 9f 03 a0 03 a0 03     ................
    53ba:	a0 03 a0 03 a0 03 a1 03                             ........

000053c2 <convert_a2d>:
    53c2:	4f 93       	cmp.b	#0,	r15	;r3 As==00
    53c4:	5f 20       	jnz	$+192    	;abs 0x5484
    53c6:	3e 90 90 01 	cmp	#400,	r14	;#0x0190
    53ca:	09 2c       	jc	$+20     	;abs 0x53de
    53cc:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    53d0:	12 c3       	clrc			
    53d2:	0e 10       	rrc	r14		;
    53d4:	12 c3       	clrc			
    53d6:	0e 10       	rrc	r14		;
    53d8:	8d 4e 02 00 	mov	r14,	2(r13)	;
    53dc:	30 41       	ret			
    53de:	3e 90 20 03 	cmp	#800,	r14	;#0x0320
    53e2:	05 2c       	jc	$+12     	;abs 0x53ee
    53e4:	9d 43 00 00 	mov	#1,	0(r13)	;r3 As==01
    53e8:	3e 50 70 fe 	add	#-400,	r14	;#0xfe70
    53ec:	f1 3f       	jmp	$-28     	;abs 0x53d0
    53ee:	3e 90 b0 04 	cmp	#1200,	r14	;#0x04b0
    53f2:	05 2c       	jc	$+12     	;abs 0x53fe
    53f4:	ad 43 00 00 	mov	#2,	0(r13)	;r3 As==10
    53f8:	3e 50 e0 fc 	add	#-800,	r14	;#0xfce0
    53fc:	e9 3f       	jmp	$-44     	;abs 0x53d0
    53fe:	3e 90 40 06 	cmp	#1600,	r14	;#0x0640
    5402:	06 2c       	jc	$+14     	;abs 0x5410
    5404:	bd 40 03 00 	mov	#3,	0(r13)	;#0x0003
    5408:	00 00 
    540a:	3e 50 50 fb 	add	#-1200,	r14	;#0xfb50
    540e:	e0 3f       	jmp	$-62     	;abs 0x53d0
    5410:	3e 90 d0 07 	cmp	#2000,	r14	;#0x07d0
    5414:	05 2c       	jc	$+12     	;abs 0x5420
    5416:	ad 42 00 00 	mov	#4,	0(r13)	;r2 As==10
    541a:	3e 50 c0 f9 	add	#-1600,	r14	;#0xf9c0
    541e:	d8 3f       	jmp	$-78     	;abs 0x53d0
    5420:	3e 90 60 09 	cmp	#2400,	r14	;#0x0960
    5424:	06 2c       	jc	$+14     	;abs 0x5432
    5426:	bd 40 05 00 	mov	#5,	0(r13)	;#0x0005
    542a:	00 00 
    542c:	3e 50 30 f8 	add	#-2000,	r14	;#0xf830
    5430:	cf 3f       	jmp	$-96     	;abs 0x53d0
    5432:	3e 90 f0 0a 	cmp	#2800,	r14	;#0x0af0
    5436:	06 2c       	jc	$+14     	;abs 0x5444
    5438:	bd 40 06 00 	mov	#6,	0(r13)	;#0x0006
    543c:	00 00 
    543e:	3e 50 a0 f6 	add	#-2400,	r14	;#0xf6a0
    5442:	c6 3f       	jmp	$-114    	;abs 0x53d0
    5444:	3e 90 80 0c 	cmp	#3200,	r14	;#0x0c80
    5448:	06 2c       	jc	$+14     	;abs 0x5456
    544a:	bd 40 07 00 	mov	#7,	0(r13)	;#0x0007
    544e:	00 00 
    5450:	3e 50 10 f5 	add	#-2800,	r14	;#0xf510
    5454:	bd 3f       	jmp	$-132    	;abs 0x53d0
    5456:	3e 90 10 0e 	cmp	#3600,	r14	;#0x0e10
    545a:	05 2c       	jc	$+12     	;abs 0x5466
    545c:	bd 42 00 00 	mov	#8,	0(r13)	;r2 As==11
    5460:	3e 50 80 f3 	add	#-3200,	r14	;#0xf380
    5464:	b5 3f       	jmp	$-148    	;abs 0x53d0
    5466:	3e 90 a0 0f 	cmp	#4000,	r14	;#0x0fa0
    546a:	06 2c       	jc	$+14     	;abs 0x5478
    546c:	bd 40 09 00 	mov	#9,	0(r13)	;#0x0009
    5470:	00 00 
    5472:	3e 50 f0 f1 	add	#-3600,	r14	;#0xf1f0
    5476:	ac 3f       	jmp	$-166    	;abs 0x53d0
    5478:	bd 40 0a 00 	mov	#10,	0(r13)	;#0x000a
    547c:	00 00 
    547e:	3e 50 60 f0 	add	#-4000,	r14	;#0xf060
    5482:	a6 3f       	jmp	$-178    	;abs 0x53d0
    5484:	0e 5e       	rla	r14		;
    5486:	3e 50 c2 33 	add	#13250,	r14	;#0x33c2
    548a:	ad 4e 00 00 	mov	@r14,	0(r13)	;
    548e:	3c 90 19 00 	cmp	#25,	r12	;#0x0019
    5492:	0e 34       	jge	$+30     	;abs 0x54b0
    5494:	0f 4c       	mov	r12,	r15	;
    5496:	0f 5f       	rla	r15		;
    5498:	0f 5f       	rla	r15		;
    549a:	0c 4f       	mov	r15,	r12	;
    549c:	3c 50 ca 06 	add	#1738,	r12	;#0x06ca
    54a0:	5f 4f ca 06 	mov.b	1738(r15),r15	;
    54a4:	8f 11       	sxt	r15		;
    54a6:	2e 4e       	mov	@r14,	r14	;
    54a8:	0f 9e       	cmp	r14,	r15	;
    54aa:	05 28       	jnc	$+12     	;abs 0x54b6
    54ac:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    54b0:	8d 43 02 00 	mov	#0,	2(r13)	;r3 As==00
    54b4:	30 41       	ret			
    54b6:	5f 4c 01 00 	mov.b	1(r12),	r15	;
    54ba:	8f 11       	sxt	r15		;
    54bc:	0e 5f       	add	r15,	r14	;
    54be:	8d 4e 00 00 	mov	r14,	0(r13)	;
    54c2:	f6 3f       	jmp	$-18     	;abs 0x54b0

000054c4 <init_pin_data_structure>:
    54c4:	0b 12       	push	r11		;
    54c6:	0b 43       	clr	r11		;
    54c8:	0f 4b       	mov	r11,	r15	;
    54ca:	0f 5f       	rla	r15		;
    54cc:	0f 5f       	rla	r15		;
    54ce:	0f 5f       	rla	r15		;
    54d0:	0f 5f       	rla	r15		;
    54d2:	0f 5f       	rla	r15		;
    54d4:	0e 4b       	mov	r11,	r14	;
    54d6:	0e 5e       	rla	r14		;
    54d8:	0f 5e       	add	r14,	r15	;
    54da:	0f 5e       	add	r14,	r15	;
    54dc:	0f 5e       	add	r14,	r15	;
    54de:	3f 50 6c 02 	add	#620,	r15	;#0x026c
    54e2:	b0 12 ee 31 	call	#12782		;#0x31ee
    54e6:	1b 53       	inc	r11		;
    54e8:	3b 90 19 00 	cmp	#25,	r11	;#0x0019
    54ec:	ed 3b       	jl	$-36     	;abs 0x54c8
    54ee:	3b 41       	pop	r11		;
    54f0:	30 41       	ret			

000054f2 <init_ueac_state_structure>:
    54f2:	0b 12       	push	r11		;
    54f4:	0a 12       	push	r10		;
    54f6:	82 43 92 06 	mov	#0,	&0x0692	;r3 As==00
    54fa:	82 43 94 06 	mov	#0,	&0x0694	;r3 As==00
    54fe:	0a 43       	clr	r10		;
    5500:	3d 40 86 06 	mov	#1670,	r13	;#0x0686
    5504:	0e 4a       	mov	r10,	r14	;
    5506:	0e 5e       	rla	r14		;
    5508:	0f 4e       	mov	r14,	r15	;
    550a:	0f 5d       	add	r13,	r15	;
    550c:	8f 43 10 00 	mov	#0,	16(r15)	;r3 As==00
    5510:	0f 4e       	mov	r14,	r15	;
    5512:	0f 5f       	rla	r15		;
    5514:	0f 5f       	rla	r15		;
    5516:	0f 5f       	rla	r15		;
    5518:	ff 43 2d 07 	mov.b	#-1,	1837(r15);r3 As==11
    551c:	ff 43 2e 07 	mov.b	#-1,	1838(r15);r3 As==11
    5520:	1a 53       	inc	r10		;
    5522:	3a 90 19 00 	cmp	#25,	r10	;#0x0019
    5526:	ee 3b       	jl	$-34     	;abs 0x5504
    5528:	0e 43       	clr	r14		;
    552a:	0f 43       	clr	r15		;
    552c:	b0 12 44 22 	call	#8772		;#0x2244
    5530:	4f 43       	clr.b	r15		;
    5532:	b0 12 d2 14 	call	#5330		;#0x14d2
    5536:	7f 90 56 00 	cmp.b	#86,	r15	;#0x0056
    553a:	11 24       	jz	$+36     	;abs 0x555e
    553c:	0a 43       	clr	r10		;
    553e:	0f 4a       	mov	r10,	r15	;
    5540:	0f 5f       	rla	r15		;
    5542:	0f 5f       	rla	r15		;
    5544:	cf 43 c8 06 	mov.b	#0,	1736(r15);r3 As==00
    5548:	cf 43 c9 06 	mov.b	#0,	1737(r15);r3 As==00
    554c:	cf 43 ca 06 	mov.b	#0,	1738(r15);r3 As==00
    5550:	cf 43 cb 06 	mov.b	#0,	1739(r15);r3 As==00
    5554:	1a 53       	inc	r10		;
    5556:	3a 90 19 00 	cmp	#25,	r10	;#0x0019
    555a:	f1 3b       	jl	$-28     	;abs 0x553e
    555c:	3a 3c       	jmp	$+118    	;abs 0x55d2
    555e:	0a 43       	clr	r10		;
    5560:	0b 4a       	mov	r10,	r11	;
    5562:	0b 5b       	rla	r11		;
    5564:	0b 5b       	rla	r11		;
    5566:	4f 43       	clr.b	r15		;
    5568:	b0 12 d2 14 	call	#5330		;#0x14d2
    556c:	cb 4f c8 06 	mov.b	r15,	1736(r11);
    5570:	1a 53       	inc	r10		;
    5572:	3a 90 19 00 	cmp	#25,	r10	;#0x0019
    5576:	f4 3b       	jl	$-22     	;abs 0x5560
    5578:	0a 43       	clr	r10		;
    557a:	0b 4a       	mov	r10,	r11	;
    557c:	0b 5b       	rla	r11		;
    557e:	0b 5b       	rla	r11		;
    5580:	3b 50 c8 06 	add	#1736,	r11	;#0x06c8
    5584:	4f 43       	clr.b	r15		;
    5586:	b0 12 d2 14 	call	#5330		;#0x14d2
    558a:	cb 4f 01 00 	mov.b	r15,	1(r11)	;
    558e:	1a 53       	inc	r10		;
    5590:	3a 90 19 00 	cmp	#25,	r10	;#0x0019
    5594:	f2 3b       	jl	$-26     	;abs 0x557a
    5596:	0a 43       	clr	r10		;
    5598:	0b 4a       	mov	r10,	r11	;
    559a:	0b 5b       	rla	r11		;
    559c:	0b 5b       	rla	r11		;
    559e:	4f 43       	clr.b	r15		;
    55a0:	b0 12 d2 14 	call	#5330		;#0x14d2
    55a4:	cb 4f ca 06 	mov.b	r15,	1738(r11);
    55a8:	1a 53       	inc	r10		;
    55aa:	3a 90 19 00 	cmp	#25,	r10	;#0x0019
    55ae:	f4 3b       	jl	$-22     	;abs 0x5598
    55b0:	0a 43       	clr	r10		;
    55b2:	0b 4a       	mov	r10,	r11	;
    55b4:	0b 5b       	rla	r11		;
    55b6:	0b 5b       	rla	r11		;
    55b8:	3b 50 ca 06 	add	#1738,	r11	;#0x06ca
    55bc:	4f 43       	clr.b	r15		;
    55be:	b0 12 d2 14 	call	#5330		;#0x14d2
    55c2:	cb 4f 01 00 	mov.b	r15,	1(r11)	;
    55c6:	1a 53       	inc	r10		;
    55c8:	3a 90 19 00 	cmp	#25,	r10	;#0x0019
    55cc:	f2 3b       	jl	$-26     	;abs 0x55b2
    55ce:	b0 12 a2 22 	call	#8866		;#0x22a2
    55d2:	3a 41       	pop	r10		;
    55d4:	3b 41       	pop	r11		;
    55d6:	30 41       	ret			

000055d8 <init_global_variables>:
    55d8:	b0 12 c4 54 	call	#21700		;#0x54c4
    55dc:	b0 12 f2 54 	call	#21746		;#0x54f2
    55e0:	82 43 cc 07 	mov	#0,	&0x07cc	;r3 As==00
    55e4:	c2 43 10 02 	mov.b	#0,	&0x0210	;r3 As==00
    55e8:	30 41       	ret			

000055ea <lla_report>:
    55ea:	3c 43       	mov	#-1,	r12	;r3 As==11
    55ec:	5d 4f 02 00 	mov.b	2(r15),	r13	;
    55f0:	3d 53       	add	#-1,	r13	;r3 As==11
    55f2:	0d 5d       	rla	r13		;
    55f4:	0d 5d       	rla	r13		;
    55f6:	0d 5d       	rla	r13		;
    55f8:	0d 5d       	rla	r13		;
    55fa:	0d 5f       	add	r15,	r13	;
    55fc:	dd 93 a6 00 	cmp.b	#1,	166(r13);r3 As==01
    5600:	07 20       	jnz	$+16     	;abs 0x5610
    5602:	9e 4d ae 00 	mov	174(r13),0(r14)	;
    5606:	00 00 
    5608:	9e 4d b0 00 	mov	176(r13),2(r14)	;
    560c:	02 00 
    560e:	0c 43       	clr	r12		;
    5610:	0f 4c       	mov	r12,	r15	;
    5612:	30 41       	ret			

00005614 <lla_add>:
    5614:	0b 12       	push	r11		;
    5616:	0a 12       	push	r10		;
    5618:	0c 4f       	mov	r15,	r12	;
    561a:	5a 4f 02 00 	mov.b	2(r15),	r10	;
    561e:	3a 53       	add	#-1,	r10	;r3 As==11
    5620:	0a 5a       	rla	r10		;
    5622:	0d 4a       	mov	r10,	r13	;
    5624:	0d 5d       	rla	r13		;
    5626:	0d 5d       	rla	r13		;
    5628:	0d 5d       	rla	r13		;
    562a:	0d 5f       	add	r15,	r13	;
    562c:	cd 43 a6 00 	mov.b	#0,	166(r13);r3 As==00
    5630:	5e 4f 04 00 	mov.b	4(r15),	r14	;
    5634:	4f 4e       	mov.b	r14,	r15	;
    5636:	0f 5f       	rla	r15		;
    5638:	0f 5e       	add	r14,	r15	;
    563a:	0f 5e       	add	r14,	r15	;
    563c:	0f 5e       	add	r14,	r15	;
    563e:	5f 5c 03 00 	add.b	3(r12),	r15	;
    5642:	7f 50 fa ff 	add.b	#-6,	r15	;#0xfffa
    5646:	cd 4f a7 00 	mov.b	r15,	167(r13);
    564a:	5b 4c 05 00 	mov.b	5(r12),	r11	;
    564e:	4b 93       	cmp.b	#0,	r11	;r3 As==00
    5650:	04 24       	jz	$+10     	;abs 0x565a
    5652:	5e 4c 06 00 	mov.b	6(r12),	r14	;
    5656:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    5658:	03 20       	jnz	$+8      	;abs 0x5660
    565a:	fd 43 a8 00 	mov.b	#-1,	168(r13);r3 As==11
    565e:	0b 3c       	jmp	$+24     	;abs 0x5676
    5660:	4f 4e       	mov.b	r14,	r15	;
    5662:	0f 5f       	rla	r15		;
    5664:	7e f3       	and.b	#-1,	r14	;r3 As==11
    5666:	0f 5e       	add	r14,	r15	;
    5668:	0f 5e       	add	r14,	r15	;
    566a:	0f 5e       	add	r14,	r15	;
    566c:	4b 5f       	add.b	r15,	r11	;
    566e:	7b 50 fa ff 	add.b	#-6,	r11	;#0xfffa
    5672:	cd 4b a8 00 	mov.b	r11,	168(r13);
    5676:	0b 4a       	mov	r10,	r11	;
    5678:	0b 5b       	rla	r11		;
    567a:	0b 5b       	rla	r11		;
    567c:	0b 5b       	rla	r11		;
    567e:	0b 5c       	add	r12,	r11	;
    5680:	5f 4c 0a 00 	mov.b	10(r12),r15	;
    5684:	0f 5f       	rla	r15		;
    5686:	9b 4f 2a 02 	mov	554(r15),170(r11);
    568a:	aa 00 
    568c:	db 4c 0b 00 	mov.b	11(r12),172(r11);
    5690:	ac 00 
    5692:	8b 43 b2 00 	mov	#0,	178(r11);r3 As==00
    5696:	8b 43 b4 00 	mov	#0,	180(r11);r3 As==00
    569a:	0d 4b       	mov	r11,	r13	;
    569c:	3d 50 a6 00 	add	#166,	r13	;#0x00a6
    56a0:	1f 43       	mov	#1,	r15	;r3 As==01
    56a2:	5e 4d 01 00 	mov.b	1(r13),	r14	;
    56a6:	0e 93       	cmp	#0,	r14	;r3 As==00
    56a8:	03 24       	jz	$+8      	;abs 0x56b0
    56aa:	0f 5f       	rla	r15		;
    56ac:	1e 83       	dec	r14		;
    56ae:	fd 23       	jnz	$-4      	;abs 0x56aa
    56b0:	0e 4f       	mov	r15,	r14	;
    56b2:	0f 4e       	mov	r14,	r15	;
    56b4:	0f 5f       	rla	r15		;
    56b6:	0f 7f       	subc	r15,	r15	;
    56b8:	3f e3       	inv	r15		;
    56ba:	8c de 0c 00 	bis	r14,	12(r12)	;
    56be:	8c df 0e 00 	bis	r15,	14(r12)	;
    56c2:	5f 4d 01 00 	mov.b	1(r13),	r15	;
    56c6:	1e 43       	mov	#1,	r14	;r3 As==01
    56c8:	b0 12 5c 19 	call	#6492		;#0x195c
    56cc:	8b 43 ae 00 	mov	#0,	174(r11);r3 As==00
    56d0:	8b 43 b0 00 	mov	#0,	176(r11);r3 As==00
    56d4:	db 43 a6 00 	mov.b	#1,	166(r11);r3 As==01
    56d8:	0f 43       	clr	r15		;
    56da:	3a 41       	pop	r10		;
    56dc:	3b 41       	pop	r11		;
    56de:	30 41       	ret			

000056e0 <lla_disable>:
    56e0:	0b 12       	push	r11		;
    56e2:	0d 4f       	mov	r15,	r13	;
    56e4:	3f 43       	mov	#-1,	r15	;r3 As==11
    56e6:	5b 4d 02 00 	mov.b	2(r13),	r11	;
    56ea:	3b 53       	add	#-1,	r11	;r3 As==11
    56ec:	0b 5b       	rla	r11		;
    56ee:	0b 5b       	rla	r11		;
    56f0:	0b 5b       	rla	r11		;
    56f2:	0b 5b       	rla	r11		;
    56f4:	0b 5d       	add	r13,	r11	;
    56f6:	0c 4b       	mov	r11,	r12	;
    56f8:	3c 50 a6 00 	add	#166,	r12	;#0x00a6
    56fc:	db 93 a6 00 	cmp.b	#1,	166(r11);r3 As==01
    5700:	1e 20       	jnz	$+62     	;abs 0x573e
    5702:	1f 43       	mov	#1,	r15	;r3 As==01
    5704:	5e 4c 01 00 	mov.b	1(r12),	r14	;
    5708:	0e 93       	cmp	#0,	r14	;r3 As==00
    570a:	03 24       	jz	$+8      	;abs 0x5712
    570c:	0f 5f       	rla	r15		;
    570e:	1e 83       	dec	r14		;
    5710:	fd 23       	jnz	$-4      	;abs 0x570c
    5712:	0e 4f       	mov	r15,	r14	;
    5714:	0f 4e       	mov	r14,	r15	;
    5716:	0f 5f       	rla	r15		;
    5718:	0f 7f       	subc	r15,	r15	;
    571a:	3f e3       	inv	r15		;
    571c:	8d ce 0c 00 	bic	r14,	12(r13)	;
    5720:	8d cf 0e 00 	bic	r15,	14(r13)	;
    5724:	cb 43 a6 00 	mov.b	#0,	166(r11);r3 As==00
    5728:	5f 4c 01 00 	mov.b	1(r12),	r15	;
    572c:	0e 43       	clr	r14		;
    572e:	b0 12 5c 19 	call	#6492		;#0x195c
    5732:	5f 4b a8 00 	mov.b	168(r11),r15	;
    5736:	0e 43       	clr	r14		;
    5738:	b0 12 10 16 	call	#5648		;#0x1610
    573c:	0f 43       	clr	r15		;
    573e:	3b 41       	pop	r11		;
    5740:	30 41       	ret			

00005742 <lla_enable>:
    5742:	0b 12       	push	r11		;
    5744:	0d 4f       	mov	r15,	r13	;
    5746:	3f 43       	mov	#-1,	r15	;r3 As==11
    5748:	5b 4d 02 00 	mov.b	2(r13),	r11	;
    574c:	3b 53       	add	#-1,	r11	;r3 As==11
    574e:	0b 5b       	rla	r11		;
    5750:	0b 5b       	rla	r11		;
    5752:	0b 5b       	rla	r11		;
    5754:	0b 5b       	rla	r11		;
    5756:	0b 5d       	add	r13,	r11	;
    5758:	0c 4b       	mov	r11,	r12	;
    575a:	3c 50 a6 00 	add	#166,	r12	;#0x00a6
    575e:	cb 93 a6 00 	cmp.b	#0,	166(r11);r3 As==00
    5762:	22 20       	jnz	$+70     	;abs 0x57a8
    5764:	1f 43       	mov	#1,	r15	;r3 As==01
    5766:	5e 4c 01 00 	mov.b	1(r12),	r14	;
    576a:	0e 93       	cmp	#0,	r14	;r3 As==00
    576c:	03 24       	jz	$+8      	;abs 0x5774
    576e:	0f 5f       	rla	r15		;
    5770:	1e 83       	dec	r14		;
    5772:	fd 23       	jnz	$-4      	;abs 0x576e
    5774:	0e 4f       	mov	r15,	r14	;
    5776:	0f 4e       	mov	r14,	r15	;
    5778:	0f 5f       	rla	r15		;
    577a:	0f 7f       	subc	r15,	r15	;
    577c:	3f e3       	inv	r15		;
    577e:	8d de 0c 00 	bis	r14,	12(r13)	;
    5782:	8d df 0e 00 	bis	r15,	14(r13)	;
    5786:	5f 4c 01 00 	mov.b	1(r12),	r15	;
    578a:	1e 43       	mov	#1,	r14	;r3 As==01
    578c:	b0 12 5c 19 	call	#6492		;#0x195c
    5790:	5f 4b a8 00 	mov.b	168(r11),r15	;
    5794:	0e 43       	clr	r14		;
    5796:	b0 12 10 16 	call	#5648		;#0x1610
    579a:	8b 43 ae 00 	mov	#0,	174(r11);r3 As==00
    579e:	8b 43 b0 00 	mov	#0,	176(r11);r3 As==00
    57a2:	db 43 a6 00 	mov.b	#1,	166(r11);r3 As==01
    57a6:	0f 43       	clr	r15		;
}
    57a8:	3b 41       	pop	r11		;
    57aa:	30 41       	ret			

000057ac <evaluate_lla>:

int evaluate_lla(ueac_t *ueac_state) {
    57ac:	0b 12       	push	r11		;
    57ae:	0a 12       	push	r10		;
    57b0:	09 12       	push	r9		;
    57b2:	08 12       	push	r8		;
    57b4:	07 12       	push	r7		;
    57b6:	06 12       	push	r6		;
    57b8:	21 82       	sub	#4,	r1	;r2 As==10
    57ba:	06 4f       	mov	r15,	r6	;
  ueacval_t result;
  static unsigned char count=0;
  if (++count>9) {
    57bc:	5f 42 2a 02 	mov.b	&0x022a,r15	;0x022a
    57c0:	5f 53       	inc.b	r15		;
    57c2:	c2 4f 2a 02 	mov.b	r15,	&0x022a	;
    57c6:	7f 90 0a 00 	cmp.b	#10,	r15	;#0x000a
    57ca:	03 28       	jnc	$+8      	;abs 0x57d2
    count=0;
    57cc:	4f 43       	clr.b	r15		;
    57ce:	c2 43 2a 02 	mov.b	#0,	&0x022a	;r3 As==00
  }
  if (LLA_TABLE[count].enable==ENABLE) {
    57d2:	7f f3       	and.b	#-1,	r15	;r3 As==11
    57d4:	0f 5f       	rla	r15		;
    57d6:	0f 5f       	rla	r15		;
    57d8:	0f 5f       	rla	r15		;
    57da:	0f 5f       	rla	r15		;
    57dc:	0f 56       	add	r6,	r15	;
    57de:	0e 4f       	mov	r15,	r14	;
    57e0:	3e 50 a6 00 	add	#166,	r14	;#0x00a6
    57e4:	df 93 a6 00 	cmp.b	#1,	166(r15);r3 As==01
    57e8:	87 20       	jnz	$+272    	;abs 0x58f8
#ifndef LINUX
    convert_a2d(I_CONVERSION,pin_data[LLA_TABLE[count].in_pin].filtered_result,&result,LLA_TABLE[count].in_pin);
    57ea:	5d 4e 01 00 	mov.b	1(r14),	r13	;
    57ee:	0f 4d       	mov	r13,	r15	;
    57f0:	0f 5f       	rla	r15		;
    57f2:	0f 5f       	rla	r15		;
    57f4:	0f 5f       	rla	r15		;
    57f6:	0f 5f       	rla	r15		;
    57f8:	0f 5f       	rla	r15		;
    57fa:	0e 4d       	mov	r13,	r14	;
    57fc:	0e 5e       	rla	r14		;
    57fe:	0f 5e       	add	r14,	r15	;
    5800:	0f 5e       	add	r14,	r15	;
    5802:	0f 5e       	add	r14,	r15	;
    5804:	0c 4d       	mov	r13,	r12	;
    5806:	0d 41       	mov	r1,	r13	;
    5808:	1e 4f 90 02 	mov	656(r15),r14	;
    580c:	5f 43       	mov.b	#1,	r15	;r3 As==01
    580e:	b0 12 c2 53 	call	#21442		;#0x53c2
#else 
    convert_a2d(I_CONVERSION,0,&result,25);
#endif
    LLA_TABLE[count].in_val=result.integer;      
    5812:	5f 42 2a 02 	mov.b	&0x022a,r15	;0x022a
    5816:	0f 5f       	rla	r15		;
    5818:	0f 5f       	rla	r15		;
    581a:	0f 5f       	rla	r15		;
    581c:	0f 5f       	rla	r15		;
    581e:	0f 56       	add	r6,	r15	;
    5820:	af 41 ae 00 	mov	@r1,	174(r15);
    if (++LLA_TABLE[count].counter>=LLA_TABLE[count].period) {
    5824:	3f 50 ac 00 	add	#172,	r15	;#0x00ac
    5828:	df 53 01 00 	inc.b	1(r15)		;
    582c:	5d 42 2a 02 	mov.b	&0x022a,r13	;0x022a
    5830:	0d 5d       	rla	r13		;
    5832:	0d 5d       	rla	r13		;
    5834:	0d 5d       	rla	r13		;
    5836:	0d 5d       	rla	r13		;
    5838:	0d 56       	add	r6,	r13	;
    583a:	0e 4d       	mov	r13,	r14	;
    583c:	3e 50 ac 00 	add	#172,	r14	;#0x00ac
    5840:	df 9d ac 00 	cmp.b	172(r13),1(r15)	;
    5844:	01 00 
    5846:	4e 28       	jnc	$+158    	;abs 0x58e4
      LLA_TABLE[count].counter=0;
    5848:	ce 43 01 00 	mov.b	#0,	1(r14)	;r3 As==00
      LLA_TABLE[count].accumulator+=LLA_TABLE[count].in_val;
    584c:	57 42 2a 02 	mov.b	&0x022a,r7	;0x022a
    5850:	07 57       	rla	r7		;
    5852:	07 57       	rla	r7		;
    5854:	07 57       	rla	r7		;
    5856:	07 57       	rla	r7		;
    5858:	07 56       	add	r6,	r7	;
    585a:	1e 47 ae 00 	mov	174(r7),r14	;
    585e:	0f 4e       	mov	r14,	r15	;
    5860:	0f 5f       	rla	r15		;
    5862:	0f 7f       	subc	r15,	r15	;
    5864:	3f e3       	inv	r15		;
    5866:	1e 57 b2 00 	add	178(r7),r14	;
    586a:	1f 67 b4 00 	addc	180(r7),r15	;
    586e:	87 4e b2 00 	mov	r14,	178(r7)	;
    5872:	87 4f b4 00 	mov	r15,	180(r7)	;
      LLA_TABLE[count].in_val=(int)(LLA_TABLE[count].accumulator/LLA_TABLE[count].period);
    5876:	5a 47 ac 00 	mov.b	172(r7),r10	;
    587a:	0b 43       	clr	r11		;
    587c:	0c 4e       	mov	r14,	r12	;
    587e:	0d 4f       	mov	r15,	r13	;
    5880:	b0 12 38 8f 	call	#-28872	;#0x8f38
    5884:	0e 4c       	mov	r12,	r14	;
    5886:	0f 4d       	mov	r13,	r15	;
    5888:	87 4c ae 00 	mov	r12,	174(r7)	;
      if (LLA_TABLE[count].in_val>200) {
    588c:	3c 90 c9 00 	cmp	#201,	r12	;#0x00c9
    5890:	23 38       	jl	$+72     	;abs 0x58d8
        LLA_TABLE[count].out_val=*(LLA_TABLE[count].function_ptr+200);
    5892:	1f 47 aa 00 	mov	170(r7),r15	;
    5896:	97 4f 90 01 	mov	400(r15),176(r7)	;
    589a:	b0 00 
      }
      else {
        LLA_TABLE[count].out_val=*(LLA_TABLE[count].function_ptr+LLA_TABLE[count].in_val);
      }
      if (LLA_TABLE[count].out_pin!=0xFF) {
    589c:	5f 42 2a 02 	mov.b	&0x022a,r15	;0x022a
    58a0:	4e 4f       	mov.b	r15,	r14	;
    58a2:	0e 5e       	rla	r14		;
    58a4:	0e 5e       	rla	r14		;
    58a6:	0e 5e       	rla	r14		;
    58a8:	0e 5e       	rla	r14		;
    58aa:	0e 56       	add	r6,	r14	;
    58ac:	5d 4e a8 00 	mov.b	168(r14),r13	;
    58b0:	7d 93       	cmp.b	#-1,	r13	;r3 As==11
    58b2:	07 24       	jz	$+16     	;abs 0x58c2
#ifndef LINUX
        write_current(LLA_TABLE[count].out_pin,LLA_TABLE[count].out_val);
    58b4:	4f 4d       	mov.b	r13,	r15	;
    58b6:	1e 4e b0 00 	mov	176(r14),r14	;
    58ba:	b0 12 10 16 	call	#5648		;#0x1610
    58be:	5f 42 2a 02 	mov.b	&0x022a,r15	;0x022a
#endif
      }
      LLA_TABLE[count].accumulator=0;
    58c2:	7f f3       	and.b	#-1,	r15	;r3 As==11
    58c4:	0f 5f       	rla	r15		;
    58c6:	0f 5f       	rla	r15		;
    58c8:	0f 5f       	rla	r15		;
    58ca:	0f 5f       	rla	r15		;
    58cc:	0f 56       	add	r6,	r15	;
    58ce:	8f 43 b2 00 	mov	#0,	178(r15);r3 As==00
    58d2:	8f 43 b4 00 	mov	#0,	180(r15);r3 As==00
    58d6:	10 3c       	jmp	$+34     	;abs 0x58f8
    58d8:	0e 5e       	rla	r14		;
    58da:	1e 57 aa 00 	add	170(r7),r14	;
    58de:	a7 4e b0 00 	mov	@r14,	176(r7)	;
    58e2:	dc 3f       	jmp	$-70     	;abs 0x589c
    }
    else {
      LLA_TABLE[count].accumulator+=LLA_TABLE[count].in_val;
    58e4:	1e 4d ae 00 	mov	174(r13),r14	;
    58e8:	0f 4e       	mov	r14,	r15	;
    58ea:	0f 5f       	rla	r15		;
    58ec:	0f 7f       	subc	r15,	r15	;
    58ee:	3f e3       	inv	r15		;
    58f0:	8d 5e b2 00 	add	r14,	178(r13);
    58f4:	8d 6f b4 00 	addc	r15,	180(r13);
    }
  }
  return (0);
}
    58f8:	0f 43       	clr	r15		;
    58fa:	21 52       	add	#4,	r1	;r2 As==10
    58fc:	36 41       	pop	r6		;
    58fe:	37 41       	pop	r7		;
    5900:	38 41       	pop	r8		;
    5902:	39 41       	pop	r9		;
    5904:	3a 41       	pop	r10		;
    5906:	3b 41       	pop	r11		;
    5908:	30 41       	ret			
    590a:	6c 6c       	addc.b	@r12,	r12	;
    590c:	61 5f       	add.b	@r15,	r1	;
    590e:	69 6e       	addc.b	@r14,	r9	;
    5910:	70 75       	subc.b	@r5+,	r0	;
    5912:	74 20       	jnz	$+234    	;abs 0x59fc
    5914:	76 61       	addc.b	@r1+,	r6	;
    5916:	72 3d       	jmp	$+742    	;abs 0x5bfc
    5918:	30 78       	subc	@r8+,	r0	;
    591a:	25 30       	jn	$+76     	;abs 0x5966
    591c:	38 6c       	addc	@r12+,	r8	;
    591e:	78 0a       	.word	0x0a78;	????
    5920:	00 0a       	.word	0x0a00;	????
    5922:	4c 4c       	mov.b	r12,	r12	;
    5924:	41 20       	jnz	$+132    	;abs 0x59a8
    5926:	25 64       	addc	@r4,	r5	;
    5928:	0a 0d       	.word	0x0d0a;	????
    592a:	00 65       	addc	r5,	r0	;
    592c:	6e 61       	addc.b	@r1,	r14	;
    592e:	62 6c       	addc.b	@r12,	r2	;
    5930:	65 20       	jnz	$+204    	;abs 0x59fc
    5932:	73 74       	.word	0x7473;	????
    5934:	61 74       	subc.b	@r4,	r1	;
    5936:	65 3d       	jmp	$+716    	;abs 0x5c02
    5938:	44 49       	mov.b	r9,	r4	;
    593a:	53 41       	.word	0x4153;	????
    593c:	42 4c       	mov.b	r12,	r2	;
    593e:	45 44       	mov.b	r4,	r5	;
    5940:	00 65       	addc	r5,	r0	;
    5942:	6e 61       	addc.b	@r1,	r14	;
    5944:	62 6c       	addc.b	@r12,	r2	;
    5946:	65 20       	jnz	$+204    	;abs 0x5a12
    5948:	73 74       	.word	0x7473;	????
    594a:	61 74       	subc.b	@r4,	r1	;
    594c:	65 3d       	jmp	$+716    	;abs 0x5c18
    594e:	45 4e       	mov.b	r14,	r5	;
    5950:	41 42       	mov.b	r2,	r1	;
    5952:	4c 45       	mov.b	r5,	r12	;
    5954:	44 0a       	.word	0x0a44;	????
    5956:	0d 00       	.word	0x000d;	????
    5958:	69 6e       	addc.b	@r14,	r9	;
    595a:	70 75       	subc.b	@r5+,	r0	;
    595c:	74 20       	jnz	$+234    	;abs 0x5a46
    595e:	70 69       	addc.b	@r9+,	r0	;
    5960:	6e 20       	jnz	$+222    	;abs 0x5a3e
    5962:	3d 20       	jnz	$+124    	;abs 0x59de
    5964:	25 64       	addc	@r4,	r5	;
    5966:	0a 0d       	.word	0x0d0a;	????
    5968:	00 6f       	addc	r15,	r0	;
    596a:	75 74       	subc.b	@r4+,	r5	;
    596c:	70 75       	subc.b	@r5+,	r0	;
    596e:	74 20       	jnz	$+234    	;abs 0x5a58
    5970:	70 69       	addc.b	@r9+,	r0	;
    5972:	6e 20       	jnz	$+222    	;abs 0x5a50
    5974:	3d 20       	jnz	$+124    	;abs 0x59f0
    5976:	25 64       	addc	@r4,	r5	;
    5978:	0a 0d       	.word	0x0d0a;	????
    597a:	00 66       	addc	r6,	r0	;
    597c:	69 72       	subc.b	#4,	r9	;r2 As==10
    597e:	73 74       	.word	0x7473;	????
    5980:	20 64       	addc	@r4,	r0	;
    5982:	61 74       	subc.b	@r4,	r1	;
    5984:	61 20       	jnz	$+196    	;abs 0x5a48
    5986:	76 61       	addc.b	@r1+,	r6	;
    5988:	6c 20       	jnz	$+218    	;abs 0x5a62
    598a:	3d 20       	jnz	$+124    	;abs 0x5a06
    598c:	25 64       	addc	@r4,	r5	;
    598e:	0a 0d       	.word	0x0d0a;	????
    5990:	00 70       	subc	r0,	r0	;
    5992:	65 72       	subc.b	#4,	r5	;r2 As==10
    5994:	69 6f       	addc.b	@r15,	r9	;
    5996:	64 20       	jnz	$+202    	;abs 0x5a60
    5998:	3d 20       	jnz	$+124    	;abs 0x5a14
    599a:	25 64       	addc	@r4,	r5	;
    599c:	0a 0d       	.word	0x0d0a;	????
    599e:	00 69       	addc	r9,	r0	;
    59a0:	6e 5f       	add.b	@r15,	r14	;
    59a2:	76 61       	addc.b	@r1+,	r6	;
    59a4:	6c 20       	jnz	$+218    	;abs 0x5a7e
    59a6:	3d 20       	jnz	$+124    	;abs 0x5a22
    59a8:	25 64       	addc	@r4,	r5	;
    59aa:	0a 0d       	.word	0x0d0a;	????
    59ac:	00 6f       	addc	r15,	r0	;
    59ae:	75 74       	subc.b	@r4+,	r5	;
    59b0:	5f 76 61 6c 	subc.b	27745(r6),r15	;
    59b4:	20 3d       	jmp	$+578    	;abs 0x5bf6
    59b6:	20 25       	jz	$+578    	;abs 0x5bf8
    59b8:	64 0a       	.word	0x0a64;	????
    59ba:	0d 00       	.word	0x000d;	????
    59bc:	61 63       	addc.b	#2,	r1	;r3 As==10
    59be:	63 75       	.word	0x7563;	????
    59c0:	6d 75       	subc.b	@r5,	r13	;
    59c2:	6c 61       	addc.b	@r1,	r12	;
    59c4:	74 6f       	addc.b	@r15+,	r4	;
    59c6:	72 20       	jnz	$+230    	;abs 0x5aac
    59c8:	3d 20       	jnz	$+124    	;abs 0x5a44
    59ca:	25 6c       	addc	@r12,	r5	;
    59cc:	64 0a       	.word	0x0a64;	????
    59ce:	0d 00       	.word	0x000d;	????

000059d0 <lla_print_active>:

void lla_print_active (ueac_t *ueac_state) {
    59d0:	0b 12       	push	r11		;
    59d2:	0a 12       	push	r10		;
    59d4:	09 12       	push	r9		;
    59d6:	08 12       	push	r8		;
    59d8:	08 4f       	mov	r15,	r8	;
  int i;
  printf ("lla_input var=0x%08lx\n",ueac_state->lla_input);
    59da:	1f 12 0e 00 	push	14(r15)		;
    59de:	1f 12 0c 00 	push	12(r15)		;
    59e2:	30 12 0a 59 	push	#22794		;#0x590a
    59e6:	b0 12 22 87 	call	#-30942	;#0x8722
  for (i=0;i<10;i++) {
    59ea:	0b 43       	clr	r11		;
    59ec:	31 50 06 00 	add	#6,	r1	;#0x0006
#ifdef LINUX
    printf("\nLLA %d\n",i+1);
    if (LLA_TABLE[i].enable==ENABLE) {
      printf("enable state=ENABLED\n");
      printf("input pin = %d\n",LLA_TABLE[i].in_pin);
      printf("output pin = %d\n",LLA_TABLE[i].out_pin);
      printf("first data val = %d\n",*(LLA_TABLE[i].function_ptr+100));
      printf("period = %d\n",LLA_TABLE[i].period);
      printf("in_val = %d\n",LLA_TABLE[i].in_val);
      printf("out_val = %d\n",LLA_TABLE[i].out_val);
      printf("accumulator = %ld\n",LLA_TABLE[i].accumulator);
    }
    else {
      printf("enable state=DISABLED\n");
    }
#else 
    printf("\nLLA %d\n\r",i+1);
    59f0:	09 4b       	mov	r11,	r9	;
    59f2:	19 53       	inc	r9		;
    59f4:	09 12       	push	r9		;
    59f6:	30 12 21 59 	push	#22817		;#0x5921
    59fa:	b0 12 22 87 	call	#-30942	;#0x8722
    if (LLA_TABLE[i].enable==ENABLE) {
    59fe:	0b 5b       	rla	r11		;
    5a00:	0b 5b       	rla	r11		;
    5a02:	0b 5b       	rla	r11		;
    5a04:	0b 5b       	rla	r11		;
    5a06:	0b 58       	add	r8,	r11	;
    5a08:	0a 4b       	mov	r11,	r10	;
    5a0a:	3a 50 a6 00 	add	#166,	r10	;#0x00a6
    5a0e:	21 52       	add	#4,	r1	;r2 As==10
    5a10:	db 93 a6 00 	cmp.b	#1,	166(r11);r3 As==01
    5a14:	05 24       	jz	$+12     	;abs 0x5a20
      printf("enable state=ENABLED\n\r");
      printf("input pin = %d\n\r",LLA_TABLE[i].in_pin);
      printf("output pin = %d\n\r",LLA_TABLE[i].out_pin);
      printf("first data val = %d\n\r",*(LLA_TABLE[i].function_ptr+100));
      printf("period = %d\n\r",LLA_TABLE[i].period);
      printf("in_val = %d\n\r",LLA_TABLE[i].in_val);
      printf("out_val = %d\n\r",LLA_TABLE[i].out_val);
      printf("accumulator = %ld\n\r",LLA_TABLE[i].accumulator);
    }
    else {
      printf("enable state=DISABLED\n");
    5a16:	3f 40 2b 59 	mov	#22827,	r15	;#0x592b
    5a1a:	b0 12 58 8d 	call	#-29352	;#0x8d58
    5a1e:	37 3c       	jmp	$+112    	;abs 0x5a8e
    5a20:	30 12 41 59 	push	#22849		;#0x5941
    5a24:	b0 12 22 87 	call	#-30942	;#0x8722
    5a28:	5f 4a 01 00 	mov.b	1(r10),	r15	;
    5a2c:	0f 12       	push	r15		;
    5a2e:	30 12 58 59 	push	#22872		;#0x5958
    5a32:	b0 12 22 87 	call	#-30942	;#0x8722
    5a36:	5f 4b a8 00 	mov.b	168(r11),r15	;
    5a3a:	0f 12       	push	r15		;
    5a3c:	30 12 69 59 	push	#22889		;#0x5969
    5a40:	b0 12 22 87 	call	#-30942	;#0x8722
    5a44:	1f 4b aa 00 	mov	170(r11),r15	;
    5a48:	1f 12 c8 00 	push	200(r15)		;
    5a4c:	30 12 7b 59 	push	#22907		;#0x597b
    5a50:	b0 12 22 87 	call	#-30942	;#0x8722
    5a54:	5f 4b ac 00 	mov.b	172(r11),r15	;
    5a58:	0f 12       	push	r15		;
    5a5a:	30 12 91 59 	push	#22929		;#0x5991
    5a5e:	b0 12 22 87 	call	#-30942	;#0x8722
    5a62:	1b 12 ae 00 	push	174(r11)		;
    5a66:	30 12 9f 59 	push	#22943		;#0x599f
    5a6a:	b0 12 22 87 	call	#-30942	;#0x8722
    5a6e:	1b 12 b0 00 	push	176(r11)		;
    5a72:	30 12 ad 59 	push	#22957		;#0x59ad
    5a76:	b0 12 22 87 	call	#-30942	;#0x8722
    5a7a:	1b 12 b4 00 	push	180(r11)		;
    5a7e:	1b 12 b2 00 	push	178(r11)		;
    5a82:	30 12 bc 59 	push	#22972		;#0x59bc
    5a86:	b0 12 22 87 	call	#-30942	;#0x8722
    5a8a:	31 50 20 00 	add	#32,	r1	;#0x0020
    5a8e:	0b 49       	mov	r9,	r11	;
    5a90:	39 90 0a 00 	cmp	#10,	r9	;#0x000a
    5a94:	ad 3b       	jl	$-164    	;abs 0x59f0
    }
#endif

  }
}
    5a96:	38 41       	pop	r8		;
    5a98:	39 41       	pop	r9		;
    5a9a:	3a 41       	pop	r10		;
    5a9c:	3b 41       	pop	r11		;
    5a9e:	30 41       	ret			

00005aa0 <f1>:
	...

00005c32 <f2>:
    5c32:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5c42:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5c52:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5c62:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5c72:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5c82:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5c92:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5ca2:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5cb2:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5cc2:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5cd2:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5ce2:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5cf2:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5d02:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5d12:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5d22:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5d32:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5d42:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5d52:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5d62:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5d72:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5d82:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5d92:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5da2:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5db2:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5dc2:	64 00                                               d.

00005dc4 <f3>:
    5dc4:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5dd4:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5de4:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5df4:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5e04:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5e14:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5e24:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5e34:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5e44:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5e54:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5e64:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5e74:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5e84:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5e94:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5ea4:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5eb4:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5ec4:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5ed4:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5ee4:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5ef4:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5f04:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5f14:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5f24:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5f34:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5f44:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    5f54:	c8 00                                               ..

00005f56 <f4>:
    5f56:	00 00 01 00 02 00 03 00 04 00 05 00 06 00 07 00     ................
    5f66:	08 00 09 00 0a 00 0b 00 0c 00 0d 00 0e 00 0f 00     ................
    5f76:	10 00 11 00 12 00 13 00 14 00 15 00 16 00 17 00     ................
    5f86:	18 00 19 00 1a 00 1b 00 1c 00 1d 00 1e 00 1f 00     ................
    5f96:	20 00 21 00 22 00 23 00 24 00 25 00 26 00 27 00      .!.".#.$.%.&.'.
    5fa6:	28 00 29 00 2a 00 2b 00 2c 00 2d 00 2e 00 2f 00     (.).*.+.,.-.../.
    5fb6:	30 00 31 00 32 00 33 00 34 00 35 00 36 00 37 00     0.1.2.3.4.5.6.7.
    5fc6:	38 00 39 00 3a 00 3b 00 3c 00 3d 00 3e 00 3f 00     8.9.:.;.<.=.>.?.
    5fd6:	40 00 41 00 42 00 43 00 44 00 45 00 46 00 47 00     @.A.B.C.D.E.F.G.
    5fe6:	48 00 49 00 4a 00 4b 00 4c 00 4d 00 4e 00 4f 00     H.I.J.K.L.M.N.O.
    5ff6:	50 00 51 00 52 00 53 00 54 00 55 00 56 00 57 00     P.Q.R.S.T.U.V.W.
    6006:	58 00 59 00 5a 00 5b 00 5c 00 5d 00 5e 00 5f 00     X.Y.Z.[.\.].^._.
    6016:	60 00 61 00 62 00 63 00 64 00 65 00 66 00 67 00     `.a.b.c.d.e.f.g.
    6026:	68 00 69 00 6a 00 6b 00 6c 00 6d 00 6e 00 6f 00     h.i.j.k.l.m.n.o.
    6036:	70 00 71 00 72 00 73 00 74 00 75 00 76 00 77 00     p.q.r.s.t.u.v.w.
    6046:	78 00 79 00 7a 00 7b 00 7c 00 7d 00 7e 00 7f 00     x.y.z.{.|.}.~...
    6056:	80 00 81 00 82 00 83 00 84 00 85 00 86 00 87 00     ................
    6066:	88 00 89 00 8a 00 8b 00 8c 00 8d 00 8e 00 8f 00     ................
    6076:	90 00 91 00 92 00 93 00 94 00 95 00 96 00 97 00     ................
    6086:	98 00 99 00 9a 00 9b 00 9c 00 9d 00 9e 00 9f 00     ................
    6096:	a0 00 a1 00 a2 00 a3 00 a4 00 a5 00 a6 00 a7 00     ................
    60a6:	a8 00 a9 00 aa 00 ab 00 ac 00 ad 00 ae 00 af 00     ................
    60b6:	b0 00 b1 00 b2 00 b3 00 b4 00 b5 00 b6 00 b7 00     ................
    60c6:	b8 00 b9 00 ba 00 bb 00 bc 00 bd 00 be 00 bf 00     ................
    60d6:	c0 00 c1 00 c2 00 c3 00 c4 00 c5 00 c6 00 c7 00     ................
    60e6:	c8 00                                               ..

000060e8 <f5>:
    60e8:	c8 00 c7 00 c6 00 c5 00 c4 00 c3 00 c2 00 c1 00     ................
    60f8:	c0 00 bf 00 be 00 bd 00 bc 00 bb 00 ba 00 b9 00     ................
    6108:	b8 00 b7 00 b6 00 b5 00 b4 00 b3 00 b2 00 b1 00     ................
    6118:	b0 00 af 00 ae 00 ad 00 ac 00 ab 00 aa 00 a9 00     ................
    6128:	a8 00 a7 00 a6 00 a5 00 a4 00 a3 00 a2 00 a1 00     ................
    6138:	a0 00 9f 00 9e 00 9d 00 9c 00 9b 00 9a 00 99 00     ................
    6148:	98 00 97 00 96 00 95 00 94 00 93 00 92 00 91 00     ................
    6158:	90 00 8f 00 8e 00 8d 00 8c 00 8b 00 8a 00 89 00     ................
    6168:	88 00 87 00 86 00 85 00 84 00 83 00 82 00 81 00     ................
    6178:	80 00 7f 00 7e 00 7d 00 7c 00 7b 00 7a 00 79 00     ....~.}.|.{.z.y.
    6188:	78 00 77 00 76 00 75 00 74 00 73 00 72 00 71 00     x.w.v.u.t.s.r.q.
    6198:	70 00 6f 00 6e 00 6d 00 6c 00 6b 00 6a 00 69 00     p.o.n.m.l.k.j.i.
    61a8:	68 00 67 00 66 00 65 00 64 00 63 00 62 00 61 00     h.g.f.e.d.c.b.a.
    61b8:	60 00 5f 00 5e 00 5d 00 5c 00 5b 00 5a 00 59 00     `._.^.].\.[.Z.Y.
    61c8:	58 00 57 00 56 00 55 00 54 00 53 00 52 00 51 00     X.W.V.U.T.S.R.Q.
    61d8:	50 00 4f 00 4e 00 4d 00 4c 00 4b 00 4a 00 49 00     P.O.N.M.L.K.J.I.
    61e8:	48 00 47 00 46 00 45 00 44 00 43 00 42 00 41 00     H.G.F.E.D.C.B.A.
    61f8:	40 00 3f 00 3e 00 3d 00 3c 00 3b 00 3a 00 39 00     @.?.>.=.<.;.:.9.
    6208:	38 00 37 00 36 00 35 00 34 00 33 00 32 00 31 00     8.7.6.5.4.3.2.1.
    6218:	30 00 2f 00 2e 00 2d 00 2c 00 2b 00 2a 00 29 00     0./...-.,.+.*.).
    6228:	28 00 27 00 26 00 25 00 24 00 23 00 22 00 21 00     (.'.&.%.$.#.".!.
    6238:	20 00 1f 00 1e 00 1d 00 1c 00 1b 00 1a 00 19 00      ...............
    6248:	18 00 17 00 16 00 15 00 14 00 13 00 12 00 11 00     ................
    6258:	10 00 0f 00 0e 00 0d 00 0c 00 0b 00 0a 00 09 00     ................
    6268:	08 00 07 00 06 00 05 00 04 00 03 00 02 00 01 00     ................
	...

0000627a <f6>:
    627a:	00 00 02 00 04 00 06 00 08 00 0a 00 0c 00 0e 00     ................
    628a:	10 00 12 00 14 00 16 00 18 00 1a 00 1c 00 1e 00     ................
    629a:	20 00 22 00 24 00 26 00 28 00 2a 00 2c 00 2e 00      .".$.&.(.*.,...
    62aa:	30 00 32 00 34 00 36 00 38 00 3a 00 3c 00 3e 00     0.2.4.6.8.:.<.>.
    62ba:	40 00 42 00 44 00 46 00 48 00 4a 00 4c 00 4e 00     @.B.D.F.H.J.L.N.
    62ca:	50 00 52 00 54 00 56 00 58 00 5a 00 5c 00 5e 00     P.R.T.V.X.Z.\.^.
    62da:	60 00 62 00 64 00 66 00 68 00 6a 00 6c 00 6e 00     `.b.d.f.h.j.l.n.
    62ea:	70 00 72 00 74 00 76 00 78 00 7a 00 7c 00 7e 00     p.r.t.v.x.z.|.~.
    62fa:	80 00 82 00 84 00 86 00 88 00 8a 00 8c 00 8e 00     ................
    630a:	90 00 92 00 94 00 96 00 98 00 9a 00 9c 00 9e 00     ................
    631a:	a0 00 a2 00 a4 00 a6 00 a8 00 aa 00 ac 00 ae 00     ................
    632a:	b0 00 b2 00 b4 00 b6 00 b8 00 ba 00 bc 00 be 00     ................
    633a:	c0 00 c2 00 c4 00 c6 00 c8 00 c8 00 c8 00 c8 00     ................
    634a:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    635a:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    636a:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    637a:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    638a:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    639a:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    63aa:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    63ba:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    63ca:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    63da:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    63ea:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    63fa:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    640a:	c8 00                                               ..

0000640c <f7>:
    640c:	c8 00 c6 00 c4 00 c2 00 c0 00 be 00 bc 00 ba 00     ................
    641c:	b8 00 b6 00 b4 00 b2 00 b0 00 ae 00 ac 00 aa 00     ................
    642c:	a8 00 a6 00 a4 00 a2 00 a0 00 9e 00 9c 00 9a 00     ................
    643c:	98 00 96 00 94 00 92 00 90 00 8e 00 8c 00 8a 00     ................
    644c:	88 00 86 00 84 00 82 00 80 00 7e 00 7c 00 7a 00     ..........~.|.z.
    645c:	78 00 76 00 74 00 72 00 70 00 6e 00 6c 00 6a 00     x.v.t.r.p.n.l.j.
    646c:	68 00 66 00 64 00 62 00 60 00 5e 00 5c 00 5a 00     h.f.d.b.`.^.\.Z.
    647c:	58 00 56 00 54 00 52 00 50 00 4e 00 4c 00 4a 00     X.V.T.R.P.N.L.J.
    648c:	48 00 46 00 44 00 42 00 40 00 3e 00 3c 00 3a 00     H.F.D.B.@.>.<.:.
    649c:	38 00 36 00 34 00 32 00 30 00 2e 00 2c 00 2a 00     8.6.4.2.0...,.*.
    64ac:	28 00 26 00 24 00 22 00 20 00 1e 00 1c 00 1a 00     (.&.$.". .......
    64bc:	18 00 16 00 14 00 12 00 10 00 0e 00 0c 00 0a 00     ................
    64cc:	08 00 06 00 04 00 02 00 00 00 00 00 00 00 00 00     ................
	...

0000659e <f8>:
    659e:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    65ae:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    65be:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    65ce:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    65de:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    65ee:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    65fe:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    660e:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    661e:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    662e:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    663e:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    664e:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    665e:	c8 00 c8 00 c8 00 c8 00 c8 00 c6 00 c4 00 c2 00     ................
    666e:	c0 00 be 00 bc 00 ba 00 b8 00 b6 00 b4 00 b2 00     ................
    667e:	b0 00 ae 00 ac 00 aa 00 a8 00 a6 00 a4 00 a2 00     ................
    668e:	a0 00 9e 00 9c 00 9a 00 98 00 96 00 94 00 92 00     ................
    669e:	90 00 8e 00 8c 00 8a 00 88 00 86 00 84 00 82 00     ................
    66ae:	80 00 7e 00 7c 00 7a 00 78 00 76 00 74 00 72 00     ..~.|.z.x.v.t.r.
    66be:	70 00 6e 00 6c 00 6a 00 68 00 66 00 64 00 62 00     p.n.l.j.h.f.d.b.
    66ce:	60 00 5e 00 5c 00 5a 00 58 00 56 00 54 00 52 00     `.^.\.Z.X.V.T.R.
    66de:	50 00 4e 00 4c 00 4a 00 48 00 46 00 44 00 42 00     P.N.L.J.H.F.D.B.
    66ee:	40 00 3e 00 3c 00 3a 00 38 00 36 00 34 00 32 00     @.>.<.:.8.6.4.2.
    66fe:	30 00 2e 00 2c 00 2a 00 28 00 26 00 24 00 22 00     0...,.*.(.&.$.".
    670e:	20 00 1e 00 1c 00 1a 00 18 00 16 00 14 00 12 00      ...............
    671e:	10 00 0e 00 0c 00 0a 00 08 00 06 00 04 00 02 00     ................
	...

00006730 <f9>:
	...
    67f8:	00 00 02 00 04 00 06 00 08 00 0a 00 0c 00 0e 00     ................
    6808:	10 00 12 00 14 00 16 00 18 00 1a 00 1c 00 1e 00     ................
    6818:	20 00 22 00 24 00 26 00 28 00 2a 00 2c 00 2e 00      .".$.&.(.*.,...
    6828:	30 00 32 00 34 00 36 00 38 00 3a 00 3c 00 3e 00     0.2.4.6.8.:.<.>.
    6838:	40 00 42 00 44 00 46 00 48 00 4a 00 4c 00 4e 00     @.B.D.F.H.J.L.N.
    6848:	50 00 52 00 54 00 56 00 58 00 5a 00 5c 00 5e 00     P.R.T.V.X.Z.\.^.
    6858:	60 00 62 00 64 00 66 00 68 00 6a 00 6c 00 6e 00     `.b.d.f.h.j.l.n.
    6868:	70 00 72 00 74 00 76 00 78 00 7a 00 7c 00 7e 00     p.r.t.v.x.z.|.~.
    6878:	80 00 82 00 84 00 86 00 88 00 8a 00 8c 00 8e 00     ................
    6888:	90 00 92 00 94 00 96 00 98 00 9a 00 9c 00 9e 00     ................
    6898:	a0 00 a2 00 a4 00 a6 00 a8 00 aa 00 ac 00 ae 00     ................
    68a8:	b0 00 b2 00 b4 00 b6 00 b8 00 ba 00 bc 00 be 00     ................
    68b8:	c0 00 c2 00 c4 00 c6 00 c8 00                       ..........

000068c2 <f10>:
    68c2:	64 00 66 00 68 00 6a 00 6c 00 6e 00 70 00 72 00     d.f.h.j.l.n.p.r.
    68d2:	74 00 76 00 78 00 7a 00 7c 00 7e 00 80 00 82 00     t.v.x.z.|.~.....
    68e2:	84 00 86 00 88 00 8a 00 8c 00 8e 00 90 00 92 00     ................
    68f2:	94 00 96 00 98 00 9a 00 9c 00 9e 00 a0 00 a2 00     ................
    6902:	a4 00 a6 00 a8 00 aa 00 ac 00 ae 00 b0 00 b2 00     ................
    6912:	b4 00 b6 00 b8 00 ba 00 bc 00 be 00 c0 00 c2 00     ................
    6922:	c4 00 c6 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6932:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6942:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6952:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6962:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6972:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6982:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6992:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    69a2:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    69b2:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    69c2:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    69d2:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    69e2:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    69f2:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6a02:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6a12:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6a22:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6a32:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6a42:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6a52:	c8 00                                               ..

00006a54 <f11>:
    6a54:	c8 00 c7 00 c6 00 c5 00 c4 00 c3 00 c2 00 c1 00     ................
    6a64:	c0 00 bf 00 be 00 bd 00 bc 00 bb 00 ba 00 b9 00     ................
    6a74:	b8 00 b7 00 b6 00 b5 00 b4 00 b3 00 b2 00 b1 00     ................
    6a84:	b0 00 af 00 ae 00 ad 00 ac 00 ab 00 aa 00 a9 00     ................
    6a94:	a8 00 a7 00 a6 00 a5 00 a4 00 a3 00 a2 00 a1 00     ................
    6aa4:	a0 00 9f 00 9e 00 9d 00 9c 00 9b 00 9a 00 99 00     ................
    6ab4:	98 00 97 00 96 00 95 00 94 00 93 00 92 00 91 00     ................
    6ac4:	90 00 8f 00 8e 00 8d 00 8c 00 8b 00 8a 00 89 00     ................
    6ad4:	88 00 87 00 86 00 85 00 84 00 83 00 82 00 81 00     ................
    6ae4:	80 00 7f 00 7e 00 7d 00 7c 00 7b 00 7a 00 79 00     ....~.}.|.{.z.y.
    6af4:	78 00 77 00 76 00 75 00 74 00 73 00 72 00 71 00     x.w.v.u.t.s.r.q.
    6b04:	70 00 6f 00 6e 00 6d 00 6c 00 6b 00 6a 00 69 00     p.o.n.m.l.k.j.i.
    6b14:	68 00 67 00 66 00 65 00 64 00 64 00 64 00 64 00     h.g.f.e.d.d.d.d.
    6b24:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6b34:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6b44:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6b54:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6b64:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6b74:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6b84:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6b94:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6ba4:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6bb4:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6bc4:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6bd4:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6be4:	64 00                                               d.

00006be6 <f12>:
    6be6:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6bf6:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c06:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c16:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c26:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c36:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c46:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c56:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c66:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c76:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c86:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c96:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6ca6:	c8 00 c8 00 c8 00 c8 00 c8 00 c7 00 c6 00 c5 00     ................
    6cb6:	c4 00 c3 00 c2 00 c1 00 c0 00 bf 00 be 00 bd 00     ................
    6cc6:	bc 00 bb 00 ba 00 b9 00 b8 00 b7 00 b6 00 b5 00     ................
    6cd6:	b4 00 b3 00 b2 00 b1 00 b0 00 af 00 ae 00 ad 00     ................
    6ce6:	ac 00 ab 00 aa 00 a9 00 a8 00 a7 00 a6 00 a5 00     ................
    6cf6:	a4 00 a3 00 a2 00 a1 00 a0 00 9f 00 9e 00 9d 00     ................
    6d06:	9c 00 9b 00 9a 00 99 00 98 00 97 00 96 00 95 00     ................
    6d16:	94 00 93 00 92 00 91 00 90 00 8f 00 8e 00 8d 00     ................
    6d26:	8c 00 8b 00 8a 00 89 00 88 00 87 00 86 00 85 00     ................
    6d36:	84 00 83 00 82 00 81 00 80 00 7f 00 7e 00 7d 00     ............~.}.
    6d46:	7c 00 7b 00 7a 00 79 00 78 00 77 00 76 00 75 00     |.{.z.y.x.w.v.u.
    6d56:	74 00 73 00 72 00 71 00 70 00 6f 00 6e 00 6d 00     t.s.r.q.p.o.n.m.
    6d66:	6c 00 6b 00 6a 00 69 00 68 00 67 00 66 00 65 00     l.k.j.i.h.g.f.e.
    6d76:	64 00                                               d.

00006d78 <f13>:
    6d78:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6d88:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6d98:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6da8:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6db8:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6dc8:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6dd8:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6de8:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6df8:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6e08:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6e18:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6e28:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6e38:	64 00 64 00 64 00 64 00 64 00 65 00 66 00 67 00     d.d.d.d.d.e.f.g.
    6e48:	68 00 69 00 6a 00 6b 00 6c 00 6d 00 6e 00 6f 00     h.i.j.k.l.m.n.o.
    6e58:	70 00 71 00 72 00 73 00 74 00 75 00 76 00 77 00     p.q.r.s.t.u.v.w.
    6e68:	78 00 79 00 7a 00 7b 00 7c 00 7d 00 7e 00 7f 00     x.y.z.{.|.}.~...
    6e78:	80 00 81 00 82 00 83 00 84 00 85 00 86 00 87 00     ................
    6e88:	88 00 89 00 8a 00 8b 00 8c 00 8d 00 8e 00 8f 00     ................
    6e98:	90 00 91 00 92 00 93 00 94 00 95 00 96 00 97 00     ................
    6ea8:	98 00 99 00 9a 00 9b 00 9c 00 9d 00 9e 00 9f 00     ................
    6eb8:	a0 00 a1 00 a2 00 a3 00 a4 00 a5 00 a6 00 a7 00     ................
    6ec8:	a8 00 a9 00 aa 00 ab 00 ac 00 ad 00 ae 00 af 00     ................
    6ed8:	b0 00 b1 00 b2 00 b3 00 b4 00 b5 00 b6 00 b7 00     ................
    6ee8:	b8 00 b9 00 ba 00 bb 00 bc 00 bd 00 be 00 bf 00     ................
    6ef8:	c0 00 c1 00 c2 00 c3 00 c4 00 c5 00 c6 00 c7 00     ................
    6f08:	c8 00                                               ..

00006f0a <f14>:
    6f0a:	00 00 01 00 02 00 03 00 04 00 05 00 06 00 07 00     ................
    6f1a:	08 00 09 00 0a 00 0b 00 0c 00 0d 00 0e 00 0f 00     ................
    6f2a:	10 00 11 00 12 00 13 00 14 00 15 00 16 00 17 00     ................
    6f3a:	18 00 19 00 1a 00 1b 00 1c 00 1d 00 1e 00 1f 00     ................
    6f4a:	20 00 21 00 22 00 23 00 24 00 25 00 26 00 27 00      .!.".#.$.%.&.'.
    6f5a:	28 00 29 00 2a 00 2b 00 2c 00 2d 00 2e 00 2f 00     (.).*.+.,.-.../.
    6f6a:	30 00 31 00 32 00 33 00 34 00 35 00 36 00 37 00     0.1.2.3.4.5.6.7.
    6f7a:	38 00 39 00 3a 00 3b 00 3c 00 3d 00 3e 00 3f 00     8.9.:.;.<.=.>.?.
    6f8a:	40 00 41 00 42 00 43 00 44 00 45 00 46 00 47 00     @.A.B.C.D.E.F.G.
    6f9a:	48 00 49 00 4a 00 4b 00 4c 00 4d 00 4e 00 4f 00     H.I.J.K.L.M.N.O.
    6faa:	50 00 51 00 52 00 53 00 54 00 55 00 56 00 57 00     P.Q.R.S.T.U.V.W.
    6fba:	58 00 59 00 5a 00 5b 00 5c 00 5d 00 5e 00 5f 00     X.Y.Z.[.\.].^._.
    6fca:	60 00 61 00 62 00 63 00 64 00 64 00 64 00 64 00     `.a.b.c.d.d.d.d.
    6fda:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6fea:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6ffa:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    700a:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    701a:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    702a:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    703a:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    704a:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    705a:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    706a:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    707a:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    708a:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    709a:	64 00                                               d.

0000709c <f15>:
    709c:	64 00 63 00 62 00 61 00 60 00 5f 00 5e 00 5d 00     d.c.b.a.`._.^.].
    70ac:	5c 00 5b 00 5a 00 59 00 58 00 57 00 56 00 55 00     \.[.Z.Y.X.W.V.U.
    70bc:	54 00 53 00 52 00 51 00 50 00 4f 00 4e 00 4d 00     T.S.R.Q.P.O.N.M.
    70cc:	4c 00 4b 00 4a 00 49 00 48 00 47 00 46 00 45 00     L.K.J.I.H.G.F.E.
    70dc:	44 00 43 00 42 00 41 00 40 00 3f 00 3e 00 3d 00     D.C.B.A.@.?.>.=.
    70ec:	3c 00 3b 00 3a 00 39 00 38 00 37 00 36 00 35 00     <.;.:.9.8.7.6.5.
    70fc:	34 00 33 00 32 00 31 00 30 00 2f 00 2e 00 2d 00     4.3.2.1.0./...-.
    710c:	2c 00 2b 00 2a 00 29 00 28 00 27 00 26 00 25 00     ,.+.*.).(.'.&.%.
    711c:	24 00 23 00 22 00 21 00 20 00 1f 00 1e 00 1d 00     $.#.".!. .......
    712c:	1c 00 1b 00 1a 00 19 00 18 00 17 00 16 00 15 00     ................
    713c:	14 00 13 00 12 00 11 00 10 00 0f 00 0e 00 0d 00     ................
    714c:	0c 00 0b 00 0a 00 09 00 08 00 07 00 06 00 05 00     ................
    715c:	04 00 03 00 02 00 01 00 00 00 00 00 00 00 00 00     ................
	...

0000722e <f16>:
    722e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    723e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    724e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    725e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    726e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    727e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    728e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    729e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    72ae:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    72be:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    72ce:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    72de:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    72ee:	64 00 64 00 64 00 64 00 64 00 63 00 62 00 61 00     d.d.d.d.d.c.b.a.
    72fe:	60 00 5f 00 5e 00 5d 00 5c 00 5b 00 5a 00 59 00     `._.^.].\.[.Z.Y.
    730e:	58 00 57 00 56 00 55 00 54 00 53 00 52 00 51 00     X.W.V.U.T.S.R.Q.
    731e:	50 00 4f 00 4e 00 4d 00 4c 00 4b 00 4a 00 49 00     P.O.N.M.L.K.J.I.
    732e:	48 00 47 00 46 00 45 00 44 00 43 00 42 00 41 00     H.G.F.E.D.C.B.A.
    733e:	40 00 3f 00 3e 00 3d 00 3c 00 3b 00 3a 00 39 00     @.?.>.=.<.;.:.9.
    734e:	38 00 37 00 36 00 35 00 34 00 33 00 32 00 31 00     8.7.6.5.4.3.2.1.
    735e:	30 00 2f 00 2e 00 2d 00 2c 00 2b 00 2a 00 29 00     0./...-.,.+.*.).
    736e:	28 00 27 00 26 00 25 00 24 00 23 00 22 00 21 00     (.'.&.%.$.#.".!.
    737e:	20 00 1f 00 1e 00 1d 00 1c 00 1b 00 1a 00 19 00      ...............
    738e:	18 00 17 00 16 00 15 00 14 00 13 00 12 00 11 00     ................
    739e:	10 00 0f 00 0e 00 0d 00 0c 00 0b 00 0a 00 09 00     ................
    73ae:	08 00 07 00 06 00 05 00 04 00 03 00 02 00 01 00     ................
	...

000073c0 <f17>:
	...
    7488:	00 00 01 00 02 00 03 00 04 00 05 00 06 00 07 00     ................
    7498:	08 00 09 00 0a 00 0b 00 0c 00 0d 00 0e 00 0f 00     ................
    74a8:	10 00 11 00 12 00 13 00 14 00 15 00 16 00 17 00     ................
    74b8:	18 00 19 00 1a 00 1b 00 1c 00 1d 00 1e 00 1f 00     ................
    74c8:	20 00 21 00 22 00 23 00 24 00 25 00 26 00 27 00      .!.".#.$.%.&.'.
    74d8:	28 00 29 00 2a 00 2b 00 2c 00 2d 00 2e 00 2f 00     (.).*.+.,.-.../.
    74e8:	30 00 31 00 32 00 33 00 34 00 35 00 36 00 37 00     0.1.2.3.4.5.6.7.
    74f8:	38 00 39 00 3a 00 3b 00 3c 00 3d 00 3e 00 3f 00     8.9.:.;.<.=.>.?.
    7508:	40 00 41 00 42 00 43 00 44 00 45 00 46 00 47 00     @.A.B.C.D.E.F.G.
    7518:	48 00 49 00 4a 00 4b 00 4c 00 4d 00 4e 00 4f 00     H.I.J.K.L.M.N.O.
    7528:	50 00 51 00 52 00 53 00 54 00 55 00 56 00 57 00     P.Q.R.S.T.U.V.W.
    7538:	58 00 59 00 5a 00 5b 00 5c 00 5d 00 5e 00 5f 00     X.Y.Z.[.\.].^._.
    7548:	60 00 61 00 62 00 63 00 64 00                       `.a.b.c.d.

00007552 <f18>:
    7552:	00 00 02 00 04 00 06 00 08 00 0a 00 0c 00 0e 00     ................
    7562:	10 00 12 00 14 00 16 00 18 00 1a 00 1c 00 1e 00     ................
    7572:	20 00 22 00 24 00 26 00 28 00 2a 00 2c 00 2e 00      .".$.&.(.*.,...
    7582:	30 00 32 00 34 00 36 00 38 00 3a 00 3c 00 3e 00     0.2.4.6.8.:.<.>.
    7592:	40 00 42 00 44 00 46 00 48 00 4a 00 4c 00 4e 00     @.B.D.F.H.J.L.N.
    75a2:	50 00 52 00 54 00 56 00 58 00 5a 00 5c 00 5e 00     P.R.T.V.X.Z.\.^.
    75b2:	60 00 62 00 64 00 66 00 68 00 6a 00 6c 00 6e 00     `.b.d.f.h.j.l.n.
    75c2:	70 00 72 00 74 00 76 00 78 00 7a 00 7c 00 7e 00     p.r.t.v.x.z.|.~.
    75d2:	80 00 82 00 84 00 86 00 88 00 8a 00 8c 00 8e 00     ................
    75e2:	90 00 92 00 94 00 96 00 98 00 9a 00 9c 00 9e 00     ................
    75f2:	a0 00 a2 00 a4 00 a6 00 a8 00 aa 00 ac 00 ae 00     ................
    7602:	b0 00 b2 00 b4 00 b6 00 b8 00 ba 00 bc 00 be 00     ................
    7612:	c0 00 c2 00 c4 00 c6 00 c8 00 c6 00 c4 00 c2 00     ................
    7622:	c0 00 be 00 bc 00 ba 00 b8 00 b6 00 b4 00 b2 00     ................
    7632:	b0 00 ae 00 ac 00 aa 00 a8 00 a6 00 a4 00 a2 00     ................
    7642:	a0 00 9e 00 9c 00 9a 00 98 00 96 00 94 00 92 00     ................
    7652:	90 00 8e 00 8c 00 8a 00 88 00 86 00 84 00 82 00     ................
    7662:	80 00 7e 00 7c 00 7a 00 78 00 76 00 74 00 72 00     ..~.|.z.x.v.t.r.
    7672:	70 00 6e 00 6c 00 6a 00 68 00 66 00 64 00 62 00     p.n.l.j.h.f.d.b.
    7682:	60 00 5e 00 5c 00 5a 00 58 00 56 00 54 00 52 00     `.^.\.Z.X.V.T.R.
    7692:	50 00 4e 00 4c 00 4a 00 48 00 46 00 44 00 42 00     P.N.L.J.H.F.D.B.
    76a2:	40 00 3e 00 3c 00 3a 00 38 00 36 00 34 00 32 00     @.>.<.:.8.6.4.2.
    76b2:	30 00 2e 00 2c 00 2a 00 28 00 26 00 24 00 22 00     0...,.*.(.&.$.".
    76c2:	20 00 1e 00 1c 00 1a 00 18 00 16 00 14 00 12 00      ...............
    76d2:	10 00 0e 00 0c 00 0a 00 08 00 06 00 04 00 02 00     ................
	...

000076e4 <f19>:
    76e4:	c8 00 c6 00 c4 00 c2 00 c0 00 be 00 bc 00 ba 00     ................
    76f4:	b8 00 b6 00 b4 00 b2 00 b0 00 ae 00 ac 00 aa 00     ................
    7704:	a8 00 a6 00 a4 00 a2 00 a0 00 9e 00 9c 00 9a 00     ................
    7714:	98 00 96 00 94 00 92 00 90 00 8e 00 8c 00 8a 00     ................
    7724:	88 00 86 00 84 00 82 00 80 00 7e 00 7c 00 7a 00     ..........~.|.z.
    7734:	78 00 76 00 74 00 72 00 70 00 6e 00 6c 00 6a 00     x.v.t.r.p.n.l.j.
    7744:	68 00 66 00 64 00 62 00 60 00 5e 00 5c 00 5a 00     h.f.d.b.`.^.\.Z.
    7754:	58 00 56 00 54 00 52 00 50 00 4e 00 4c 00 4a 00     X.V.T.R.P.N.L.J.
    7764:	48 00 46 00 44 00 42 00 40 00 3e 00 3c 00 3a 00     H.F.D.B.@.>.<.:.
    7774:	38 00 36 00 34 00 32 00 30 00 2e 00 2c 00 2a 00     8.6.4.2.0...,.*.
    7784:	28 00 26 00 24 00 22 00 20 00 1e 00 1c 00 1a 00     (.&.$.". .......
    7794:	18 00 16 00 14 00 12 00 10 00 0e 00 0c 00 0a 00     ................
    77a4:	08 00 06 00 04 00 02 00 00 00 02 00 04 00 06 00     ................
    77b4:	08 00 0a 00 0c 00 0e 00 10 00 12 00 14 00 16 00     ................
    77c4:	18 00 1a 00 1c 00 1e 00 20 00 22 00 24 00 26 00     ........ .".$.&.
    77d4:	28 00 2a 00 2c 00 2e 00 30 00 32 00 34 00 36 00     (.*.,...0.2.4.6.
    77e4:	38 00 3a 00 3c 00 3e 00 40 00 42 00 44 00 46 00     8.:.<.>.@.B.D.F.
    77f4:	48 00 4a 00 4c 00 4e 00 50 00 52 00 54 00 56 00     H.J.L.N.P.R.T.V.
    7804:	58 00 5a 00 5c 00 5e 00 60 00 62 00 64 00 66 00     X.Z.\.^.`.b.d.f.
    7814:	68 00 6a 00 6c 00 6e 00 70 00 72 00 74 00 76 00     h.j.l.n.p.r.t.v.
    7824:	78 00 7a 00 7c 00 7e 00 80 00 82 00 84 00 86 00     x.z.|.~.........
    7834:	88 00 8a 00 8c 00 8e 00 90 00 92 00 94 00 96 00     ................
    7844:	98 00 9a 00 9c 00 9e 00 a0 00 a2 00 a4 00 a6 00     ................
    7854:	a8 00 aa 00 ac 00 ae 00 b0 00 b2 00 b4 00 b6 00     ................
    7864:	b8 00 ba 00 bc 00 be 00 c0 00 c2 00 c4 00 c6 00     ................
    7874:	c8 00                                               ..

00007876 <f20>:
    7876:	64 00 65 00 66 00 67 00 68 00 69 00 6a 00 6b 00     d.e.f.g.h.i.j.k.
    7886:	6c 00 6d 00 6e 00 6f 00 70 00 71 00 72 00 73 00     l.m.n.o.p.q.r.s.
    7896:	74 00 75 00 76 00 77 00 78 00 79 00 7a 00 7b 00     t.u.v.w.x.y.z.{.
    78a6:	7c 00 7d 00 7e 00 7f 00 80 00 81 00 82 00 83 00     |.}.~...........
    78b6:	84 00 85 00 86 00 87 00 88 00 89 00 8a 00 8b 00     ................
    78c6:	8c 00 8d 00 8e 00 8f 00 90 00 91 00 92 00 93 00     ................
    78d6:	94 00 95 00 96 00 97 00 98 00 99 00 9a 00 9b 00     ................
    78e6:	9c 00 9d 00 9e 00 9f 00 a0 00 a1 00 a2 00 a3 00     ................
    78f6:	a4 00 a5 00 a6 00 a7 00 a8 00 a9 00 aa 00 ab 00     ................
    7906:	ac 00 ad 00 ae 00 af 00 b0 00 b1 00 b2 00 b3 00     ................
    7916:	b4 00 b5 00 b6 00 b7 00 b8 00 b9 00 ba 00 bb 00     ................
    7926:	bc 00 bd 00 be 00 bf 00 c0 00 c1 00 c2 00 c3 00     ................
    7936:	c4 00 c5 00 c6 00 c7 00 c8 00 c7 00 c6 00 c5 00     ................
    7946:	c4 00 c3 00 c2 00 c1 00 c0 00 bf 00 be 00 bd 00     ................
    7956:	bc 00 bb 00 ba 00 b9 00 b8 00 b7 00 b6 00 b5 00     ................
    7966:	b4 00 b3 00 b2 00 b1 00 b0 00 af 00 ae 00 ad 00     ................
    7976:	ac 00 ab 00 aa 00 a9 00 a8 00 a7 00 a6 00 a5 00     ................
    7986:	a4 00 a3 00 a2 00 a1 00 a0 00 9f 00 9e 00 9d 00     ................
    7996:	9c 00 9b 00 9a 00 99 00 98 00 97 00 96 00 95 00     ................
    79a6:	94 00 93 00 92 00 91 00 90 00 8f 00 8e 00 8d 00     ................
    79b6:	8c 00 8b 00 8a 00 89 00 88 00 87 00 86 00 85 00     ................
    79c6:	84 00 83 00 82 00 81 00 80 00 7f 00 7e 00 7d 00     ............~.}.
    79d6:	7c 00 7b 00 7a 00 79 00 78 00 77 00 76 00 75 00     |.{.z.y.x.w.v.u.
    79e6:	74 00 73 00 72 00 71 00 70 00 6f 00 6e 00 6d 00     t.s.r.q.p.o.n.m.
    79f6:	6c 00 6b 00 6a 00 69 00 68 00 67 00 66 00 65 00     l.k.j.i.h.g.f.e.
    7a06:	64 00                                               d.

00007a08 <f21>:
    7a08:	00 00 01 00 02 00 03 00 04 00 05 00 06 00 07 00     ................
    7a18:	08 00 09 00 0a 00 0b 00 0c 00 0d 00 0e 00 0f 00     ................
    7a28:	10 00 11 00 12 00 13 00 14 00 15 00 16 00 17 00     ................
    7a38:	18 00 19 00 1a 00 1b 00 1c 00 1d 00 1e 00 1f 00     ................
    7a48:	20 00 21 00 22 00 23 00 24 00 25 00 26 00 27 00      .!.".#.$.%.&.'.
    7a58:	28 00 29 00 2a 00 2b 00 2c 00 2d 00 2e 00 2f 00     (.).*.+.,.-.../.
    7a68:	30 00 31 00 32 00 33 00 34 00 35 00 36 00 37 00     0.1.2.3.4.5.6.7.
    7a78:	38 00 39 00 3a 00 3b 00 3c 00 3d 00 3e 00 3f 00     8.9.:.;.<.=.>.?.
    7a88:	40 00 41 00 42 00 43 00 44 00 45 00 46 00 47 00     @.A.B.C.D.E.F.G.
    7a98:	48 00 49 00 4a 00 4b 00 4c 00 4d 00 4e 00 4f 00     H.I.J.K.L.M.N.O.
    7aa8:	50 00 51 00 52 00 53 00 54 00 55 00 56 00 57 00     P.Q.R.S.T.U.V.W.
    7ab8:	58 00 59 00 5a 00 5b 00 5c 00 5d 00 5e 00 5f 00     X.Y.Z.[.\.].^._.
    7ac8:	60 00 61 00 62 00 63 00 64 00 63 00 62 00 61 00     `.a.b.c.d.c.b.a.
    7ad8:	60 00 5f 00 5e 00 5d 00 5c 00 5b 00 5a 00 59 00     `._.^.].\.[.Z.Y.
    7ae8:	58 00 57 00 56 00 55 00 54 00 53 00 52 00 51 00     X.W.V.U.T.S.R.Q.
    7af8:	50 00 4f 00 4e 00 4d 00 4c 00 4b 00 4a 00 49 00     P.O.N.M.L.K.J.I.
    7b08:	48 00 47 00 46 00 45 00 44 00 43 00 42 00 41 00     H.G.F.E.D.C.B.A.
    7b18:	40 00 3f 00 3e 00 3d 00 3c 00 3b 00 3a 00 39 00     @.?.>.=.<.;.:.9.
    7b28:	38 00 37 00 36 00 35 00 34 00 33 00 32 00 31 00     8.7.6.5.4.3.2.1.
    7b38:	30 00 2f 00 2e 00 2d 00 2c 00 2b 00 2a 00 29 00     0./...-.,.+.*.).
    7b48:	28 00 27 00 26 00 25 00 24 00 23 00 22 00 21 00     (.'.&.%.$.#.".!.
    7b58:	20 00 1f 00 1e 00 1d 00 1c 00 1b 00 1a 00 19 00      ...............
    7b68:	18 00 17 00 16 00 15 00 14 00 13 00 12 00 11 00     ................
    7b78:	10 00 0f 00 0e 00 0d 00 0c 00 0b 00 0a 00 09 00     ................
    7b88:	08 00 07 00 06 00 05 00 04 00 03 00 02 00 01 00     ................
	...

00007b9a <f22>:
    7b9a:	c8 00 c7 00 c6 00 c5 00 c4 00 c3 00 c2 00 c1 00     ................
    7baa:	c0 00 bf 00 be 00 bd 00 bc 00 bb 00 ba 00 b9 00     ................
    7bba:	b8 00 b7 00 b6 00 b5 00 b4 00 b3 00 b2 00 b1 00     ................
    7bca:	b0 00 af 00 ae 00 ad 00 ac 00 ab 00 aa 00 a9 00     ................
    7bda:	a8 00 a7 00 a6 00 a5 00 a4 00 a3 00 a2 00 a1 00     ................
    7bea:	a0 00 9f 00 9e 00 9d 00 9c 00 9b 00 9a 00 99 00     ................
    7bfa:	98 00 97 00 96 00 95 00 94 00 93 00 92 00 91 00     ................
    7c0a:	90 00 8f 00 8e 00 8d 00 8c 00 8b 00 8a 00 89 00     ................
    7c1a:	88 00 87 00 86 00 85 00 84 00 83 00 82 00 81 00     ................
    7c2a:	80 00 7f 00 7e 00 7d 00 7c 00 7b 00 7a 00 79 00     ....~.}.|.{.z.y.
    7c3a:	78 00 77 00 76 00 75 00 74 00 73 00 72 00 71 00     x.w.v.u.t.s.r.q.
    7c4a:	70 00 6f 00 6e 00 6d 00 6c 00 6b 00 6a 00 69 00     p.o.n.m.l.k.j.i.
    7c5a:	68 00 67 00 66 00 65 00 64 00 65 00 66 00 67 00     h.g.f.e.d.e.f.g.
    7c6a:	68 00 69 00 6a 00 6b 00 6c 00 6d 00 6e 00 6f 00     h.i.j.k.l.m.n.o.
    7c7a:	70 00 71 00 72 00 73 00 74 00 75 00 76 00 77 00     p.q.r.s.t.u.v.w.
    7c8a:	78 00 79 00 7a 00 7b 00 7c 00 7d 00 7e 00 7f 00     x.y.z.{.|.}.~...
    7c9a:	80 00 81 00 82 00 83 00 84 00 85 00 86 00 87 00     ................
    7caa:	88 00 89 00 8a 00 8b 00 8c 00 8d 00 8e 00 8f 00     ................
    7cba:	90 00 91 00 92 00 93 00 94 00 95 00 96 00 97 00     ................
    7cca:	98 00 99 00 9a 00 9b 00 9c 00 9d 00 9e 00 9f 00     ................
    7cda:	a0 00 a1 00 a2 00 a3 00 a4 00 a5 00 a6 00 a7 00     ................
    7cea:	a8 00 a9 00 aa 00 ab 00 ac 00 ad 00 ae 00 af 00     ................
    7cfa:	b0 00 b1 00 b2 00 b3 00 b4 00 b5 00 b6 00 b7 00     ................
    7d0a:	b8 00 b9 00 ba 00 bb 00 bc 00 bd 00 be 00 bf 00     ................
    7d1a:	c0 00 c1 00 c2 00 c3 00 c4 00 c5 00 c6 00 c7 00     ................
    7d2a:	c8 00                                               ..

00007d2c <f23>:
    7d2c:	64 00 63 00 62 00 61 00 60 00 5f 00 5e 00 5d 00     d.c.b.a.`._.^.].
    7d3c:	5c 00 5b 00 5a 00 59 00 58 00 57 00 56 00 55 00     \.[.Z.Y.X.W.V.U.
    7d4c:	54 00 53 00 52 00 51 00 50 00 4f 00 4e 00 4d 00     T.S.R.Q.P.O.N.M.
    7d5c:	4c 00 4b 00 4a 00 49 00 48 00 47 00 46 00 45 00     L.K.J.I.H.G.F.E.
    7d6c:	44 00 43 00 42 00 41 00 40 00 3f 00 3e 00 3d 00     D.C.B.A.@.?.>.=.
    7d7c:	3c 00 3b 00 3a 00 39 00 38 00 37 00 36 00 35 00     <.;.:.9.8.7.6.5.
    7d8c:	34 00 33 00 32 00 31 00 30 00 2f 00 2e 00 2d 00     4.3.2.1.0./...-.
    7d9c:	2c 00 2b 00 2a 00 29 00 28 00 27 00 26 00 25 00     ,.+.*.).(.'.&.%.
    7dac:	24 00 23 00 22 00 21 00 20 00 1f 00 1e 00 1d 00     $.#.".!. .......
    7dbc:	1c 00 1b 00 1a 00 19 00 18 00 17 00 16 00 15 00     ................
    7dcc:	14 00 13 00 12 00 11 00 10 00 0f 00 0e 00 0d 00     ................
    7ddc:	0c 00 0b 00 0a 00 09 00 08 00 07 00 06 00 05 00     ................
    7dec:	04 00 03 00 02 00 01 00 00 00 01 00 02 00 03 00     ................
    7dfc:	04 00 05 00 06 00 07 00 08 00 09 00 0a 00 0b 00     ................
    7e0c:	0c 00 0d 00 0e 00 0f 00 10 00 11 00 12 00 13 00     ................
    7e1c:	14 00 15 00 16 00 17 00 18 00 19 00 1a 00 1b 00     ................
    7e2c:	1c 00 1d 00 1e 00 1f 00 20 00 21 00 22 00 23 00     ........ .!.".#.
    7e3c:	24 00 25 00 26 00 27 00 28 00 29 00 2a 00 2b 00     $.%.&.'.(.).*.+.
    7e4c:	2c 00 2d 00 2e 00 2f 00 30 00 31 00 32 00 33 00     ,.-.../.0.1.2.3.
    7e5c:	34 00 35 00 36 00 37 00 38 00 39 00 3a 00 3b 00     4.5.6.7.8.9.:.;.
    7e6c:	3c 00 3d 00 3e 00 3f 00 40 00 41 00 42 00 43 00     <.=.>.?.@.A.B.C.
    7e7c:	44 00 45 00 46 00 47 00 48 00 49 00 4a 00 4b 00     D.E.F.G.H.I.J.K.
    7e8c:	4c 00 4d 00 4e 00 4f 00 50 00 51 00 52 00 53 00     L.M.N.O.P.Q.R.S.
    7e9c:	54 00 55 00 56 00 57 00 58 00 59 00 5a 00 5b 00     T.U.V.W.X.Y.Z.[.
    7eac:	5c 00 5d 00 5e 00 5f 00 60 00 61 00 62 00 63 00     \.].^._.`.a.b.c.
    7ebc:	64 00                                               d.

00007ebe <f24>:
    7ebe:	64 00 65 00 66 00 67 00 68 00 69 00 6a 00 6b 00     d.e.f.g.h.i.j.k.
    7ece:	6c 00 6d 00 6e 00 6f 00 70 00 71 00 72 00 73 00     l.m.n.o.p.q.r.s.
    7ede:	74 00 75 00 76 00 77 00 78 00 79 00 7a 00 7b 00     t.u.v.w.x.y.z.{.
    7eee:	7c 00 7d 00 7e 00 7f 00 80 00 81 00 82 00 83 00     |.}.~...........
    7efe:	84 00 85 00 86 00 87 00 88 00 89 00 8a 00 8b 00     ................
    7f0e:	8c 00 8d 00 8e 00 8f 00 90 00 91 00 92 00 93 00     ................
    7f1e:	94 00 95 00 96 00 97 00 98 00 99 00 9a 00 9b 00     ................
    7f2e:	9c 00 9d 00 9e 00 9f 00 a0 00 a1 00 a2 00 a3 00     ................
    7f3e:	a4 00 a5 00 a6 00 a7 00 a8 00 a9 00 aa 00 ab 00     ................
    7f4e:	ac 00 ad 00 ae 00 af 00 b0 00 b1 00 b2 00 b3 00     ................
    7f5e:	b4 00 b5 00 b6 00 b7 00 b8 00 b9 00 ba 00 bb 00     ................
    7f6e:	bc 00 bd 00 be 00 bf 00 c0 00 c1 00 c2 00 c3 00     ................
    7f7e:	c4 00 c5 00 c6 00 c7 00 c8 00 c6 00 c4 00 c2 00     ................
    7f8e:	c0 00 be 00 bc 00 ba 00 b8 00 b6 00 b4 00 b2 00     ................
    7f9e:	b0 00 ae 00 ac 00 aa 00 a8 00 a6 00 a4 00 a2 00     ................
    7fae:	a0 00 9e 00 9c 00 9a 00 98 00 96 00 94 00 92 00     ................
    7fbe:	90 00 8e 00 8c 00 8a 00 88 00 86 00 84 00 82 00     ................
    7fce:	80 00 7e 00 7c 00 7a 00 78 00 76 00 74 00 72 00     ..~.|.z.x.v.t.r.
    7fde:	70 00 6e 00 6c 00 6a 00 68 00 66 00 64 00 62 00     p.n.l.j.h.f.d.b.
    7fee:	60 00 5e 00 5c 00 5a 00 58 00 56 00 54 00 52 00     `.^.\.Z.X.V.T.R.
    7ffe:	50 00 4e 00 4c 00 4a 00 48 00 46 00 44 00 42 00     P.N.L.J.H.F.D.B.
    800e:	40 00 3e 00 3c 00 3a 00 38 00 36 00 34 00 32 00     @.>.<.:.8.6.4.2.
    801e:	30 00 2e 00 2c 00 2a 00 28 00 26 00 24 00 22 00     0...,.*.(.&.$.".
    802e:	20 00 1e 00 1c 00 1a 00 18 00 16 00 14 00 12 00      ...............
    803e:	10 00 0e 00 0c 00 0a 00 08 00 06 00 04 00 02 00     ................
	...

00008050 <f25>:
    8050:	00 00 02 00 04 00 06 00 08 00 0a 00 0c 00 0e 00     ................
    8060:	10 00 12 00 14 00 16 00 18 00 1a 00 1c 00 1e 00     ................
    8070:	20 00 22 00 24 00 26 00 28 00 2a 00 2c 00 2e 00      .".$.&.(.*.,...
    8080:	30 00 32 00 34 00 36 00 38 00 3a 00 3c 00 3e 00     0.2.4.6.8.:.<.>.
    8090:	40 00 42 00 44 00 46 00 48 00 4a 00 4c 00 4e 00     @.B.D.F.H.J.L.N.
    80a0:	50 00 52 00 54 00 56 00 58 00 5a 00 5c 00 5e 00     P.R.T.V.X.Z.\.^.
    80b0:	60 00 62 00 64 00 66 00 68 00 6a 00 6c 00 6e 00     `.b.d.f.h.j.l.n.
    80c0:	70 00 72 00 74 00 76 00 78 00 7a 00 7c 00 7e 00     p.r.t.v.x.z.|.~.
    80d0:	80 00 82 00 84 00 86 00 88 00 8a 00 8c 00 8e 00     ................
    80e0:	90 00 92 00 94 00 96 00 98 00 9a 00 9c 00 9e 00     ................
    80f0:	a0 00 a2 00 a4 00 a6 00 a8 00 aa 00 ac 00 ae 00     ................
    8100:	b0 00 b2 00 b4 00 b6 00 b8 00 ba 00 bc 00 be 00     ................
    8110:	c0 00 c2 00 c4 00 c6 00 c8 00 c7 00 c6 00 c5 00     ................
    8120:	c4 00 c3 00 c2 00 c1 00 c0 00 bf 00 be 00 bd 00     ................
    8130:	bc 00 bb 00 ba 00 b9 00 b8 00 b7 00 b6 00 b5 00     ................
    8140:	b4 00 b3 00 b2 00 b1 00 b0 00 af 00 ae 00 ad 00     ................
    8150:	ac 00 ab 00 aa 00 a9 00 a8 00 a7 00 a6 00 a5 00     ................
    8160:	a4 00 a3 00 a2 00 a1 00 a0 00 9f 00 9e 00 9d 00     ................
    8170:	9c 00 9b 00 9a 00 99 00 98 00 97 00 96 00 95 00     ................
    8180:	94 00 93 00 92 00 91 00 90 00 8f 00 8e 00 8d 00     ................
    8190:	8c 00 8b 00 8a 00 89 00 88 00 87 00 86 00 85 00     ................
    81a0:	84 00 83 00 82 00 81 00 80 00 7f 00 7e 00 7d 00     ............~.}.
    81b0:	7c 00 7b 00 7a 00 79 00 78 00 77 00 76 00 75 00     |.{.z.y.x.w.v.u.
    81c0:	74 00 73 00 72 00 71 00 70 00 6f 00 6e 00 6d 00     t.s.r.q.p.o.n.m.
    81d0:	6c 00 6b 00 6a 00 69 00 68 00 67 00 66 00 65 00     l.k.j.i.h.g.f.e.
    81e0:	64 00                                               d.

000081e2 <f26>:
    81e2:	64 00 63 00 62 00 61 00 60 00 5f 00 5e 00 5d 00     d.c.b.a.`._.^.].
    81f2:	5c 00 5b 00 5a 00 59 00 58 00 57 00 56 00 55 00     \.[.Z.Y.X.W.V.U.
    8202:	54 00 53 00 52 00 51 00 50 00 4f 00 4e 00 4d 00     T.S.R.Q.P.O.N.M.
    8212:	4c 00 4b 00 4a 00 49 00 48 00 47 00 46 00 45 00     L.K.J.I.H.G.F.E.
    8222:	44 00 43 00 42 00 41 00 40 00 3f 00 3e 00 3d 00     D.C.B.A.@.?.>.=.
    8232:	3c 00 3b 00 3a 00 39 00 38 00 37 00 36 00 35 00     <.;.:.9.8.7.6.5.
    8242:	34 00 33 00 32 00 31 00 30 00 2f 00 2e 00 2d 00     4.3.2.1.0./...-.
    8252:	2c 00 2b 00 2a 00 29 00 28 00 27 00 26 00 25 00     ,.+.*.).(.'.&.%.
    8262:	24 00 23 00 22 00 21 00 20 00 1f 00 1e 00 1d 00     $.#.".!. .......
    8272:	1c 00 1b 00 1a 00 19 00 18 00 17 00 16 00 15 00     ................
    8282:	14 00 13 00 12 00 11 00 10 00 0f 00 0e 00 0d 00     ................
    8292:	0c 00 0b 00 0a 00 09 00 08 00 07 00 06 00 05 00     ................
    82a2:	04 00 03 00 02 00 01 00 00 00 02 00 04 00 06 00     ................
    82b2:	08 00 0a 00 0c 00 0e 00 10 00 12 00 14 00 16 00     ................
    82c2:	18 00 1a 00 1c 00 1e 00 20 00 22 00 24 00 26 00     ........ .".$.&.
    82d2:	28 00 2a 00 2c 00 2e 00 30 00 32 00 34 00 36 00     (.*.,...0.2.4.6.
    82e2:	38 00 3a 00 3c 00 3e 00 40 00 42 00 44 00 46 00     8.:.<.>.@.B.D.F.
    82f2:	48 00 4a 00 4c 00 4e 00 50 00 52 00 54 00 56 00     H.J.L.N.P.R.T.V.
    8302:	58 00 5a 00 5c 00 5e 00 60 00 62 00 64 00 66 00     X.Z.\.^.`.b.d.f.
    8312:	68 00 6a 00 6c 00 6e 00 70 00 72 00 74 00 76 00     h.j.l.n.p.r.t.v.
    8322:	78 00 7a 00 7c 00 7e 00 80 00 82 00 84 00 86 00     x.z.|.~.........
    8332:	88 00 8a 00 8c 00 8e 00 90 00 92 00 94 00 96 00     ................
    8342:	98 00 9a 00 9c 00 9e 00 a0 00 a2 00 a4 00 a6 00     ................
    8352:	a8 00 aa 00 ac 00 ae 00 b0 00 b2 00 b4 00 b6 00     ................
    8362:	b8 00 ba 00 bc 00 be 00 c0 00 c2 00 c4 00 c6 00     ................
    8372:	c8 00                                               ..

00008374 <f27>:
    8374:	c8 00 c6 00 c4 00 c2 00 c0 00 be 00 bc 00 ba 00     ................
    8384:	b8 00 b6 00 b4 00 b2 00 b0 00 ae 00 ac 00 aa 00     ................
    8394:	a8 00 a6 00 a4 00 a2 00 a0 00 9e 00 9c 00 9a 00     ................
    83a4:	98 00 96 00 94 00 92 00 90 00 8e 00 8c 00 8a 00     ................
    83b4:	88 00 86 00 84 00 82 00 80 00 7e 00 7c 00 7a 00     ..........~.|.z.
    83c4:	78 00 76 00 74 00 72 00 70 00 6e 00 6c 00 6a 00     x.v.t.r.p.n.l.j.
    83d4:	68 00 66 00 64 00 62 00 60 00 5e 00 5c 00 5a 00     h.f.d.b.`.^.\.Z.
    83e4:	58 00 56 00 54 00 52 00 50 00 4e 00 4c 00 4a 00     X.V.T.R.P.N.L.J.
    83f4:	48 00 46 00 44 00 42 00 40 00 3e 00 3c 00 3a 00     H.F.D.B.@.>.<.:.
    8404:	38 00 36 00 34 00 32 00 30 00 2e 00 2c 00 2a 00     8.6.4.2.0...,.*.
    8414:	28 00 26 00 24 00 22 00 20 00 1e 00 1c 00 1a 00     (.&.$.". .......
    8424:	18 00 16 00 14 00 12 00 10 00 0e 00 0c 00 0a 00     ................
    8434:	08 00 06 00 04 00 02 00 00 00 01 00 02 00 03 00     ................
    8444:	04 00 05 00 06 00 07 00 08 00 09 00 0a 00 0b 00     ................
    8454:	0c 00 0d 00 0e 00 0f 00 10 00 11 00 12 00 13 00     ................
    8464:	14 00 15 00 16 00 17 00 18 00 19 00 1a 00 1b 00     ................
    8474:	1c 00 1d 00 1e 00 1f 00 20 00 21 00 22 00 23 00     ........ .!.".#.
    8484:	24 00 25 00 26 00 27 00 28 00 29 00 2a 00 2b 00     $.%.&.'.(.).*.+.
    8494:	2c 00 2d 00 2e 00 2f 00 30 00 31 00 32 00 33 00     ,.-.../.0.1.2.3.
    84a4:	34 00 35 00 36 00 37 00 38 00 39 00 3a 00 3b 00     4.5.6.7.8.9.:.;.
    84b4:	3c 00 3d 00 3e 00 3f 00 40 00 41 00 42 00 43 00     <.=.>.?.@.A.B.C.
    84c4:	44 00 45 00 46 00 47 00 48 00 49 00 4a 00 4b 00     D.E.F.G.H.I.J.K.
    84d4:	4c 00 4d 00 4e 00 4f 00 50 00 51 00 52 00 53 00     L.M.N.O.P.Q.R.S.
    84e4:	54 00 55 00 56 00 57 00 58 00 59 00 5a 00 5b 00     T.U.V.W.X.Y.Z.[.
    84f4:	5c 00 5d 00 5e 00 5f 00 60 00 61 00 62 00 63 00     \.].^._.`.a.b.c.
    8504:	64 00                                               d.

00008506 <strtol>:
    8506:	0b 12       	push	r11		;
    8508:	0a 12       	push	r10		;
    850a:	09 12       	push	r9		;
    850c:	08 12       	push	r8		;
    850e:	07 12       	push	r7		;
    8510:	06 12       	push	r6		;
    8512:	05 12       	push	r5		;
    8514:	04 12       	push	r4		;
    8516:	31 80 0e 00 	sub	#14,	r1	;#0x000e
    851a:	81 4f 00 00 	mov	r15,	0(r1)	;
    851e:	81 4e 02 00 	mov	r14,	2(r1)	;
    8522:	81 4d 04 00 	mov	r13,	4(r1)	;
    8526:	06 4f       	mov	r15,	r6	;
    8528:	81 43 08 00 	mov	#0,	8(r1)	;r3 As==00
    852c:	67 46       	mov.b	@r6,	r7	;
    852e:	16 53       	inc	r6		;
    8530:	4f 47       	mov.b	r7,	r15	;
    8532:	0e 43       	clr	r14		;
    8534:	3f 90 20 00 	cmp	#32,	r15	;#0x0020
    8538:	05 24       	jz	$+12     	;abs 0x8544
    853a:	3f 50 f7 ff 	add	#-9,	r15	;#0xfff7
    853e:	3f 90 05 00 	cmp	#5,	r15	;#0x0005
    8542:	01 2c       	jc	$+4      	;abs 0x8546
    8544:	1e 43       	mov	#1,	r14	;r3 As==01
    8546:	0e 93       	cmp	#0,	r14	;r3 As==00
    8548:	f1 23       	jnz	$-28     	;abs 0x852c
    854a:	77 90 2d 00 	cmp.b	#45,	r7	;#0x002d
    854e:	d9 24       	jz	$+436    	;abs 0x8702
    8550:	77 90 2b 00 	cmp.b	#43,	r7	;#0x002b
    8554:	d3 24       	jz	$+424    	;abs 0x86fc
    8556:	81 93 04 00 	cmp	#0,	4(r1)	;r3 As==00
    855a:	bf 24       	jz	$+384    	;abs 0x86da
    855c:	b1 90 10 00 	cmp	#16,	4(r1)	;#0x0010
    8560:	04 00 
    8562:	bb 24       	jz	$+376    	;abs 0x86da
    8564:	81 93 04 00 	cmp	#0,	4(r1)	;r3 As==00
    8568:	06 20       	jnz	$+14     	;abs 0x8576
    856a:	77 90 30 00 	cmp.b	#48,	r7	;#0x0030
    856e:	b2 24       	jz	$+358    	;abs 0x86d4
    8570:	b1 40 0a 00 	mov	#10,	4(r1)	;#0x000a
    8574:	04 00 
    8576:	81 93 08 00 	cmp	#0,	8(r1)	;r3 As==00
    857a:	a8 24       	jz	$+338    	;abs 0x86cc
    857c:	04 43       	clr	r4		;
    857e:	35 40 00 80 	mov	#-32768,r5	;#0x8000
    8582:	91 41 04 00 	mov	4(r1),	10(r1)	;
    8586:	0a 00 
    8588:	91 41 0a 00 	mov	10(r1),	12(r1)	;
    858c:	0c 00 
    858e:	91 51 0c 00 	rla	12(r1)		;
    8592:	0c 00 
    8594:	91 71 0c 00 	subc	12(r1),	12(r1)	;
    8598:	0c 00 
    859a:	b1 e3 0c 00 	xor	#-1,	12(r1)	;r3 As==11
    859e:	0c 44       	mov	r4,	r12	;
    85a0:	0d 45       	mov	r5,	r13	;
    85a2:	1a 41 0a 00 	mov	10(r1),	r10	;
    85a6:	1b 41 0c 00 	mov	12(r1),	r11	;
    85aa:	b0 12 82 8f 	call	#-28798	;#0x8f82
    85ae:	81 4e 06 00 	mov	r14,	6(r1)	;
    85b2:	0c 44       	mov	r4,	r12	;
    85b4:	0d 45       	mov	r5,	r13	;
    85b6:	1a 41 0a 00 	mov	10(r1),	r10	;
    85ba:	1b 41 0c 00 	mov	12(r1),	r11	;
    85be:	b0 12 82 8f 	call	#-28798	;#0x8f82
    85c2:	08 4c       	mov	r12,	r8	;
    85c4:	09 4d       	mov	r13,	r9	;
    85c6:	0a 43       	clr	r10		;
    85c8:	0b 43       	clr	r11		;
    85ca:	05 43       	clr	r5		;
    85cc:	4e 47       	mov.b	r7,	r14	;
    85ce:	0d 43       	clr	r13		;
    85d0:	3e b0 80 ff 	bit	#-128,	r14	;#0xff80
    85d4:	01 20       	jnz	$+4      	;abs 0x85d8
    85d6:	1d 43       	mov	#1,	r13	;r3 As==01
    85d8:	0d 93       	cmp	#0,	r13	;r3 As==00
    85da:	33 24       	jz	$+104    	;abs 0x8642
    85dc:	0d 43       	clr	r13		;
    85de:	0f 4e       	mov	r14,	r15	;
    85e0:	3f 50 d0 ff 	add	#-48,	r15	;#0xffd0
    85e4:	3f 90 0a 00 	cmp	#10,	r15	;#0x000a
    85e8:	01 2c       	jc	$+4      	;abs 0x85ec
    85ea:	1d 43       	mov	#1,	r13	;r3 As==01
    85ec:	0d 93       	cmp	#0,	r13	;r3 As==00
    85ee:	4e 24       	jz	$+158    	;abs 0x868c
    85f0:	77 50 d0 ff 	add.b	#-48,	r7	;#0xffd0
    85f4:	4d 47       	mov.b	r7,	r13	;
    85f6:	1d 91 04 00 	cmp	4(r1),	r13	;
    85fa:	23 34       	jge	$+72     	;abs 0x8642
    85fc:	05 93       	cmp	#0,	r5	;r3 As==00
    85fe:	1f 38       	jl	$+64     	;abs 0x863e
    8600:	0e 48       	mov	r8,	r14	;
    8602:	0f 49       	mov	r9,	r15	;
    8604:	0e 8a       	sub	r10,	r14	;
    8606:	0f 7b       	subc	r11,	r15	;
    8608:	1a 28       	jnc	$+54     	;abs 0x863e
    860a:	0a 98       	cmp	r8,	r10	;
    860c:	13 24       	jz	$+40     	;abs 0x8634
    860e:	15 43       	mov	#1,	r5	;r3 As==01
    8610:	1c 41 0a 00 	mov	10(r1),	r12	;
    8614:	1d 41 0c 00 	mov	12(r1),	r13	;
    8618:	02 12       	push	r2		;
    861a:	32 c2       	dint			
    861c:	b0 12 ac 8f 	call	#-28756	;#0x8fac
    8620:	32 41       	pop	r2		;
    8622:	0a 4e       	mov	r14,	r10	;
    8624:	0b 4f       	mov	r15,	r11	;
    8626:	4e 47       	mov.b	r7,	r14	;
    8628:	0f 43       	clr	r15		;
    862a:	0a 5e       	add	r14,	r10	;
    862c:	0b 6f       	addc	r15,	r11	;
    862e:	67 46       	mov.b	@r6,	r7	;
    8630:	16 53       	inc	r6		;
    8632:	cc 3f       	jmp	$-102    	;abs 0x85cc
    8634:	0b 99       	cmp	r9,	r11	;
    8636:	eb 23       	jnz	$-40     	;abs 0x860e
    8638:	81 9d 06 00 	cmp	r13,	6(r1)	;
    863c:	e8 37       	jge	$-46     	;abs 0x860e
    863e:	35 43       	mov	#-1,	r5	;r3 As==11
    8640:	f6 3f       	jmp	$-18     	;abs 0x862e
    8642:	05 93       	cmp	#0,	r5	;r3 As==00
    8644:	15 38       	jl	$+44     	;abs 0x8670
    8646:	81 93 08 00 	cmp	#0,	8(r1)	;r3 As==00
    864a:	04 24       	jz	$+10     	;abs 0x8654
    864c:	3a e3       	inv	r10		;
    864e:	3b e3       	inv	r11		;
    8650:	1a 53       	inc	r10		;
    8652:	0b 63       	adc	r11		;
    8654:	81 93 02 00 	cmp	#0,	2(r1)	;r3 As==00
    8658:	57 24       	jz	$+176    	;abs 0x8708
    865a:	05 93       	cmp	#0,	r5	;r3 As==00
    865c:	07 24       	jz	$+16     	;abs 0x866c
    865e:	0f 46       	mov	r6,	r15	;
    8660:	3f 53       	add	#-1,	r15	;r3 As==11
    8662:	1e 41 02 00 	mov	2(r1),	r14	;
    8666:	8e 4f 00 00 	mov	r15,	0(r14)	;
    866a:	4e 3c       	jmp	$+158    	;abs 0x8708
    866c:	2f 41       	mov	@r1,	r15	;
    866e:	f9 3f       	jmp	$-12     	;abs 0x8662
    8670:	81 93 08 00 	cmp	#0,	8(r1)	;r3 As==00
    8674:	07 24       	jz	$+16     	;abs 0x8684
    8676:	0a 43       	clr	r10		;
    8678:	3b 40 00 80 	mov	#-32768,r11	;#0x8000
    867c:	b2 40 22 00 	mov	#34,	&0x07d2	;#0x0022
    8680:	d2 07 
    8682:	e8 3f       	jmp	$-46     	;abs 0x8654
    8684:	3a 43       	mov	#-1,	r10	;r3 As==11
    8686:	3b 40 ff 7f 	mov	#32767,	r11	;#0x7fff
    868a:	f8 3f       	jmp	$-14     	;abs 0x867c
    868c:	0d 43       	clr	r13		;
    868e:	0f 4e       	mov	r14,	r15	;
    8690:	3f 50 bf ff 	add	#-65,	r15	;#0xffbf
    8694:	3f 90 1a 00 	cmp	#26,	r15	;#0x001a
    8698:	05 28       	jnc	$+12     	;abs 0x86a4
    869a:	3f 50 e0 ff 	add	#-32,	r15	;#0xffe0
    869e:	3f 90 1a 00 	cmp	#26,	r15	;#0x001a
    86a2:	01 2c       	jc	$+4      	;abs 0x86a6
    86a4:	1d 43       	mov	#1,	r13	;r3 As==01
    86a6:	0d 93       	cmp	#0,	r13	;r3 As==00
    86a8:	cc 27       	jz	$-102    	;abs 0x8642
    86aa:	0d 43       	clr	r13		;
    86ac:	0f 4e       	mov	r14,	r15	;
    86ae:	3f 50 bf ff 	add	#-65,	r15	;#0xffbf
    86b2:	3f 90 1a 00 	cmp	#26,	r15	;#0x001a
    86b6:	01 2c       	jc	$+4      	;abs 0x86ba
    86b8:	1d 43       	mov	#1,	r13	;r3 As==01
    86ba:	0d 93       	cmp	#0,	r13	;r3 As==00
    86bc:	04 24       	jz	$+10     	;abs 0x86c6
    86be:	7e 50 c9 ff 	add.b	#-55,	r14	;#0xffc9
    86c2:	47 4e       	mov.b	r14,	r7	;
    86c4:	97 3f       	jmp	$-208    	;abs 0x85f4
    86c6:	7e 50 a9 ff 	add.b	#-87,	r14	;#0xffa9
    86ca:	fb 3f       	jmp	$-8      	;abs 0x86c2
    86cc:	34 43       	mov	#-1,	r4	;r3 As==11
    86ce:	35 40 ff 7f 	mov	#32767,	r5	;#0x7fff
    86d2:	57 3f       	jmp	$-336    	;abs 0x8582
    86d4:	b1 42 04 00 	mov	#8,	4(r1)	;r2 As==11
    86d8:	4e 3f       	jmp	$-354    	;abs 0x8576
    86da:	77 90 30 00 	cmp.b	#48,	r7	;#0x0030
    86de:	42 23       	jnz	$-378    	;abs 0x8564
    86e0:	6f 46       	mov.b	@r6,	r15	;
    86e2:	7f 90 78 00 	cmp.b	#120,	r15	;#0x0078
    86e6:	03 24       	jz	$+8      	;abs 0x86ee
    86e8:	7f 90 58 00 	cmp.b	#88,	r15	;#0x0058
    86ec:	3b 23       	jnz	$-392    	;abs 0x8564
    86ee:	57 46 01 00 	mov.b	1(r6),	r7	;
    86f2:	26 53       	incd	r6		;
    86f4:	b1 40 10 00 	mov	#16,	4(r1)	;#0x0010
    86f8:	04 00 
    86fa:	34 3f       	jmp	$-406    	;abs 0x8564
    86fc:	67 46       	mov.b	@r6,	r7	;
    86fe:	16 53       	inc	r6		;
    8700:	2a 3f       	jmp	$-426    	;abs 0x8556
    8702:	91 43 08 00 	mov	#1,	8(r1)	;r3 As==01
    8706:	fa 3f       	jmp	$-10     	;abs 0x86fc
    8708:	0e 4a       	mov	r10,	r14	;
    870a:	0f 4b       	mov	r11,	r15	;
    870c:	31 50 0e 00 	add	#14,	r1	;#0x000e
    8710:	34 41       	pop	r4		;
    8712:	35 41       	pop	r5		;
    8714:	36 41       	pop	r6		;
    8716:	37 41       	pop	r7		;
    8718:	38 41       	pop	r8		;
    871a:	39 41       	pop	r9		;
    871c:	3a 41       	pop	r10		;
    871e:	3b 41       	pop	r11		;
    8720:	30 41       	ret			

00008722 <printf>:
    8722:	2f 43       	mov	#2,	r15	;r3 As==10
    8724:	0f 51       	add	r1,	r15	;
    8726:	3e 4f       	mov	@r15+,	r14	;
    8728:	0d 4f       	mov	r15,	r13	;
    872a:	3f 40 14 15 	mov	#5396,	r15	;#0x1514
    872e:	b0 12 98 87 	call	#-30824	;#0x8798
    8732:	30 41       	ret			

00008734 <PRINT>:
    8734:	0b 12       	push	r11		;
    8736:	0a 12       	push	r10		;
    8738:	0a 4f       	mov	r15,	r10	;
    873a:	0b 4e       	mov	r14,	r11	;
    873c:	0e 93       	cmp	#0,	r14	;r3 As==00
    873e:	02 20       	jnz	$+6      	;abs 0x8744
    8740:	1f 43       	mov	#1,	r15	;r3 As==01
    8742:	0d 3c       	jmp	$+28     	;abs 0x875e
    8744:	6f 4a       	mov.b	@r10,	r15	;
    8746:	8f 11       	sxt	r15		;
    8748:	1a 53       	inc	r10		;
    874a:	92 12 64 02 	call	&0x0264		;
    874e:	0f 93       	cmp	#0,	r15	;r3 As==00
    8750:	05 38       	jl	$+12     	;abs 0x875c
    8752:	92 53 62 02 	inc	&0x0262		;
    8756:	3b 53       	add	#-1,	r11	;r3 As==11
    8758:	f5 23       	jnz	$-20     	;abs 0x8744
    875a:	f2 3f       	jmp	$-26     	;abs 0x8740
    875c:	3f 43       	mov	#-1,	r15	;r3 As==11
    875e:	3a 41       	pop	r10		;
    8760:	3b 41       	pop	r11		;
    8762:	30 41       	ret			

00008764 <__write_pad>:
    8764:	0b 12       	push	r11		;
    8766:	0a 12       	push	r10		;
    8768:	09 12       	push	r9		;
    876a:	49 4f       	mov.b	r15,	r9	;
    876c:	4b 4e       	mov.b	r14,	r11	;
    876e:	5e 93       	cmp.b	#1,	r14	;r3 As==01
    8770:	0c 38       	jl	$+26     	;abs 0x878a
    8772:	4a 4f       	mov.b	r15,	r10	;
    8774:	8a 11       	sxt	r10		;
    8776:	0f 4a       	mov	r10,	r15	;
    8778:	92 12 64 02 	call	&0x0264		;
    877c:	0f 93       	cmp	#0,	r15	;r3 As==00
    877e:	07 38       	jl	$+16     	;abs 0x878e
    8780:	92 53 62 02 	inc	&0x0262		;
    8784:	7b 53       	add.b	#-1,	r11	;r3 As==11
    8786:	5b 93       	cmp.b	#1,	r11	;r3 As==01
    8788:	f6 37       	jge	$-18     	;abs 0x8776
    878a:	4f 49       	mov.b	r9,	r15	;
    878c:	01 3c       	jmp	$+4      	;abs 0x8790
    878e:	3f 43       	mov	#-1,	r15	;r3 As==11
    8790:	39 41       	pop	r9		;
    8792:	3a 41       	pop	r10		;
    8794:	3b 41       	pop	r11		;
    8796:	30 41       	ret			

00008798 <vuprintf>:
    8798:	0b 12       	push	r11		;
    879a:	0a 12       	push	r10		;
    879c:	09 12       	push	r9		;
    879e:	08 12       	push	r8		;
    87a0:	07 12       	push	r7		;
    87a2:	06 12       	push	r6		;
    87a4:	05 12       	push	r5		;
    87a6:	04 12       	push	r4		;
    87a8:	31 80 3c 00 	sub	#60,	r1	;#0x003c
    87ac:	05 4d       	mov	r13,	r5	;
    87ae:	81 43 30 00 	mov	#0,	48(r1)	;r3 As==00
    87b2:	81 43 32 00 	mov	#0,	50(r1)	;r3 As==00
    87b6:	82 43 62 02 	mov	#0,	&0x0262	;r3 As==00
    87ba:	82 4f 64 02 	mov	r15,	&0x0264	;
    87be:	06 4e       	mov	r14,	r6	;
    87c0:	0f 46       	mov	r6,	r15	;
    87c2:	67 46       	mov.b	@r6,	r7	;
    87c4:	47 93       	cmp.b	#0,	r7	;r3 As==00
    87c6:	0a 24       	jz	$+22     	;abs 0x87dc
    87c8:	77 90 25 00 	cmp.b	#37,	r7	;#0x0025
    87cc:	07 24       	jz	$+16     	;abs 0x87dc
    87ce:	16 53       	inc	r6		;
    87d0:	67 46       	mov.b	@r6,	r7	;
    87d2:	47 93       	cmp.b	#0,	r7	;r3 As==00
    87d4:	03 24       	jz	$+8      	;abs 0x87dc
    87d6:	77 90 25 00 	cmp.b	#37,	r7	;#0x0025
    87da:	f9 23       	jnz	$-12     	;abs 0x87ce
    87dc:	0d 46       	mov	r6,	r13	;
    87de:	0d 8f       	sub	r15,	r13	;
    87e0:	02 24       	jz	$+6      	;abs 0x87e6
    87e2:	30 40 30 8d 	br	#0x8d30		;
    87e6:	47 93       	cmp.b	#0,	r7	;r3 As==00
    87e8:	02 20       	jnz	$+6      	;abs 0x87ee
    87ea:	30 40 3e 8d 	br	#0x8d3e		;
    87ee:	16 53       	inc	r6		;
    87f0:	c1 43 2e 00 	mov.b	#0,	46(r1)	;r3 As==00
    87f4:	c1 43 35 00 	mov.b	#0,	53(r1)	;r3 As==00
    87f8:	c1 43 2f 00 	mov.b	#0,	47(r1)	;r3 As==00

    87fc:	7b 43       	mov.b	#-1,	r11	;r3 As==11

    87fe:	c1 43 28 00 	mov.b	#0,	40(r1)	;r3 As==00

/* lla.c ends here */
    8802:	67 46       	mov.b	@r6,	r7	;
    8804:	16 53       	inc	r6		;
    8806:	77 90 75 00 	cmp.b	#117,	r7	;#0x0075
    880a:	02 20       	jnz	$+6      	;abs 0x8810
    880c:	30 40 0a 8d 	br	#0x8d0a		;
    8810:	4f 47       	mov.b	r7,	r15	;
    8812:	7f d0 20 00 	bis.b	#32,	r15	;#0x0020
    8816:	7f 90 78 00 	cmp.b	#120,	r15	;#0x0078
    881a:	02 20       	jnz	$+6      	;abs 0x8820
    881c:	30 40 0a 8d 	br	#0x8d0a		;
    8820:	77 90 20 00 	cmp.b	#32,	r7	;#0x0020
    8824:	02 20       	jnz	$+6      	;abs 0x882a
    8826:	30 40 f6 8c 	br	#0x8cf6		;
    882a:	77 90 23 00 	cmp.b	#35,	r7	;#0x0023
    882e:	02 20       	jnz	$+6      	;abs 0x8834
    8830:	30 40 ee 8c 	br	#0x8cee		;
    8834:	77 90 2a 00 	cmp.b	#42,	r7	;#0x002a
    8838:	02 20       	jnz	$+6      	;abs 0x883e
    883a:	30 40 d2 8c 	br	#0x8cd2		;
    883e:	77 90 2d 00 	cmp.b	#45,	r7	;#0x002d
    8842:	02 20       	jnz	$+6      	;abs 0x8848
    8844:	30 40 c2 8c 	br	#0x8cc2		;
    8848:	77 90 2b 00 	cmp.b	#43,	r7	;#0x002b
    884c:	02 20       	jnz	$+6      	;abs 0x8852
    884e:	30 40 b8 8c 	br	#0x8cb8		;
    8852:	77 90 2e 00 	cmp.b	#46,	r7	;#0x002e
    8856:	02 20       	jnz	$+6      	;abs 0x885c
    8858:	30 40 52 8c 	br	#0x8c52		;
    885c:	77 90 30 00 	cmp.b	#48,	r7	;#0x0030
    8860:	02 20       	jnz	$+6      	;abs 0x8866
    8862:	30 40 3c 8c 	br	#0x8c3c		;
    8866:	4f 47       	mov.b	r7,	r15	;
    8868:	7f 50 cf ff 	add.b	#-49,	r15	;#0xffcf
    886c:	7f 90 09 00 	cmp.b	#9,	r15	;#0x0009
    8870:	1a 2c       	jc	$+54     	;abs 0x88a6
    8872:	0d 43       	clr	r13		;
    8874:	0f 4d       	mov	r13,	r15	;
    8876:	0f 5f       	rla	r15		;
    8878:	0f 5f       	rla	r15		;
    887a:	0e 4d       	mov	r13,	r14	;
    887c:	0e 5e       	rla	r14		;
    887e:	0d 4f       	mov	r15,	r13	;
    8880:	0d 5e       	add	r14,	r13	;
    8882:	0d 5e       	add	r14,	r13	;
    8884:	0d 5e       	add	r14,	r13	;
    8886:	4f 47       	mov.b	r7,	r15	;
    8888:	8f 11       	sxt	r15		;
    888a:	0d 5f       	add	r15,	r13	;
    888c:	3d 50 d0 ff 	add	#-48,	r13	;#0xffd0
    8890:	67 46       	mov.b	@r6,	r7	;
    8892:	16 53       	inc	r6		;
    8894:	4f 47       	mov.b	r7,	r15	;
    8896:	7f 50 d0 ff 	add.b	#-48,	r15	;#0xffd0
    889a:	7f 90 0a 00 	cmp.b	#10,	r15	;#0x000a
    889e:	ea 2b       	jnc	$-42     	;abs 0x8874
    88a0:	c1 4d 2f 00 	mov.b	r13,	47(r1)	;
    88a4:	b0 3f       	jmp	$-158    	;abs 0x8806
    88a6:	77 90 68 00 	cmp.b	#104,	r7	;#0x0068
    88aa:	c4 25       	jz	$+906    	;abs 0x8c34
    88ac:	77 90 6c 00 	cmp.b	#108,	r7	;#0x006c
    88b0:	03 20       	jnz	$+8      	;abs 0x88b8
    88b2:	d1 d3 2e 00 	bis.b	#1,	46(r1)	;r3 As==01
    88b6:	a5 3f       	jmp	$-180    	;abs 0x8802
    88b8:	77 90 63 00 	cmp.b	#99,	r7	;#0x0063
    88bc:	b4 25       	jz	$+874    	;abs 0x8c26
    88be:	77 90 44 00 	cmp.b	#68,	r7	;#0x0044
    88c2:	ae 25       	jz	$+862    	;abs 0x8c20
    88c4:	77 90 64 00 	cmp.b	#100,	r7	;#0x0064
    88c8:	7f 25       	jz	$+768    	;abs 0x8bc8
    88ca:	77 90 69 00 	cmp.b	#105,	r7	;#0x0069
    88ce:	7c 25       	jz	$+762    	;abs 0x8bc8
    88d0:	77 90 4f 00 	cmp.b	#79,	r7	;#0x004f
    88d4:	76 25       	jz	$+750    	;abs 0x8bc2
    88d6:	77 90 6f 00 	cmp.b	#111,	r7	;#0x006f
    88da:	70 25       	jz	$+738    	;abs 0x8bbc
    88dc:	77 90 70 00 	cmp.b	#112,	r7	;#0x0070
    88e0:	5e 25       	jz	$+702    	;abs 0x8b9e
    88e2:	77 90 73 00 	cmp.b	#115,	r7	;#0x0073
    88e6:	1f 25       	jz	$+576    	;abs 0x8b26
    88e8:	77 90 55 00 	cmp.b	#85,	r7	;#0x0055
    88ec:	19 25       	jz	$+564    	;abs 0x8b20
    88ee:	77 90 75 00 	cmp.b	#117,	r7	;#0x0075
    88f2:	12 25       	jz	$+550    	;abs 0x8b18
    88f4:	77 90 58 00 	cmp.b	#88,	r7	;#0x0058
    88f8:	8f 24       	jz	$+288    	;abs 0x8a18
    88fa:	77 90 78 00 	cmp.b	#120,	r7	;#0x0078
    88fe:	8c 24       	jz	$+282    	;abs 0x8a18
    8900:	47 93       	cmp.b	#0,	r7	;r3 As==00
    8902:	02 20       	jnz	$+6      	;abs 0x8908
    8904:	30 40 3e 8d 	br	#0x8d3e		;
    8908:	81 41 2c 00 	mov	r1,	44(r1)	;
    890c:	c1 47 00 00 	mov.b	r7,	0(r1)	;
    8910:	59 43       	mov.b	#1,	r9	;r3 As==01
    8912:	c1 43 28 00 	mov.b	#0,	40(r1)	;r3 As==00
    8916:	4b 49       	mov.b	r9,	r11	;
    8918:	5a 41 35 00 	mov.b	53(r1),	r10	;
    891c:	4a 89       	sub.b	r9,	r10	;
    891e:	7a 30       	jn	$+246    	;abs 0x8a14
    8920:	5e 41 28 00 	mov.b	40(r1),	r14	;
    8924:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    8926:	70 24       	jz	$+226    	;abs 0x8a08
    8928:	5b 53       	inc.b	r11		;
    892a:	4b 5a       	add.b	r10,	r11	;
    892c:	58 41 2e 00 	mov.b	46(r1),	r8	;
    8930:	78 f0 30 00 	and.b	#48,	r8	;#0x0030
    8934:	13 20       	jnz	$+40     	;abs 0x895c
    8936:	5d 41 2f 00 	mov.b	47(r1),	r13	;
    893a:	8d 11       	sxt	r13		;
    893c:	4f 4b       	mov.b	r11,	r15	;
    893e:	8f 11       	sxt	r15		;
    8940:	0d 8f       	sub	r15,	r13	;
    8942:	1d 93       	cmp	#1,	r13	;r3 As==01
    8944:	0b 38       	jl	$+24     	;abs 0x895c
    8946:	4e 4d       	mov.b	r13,	r14	;
    8948:	7f 40 20 00 	mov.b	#32,	r15	;#0x0020
    894c:	b0 12 64 87 	call	#-30876	;#0x8764
    8950:	0f 93       	cmp	#0,	r15	;r3 As==00
    8952:	02 34       	jge	$+6      	;abs 0x8958
    8954:	30 40 3e 8d 	br	#0x8d3e		;
    8958:	5e 41 28 00 	mov.b	40(r1),	r14	;
    895c:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    895e:	4f 20       	jnz	$+160    	;abs 0x89fe
    8960:	f1 b0 40 00 	bit.b	#64,	46(r1)	;#0x0040
    8964:	2e 00 
    8966:	14 24       	jz	$+42     	;abs 0x8990
    8968:	1f 41 2a 00 	mov	42(r1),	r15	;
    896c:	3f f0 00 ff 	and	#-256,	r15	;#0xff00
    8970:	3f d0 30 00 	bis	#48,	r15	;#0x0030
    8974:	81 4f 2a 00 	mov	r15,	42(r1)	;
    8978:	c1 47 2b 00 	mov.b	r7,	43(r1)	;
    897c:	2e 43       	mov	#2,	r14	;r3 As==10
    897e:	0f 41       	mov	r1,	r15	;
    8980:	3f 50 2a 00 	add	#42,	r15	;#0x002a
    8984:	b0 12 34 87 	call	#-30924	;#0x8734
    8988:	0f 93       	cmp	#0,	r15	;r3 As==00
    898a:	02 34       	jge	$+6      	;abs 0x8990
    898c:	30 40 3e 8d 	br	#0x8d3e		;
    8990:	78 90 20 00 	cmp.b	#32,	r8	;#0x0020
    8994:	24 24       	jz	$+74     	;abs 0x89de
    8996:	4e 4a       	mov.b	r10,	r14	;
    8998:	7f 40 30 00 	mov.b	#48,	r15	;#0x0030
    899c:	b0 12 64 87 	call	#-30876	;#0x8764
    89a0:	0f 93       	cmp	#0,	r15	;r3 As==00
    89a2:	cd 39       	jl	$+924    	;abs 0x8d3e
    89a4:	4f 49       	mov.b	r9,	r15	;
    89a6:	8f 11       	sxt	r15		;
    89a8:	0e 4f       	mov	r15,	r14	;
    89aa:	1f 41 2c 00 	mov	44(r1),	r15	;
    89ae:	b0 12 34 87 	call	#-30924	;#0x8734
    89b2:	0f 93       	cmp	#0,	r15	;r3 As==00
    89b4:	c4 39       	jl	$+906    	;abs 0x8d3e
    89b6:	f1 b0 10 00 	bit.b	#16,	46(r1)	;#0x0010
    89ba:	2e 00 
    89bc:	01 27       	jz	$-508    	;abs 0x87c0
    89be:	5d 41 2f 00 	mov.b	47(r1),	r13	;
    89c2:	8d 11       	sxt	r13		;
    89c4:	4f 4b       	mov.b	r11,	r15	;
    89c6:	8f 11       	sxt	r15		;
    89c8:	0d 8f       	sub	r15,	r13	;
    89ca:	1d 93       	cmp	#1,	r13	;r3 As==01
    89cc:	f9 3a       	jl	$-524    	;abs 0x87c0
    89ce:	4e 4d       	mov.b	r13,	r14	;
    89d0:	7f 40 20 00 	mov.b	#32,	r15	;#0x0020
    89d4:	b0 12 64 87 	call	#-30876	;#0x8764
    89d8:	0f 93       	cmp	#0,	r15	;r3 As==00
    89da:	f2 36       	jge	$-538    	;abs 0x87c0
    89dc:	b0 3d       	jmp	$+866    	;abs 0x8d3e
    89de:	5d 41 2f 00 	mov.b	47(r1),	r13	;
    89e2:	8d 11       	sxt	r13		;
    89e4:	4f 4b       	mov.b	r11,	r15	;
    89e6:	8f 11       	sxt	r15		;
    89e8:	0d 8f       	sub	r15,	r13	;
    89ea:	1d 93       	cmp	#1,	r13	;r3 As==01
    89ec:	d4 3b       	jl	$-86     	;abs 0x8996
    89ee:	4e 4d       	mov.b	r13,	r14	;
    89f0:	7f 40 30 00 	mov.b	#48,	r15	;#0x0030
    89f4:	b0 12 64 87 	call	#-30876	;#0x8764
    89f8:	0f 93       	cmp	#0,	r15	;r3 As==00
    89fa:	cd 37       	jge	$-100    	;abs 0x8996
    89fc:	a0 3d       	jmp	$+834    	;abs 0x8d3e
    89fe:	1e 43       	mov	#1,	r14	;r3 As==01
    8a00:	0f 41       	mov	r1,	r15	;
    8a02:	3f 50 28 00 	add	#40,	r15	;#0x0028
    8a06:	be 3f       	jmp	$-130    	;abs 0x8984
    8a08:	f1 b0 40 00 	bit.b	#64,	46(r1)	;#0x0040
    8a0c:	2e 00 
    8a0e:	8d 27       	jz	$-228    	;abs 0x892a
    8a10:	6b 53       	incd.b	r11		;
    8a12:	8b 3f       	jmp	$-232    	;abs 0x892a
    8a14:	4a 43       	clr.b	r10		;
    8a16:	84 3f       	jmp	$-246    	;abs 0x8920
    8a18:	f1 40 10 00 	mov.b	#16,	52(r1)	;#0x0010
    8a1c:	34 00 
    8a1e:	f1 b2 2e 00 	bit.b	#8,	46(r1)	;r2 As==11
    8a22:	09 24       	jz	$+20     	;abs 0x8a36
    8a24:	81 93 30 00 	cmp	#0,	48(r1)	;r3 As==00
    8a28:	03 20       	jnz	$+8      	;abs 0x8a30
    8a2a:	81 93 32 00 	cmp	#0,	50(r1)	;r3 As==00
    8a2e:	03 24       	jz	$+8      	;abs 0x8a36
    8a30:	f1 d0 40 00 	bis.b	#64,	46(r1)	;#0x0040
    8a34:	2e 00 
    8a36:	c1 43 28 00 	mov.b	#0,	40(r1)	;r3 As==00
    8a3a:	c1 4b 35 00 	mov.b	r11,	53(r1)	;
    8a3e:	4b 93       	cmp.b	#0,	r11	;r3 As==00
    8a40:	03 38       	jl	$+8      	;abs 0x8a48
    8a42:	f1 f0 df ff 	and.b	#-33,	46(r1)	;#0xffdf
    8a46:	2e 00 
    8a48:	0f 41       	mov	r1,	r15	;
    8a4a:	3f 50 28 00 	add	#40,	r15	;#0x0028
    8a4e:	81 4f 2c 00 	mov	r15,	44(r1)	;
    8a52:	81 93 30 00 	cmp	#0,	48(r1)	;r3 As==00
    8a56:	06 20       	jnz	$+14     	;abs 0x8a64
    8a58:	81 93 32 00 	cmp	#0,	50(r1)	;r3 As==00
    8a5c:	03 20       	jnz	$+8      	;abs 0x8a64
    8a5e:	c1 93 35 00 	cmp.b	#0,	53(r1)	;r3 As==00
    8a62:	3e 24       	jz	$+126    	;abs 0x8ae0
    8a64:	d1 41 34 00 	mov.b	52(r1),	56(r1)	;
    8a68:	38 00 
    8a6a:	c1 43 39 00 	mov.b	#0,	57(r1)	;r3 As==00
    8a6e:	81 43 3a 00 	mov	#0,	58(r1)	;r3 As==00
    8a72:	c1 43 36 00 	mov.b	#0,	54(r1)	;r3 As==00
    8a76:	1e 41 30 00 	mov	48(r1),	r14	;
    8a7a:	1f 41 32 00 	mov	50(r1),	r15	;
    8a7e:	1e 81 38 00 	sub	56(r1),	r14	;
    8a82:	1f 71 3a 00 	subc	58(r1),	r15	;
    8a86:	02 28       	jnc	$+6      	;abs 0x8a8c
    8a88:	d1 43 36 00 	mov.b	#1,	54(r1)	;r3 As==01
    8a8c:	1c 41 30 00 	mov	48(r1),	r12	;
    8a90:	1d 41 32 00 	mov	50(r1),	r13	;
    8a94:	1a 41 38 00 	mov	56(r1),	r10	;
    8a98:	1b 41 3a 00 	mov	58(r1),	r11	;
    8a9c:	b0 12 82 8f 	call	#-28798	;#0x8f82
    8aa0:	44 4e       	mov.b	r14,	r4	;
    8aa2:	7e 90 0a 00 	cmp.b	#10,	r14	;#0x000a
    8aa6:	30 2c       	jc	$+98     	;abs 0x8b08
    8aa8:	74 50 30 00 	add.b	#48,	r4	;#0x0030
    8aac:	b1 53 2c 00 	add	#-1,	44(r1)	;r3 As==11
    8ab0:	1f 41 2c 00 	mov	44(r1),	r15	;
    8ab4:	cf 44 00 00 	mov.b	r4,	0(r15)	;
    8ab8:	1c 41 30 00 	mov	48(r1),	r12	;
    8abc:	1d 41 32 00 	mov	50(r1),	r13	;
    8ac0:	1a 41 38 00 	mov	56(r1),	r10	;
    8ac4:	1b 41 3a 00 	mov	58(r1),	r11	;
    8ac8:	b0 12 82 8f 	call	#-28798	;#0x8f82
    8acc:	81 4c 30 00 	mov	r12,	48(r1)	;
    8ad0:	81 4d 32 00 	mov	r13,	50(r1)	;
    8ad4:	c1 93 36 00 	cmp.b	#0,	54(r1)	;r3 As==00
    8ad8:	cc 23       	jnz	$-102    	;abs 0x8a72
    8ada:	f1 92 34 00 	cmp.b	#8,	52(r1)	;r2 As==11
    8ade:	06 24       	jz	$+14     	;abs 0x8aec
    8ae0:	49 41       	mov.b	r1,	r9	;
    8ae2:	59 81 2c 00 	sub.b	44(r1),	r9	;
    8ae6:	79 50 28 00 	add.b	#40,	r9	;#0x0028
    8aea:	15 3f       	jmp	$-468    	;abs 0x8916
    8aec:	f1 b2 2e 00 	bit.b	#8,	46(r1)	;r2 As==11
    8af0:	f7 27       	jz	$-16     	;abs 0x8ae0
    8af2:	74 90 30 00 	cmp.b	#48,	r4	;#0x0030
    8af6:	f4 27       	jz	$-22     	;abs 0x8ae0
    8af8:	b1 53 2c 00 	add	#-1,	44(r1)	;r3 As==11
    8afc:	1f 41 2c 00 	mov	44(r1),	r15	;
    8b00:	ff 40 30 00 	mov.b	#48,	0(r15)	;#0x0030
    8b04:	00 00 
    8b06:	ec 3f       	jmp	$-38     	;abs 0x8ae0
    8b08:	74 50 57 00 	add.b	#87,	r4	;#0x0057
    8b0c:	77 90 58 00 	cmp.b	#88,	r7	;#0x0058
    8b10:	cd 23       	jnz	$-100    	;abs 0x8aac
    8b12:	74 f0 df ff 	and.b	#-33,	r4	;#0xffdf
    8b16:	ca 3f       	jmp	$-106    	;abs 0x8aac
    8b18:	f1 40 0a 00 	mov.b	#10,	52(r1)	;#0x000a
    8b1c:	34 00 
    8b1e:	8b 3f       	jmp	$-232    	;abs 0x8a36
    8b20:	d1 d3 2e 00 	bis.b	#1,	46(r1)	;r3 As==01
    8b24:	f9 3f       	jmp	$-12     	;abs 0x8b18
    8b26:	0f 45       	mov	r5,	r15	;
    8b28:	25 53       	incd	r5		;
    8b2a:	a1 4f 2c 00 	mov	@r15,	44(r1)	;
    8b2e:	81 93 2c 00 	cmp	#0,	44(r1)	;r3 As==00
    8b32:	1e 24       	jz	$+62     	;abs 0x8b70
    8b34:	4b 93       	cmp.b	#0,	r11	;r3 As==00
    8b36:	11 38       	jl	$+36     	;abs 0x8b5a
    8b38:	4f 4b       	mov.b	r11,	r15	;
    8b3a:	8f 11       	sxt	r15		;
    8b3c:	0d 4f       	mov	r15,	r13	;
    8b3e:	0e 43       	clr	r14		;
    8b40:	1f 41 2c 00 	mov	44(r1),	r15	;
    8b44:	b0 12 a0 8d 	call	#-29280	;#0x8da0
    8b48:	0f 93       	cmp	#0,	r15	;r3 As==00
    8b4a:	05 24       	jz	$+12     	;abs 0x8b56
    8b4c:	49 4f       	mov.b	r15,	r9	;
    8b4e:	59 81 2c 00 	sub.b	44(r1),	r9	;
    8b52:	4b 99       	cmp.b	r9,	r11	;
    8b54:	de 36       	jge	$-578    	;abs 0x8912
    8b56:	49 4b       	mov.b	r11,	r9	;
    8b58:	dc 3e       	jmp	$-582    	;abs 0x8912
    8b5a:	1f 41 2c 00 	mov	44(r1),	r15	;
    8b5e:	1f 83       	dec	r15		;
    8b60:	1f 53       	inc	r15		;
    8b62:	cf 93 00 00 	cmp.b	#0,	0(r15)	;r3 As==00
    8b66:	fc 23       	jnz	$-6      	;abs 0x8b60
    8b68:	49 4f       	mov.b	r15,	r9	;
    8b6a:	59 81 2c 00 	sub.b	44(r1),	r9	;
    8b6e:	d1 3e       	jmp	$-604    	;abs 0x8912
    8b70:	81 41 2c 00 	mov	r1,	44(r1)	;
    8b74:	f1 40 28 00 	mov.b	#40,	0(r1)	;#0x0028
    8b78:	00 00 
    8b7a:	f1 40 6e 00 	mov.b	#110,	1(r1)	;#0x006e
    8b7e:	01 00 
    8b80:	f1 40 75 00 	mov.b	#117,	2(r1)	;#0x0075
    8b84:	02 00 
    8b86:	f1 40 6c 00 	mov.b	#108,	3(r1)	;#0x006c
    8b8a:	03 00 
    8b8c:	f1 40 6c 00 	mov.b	#108,	4(r1)	;#0x006c
    8b90:	04 00 
    8b92:	f1 40 29 00 	mov.b	#41,	5(r1)	;#0x0029
    8b96:	05 00 
    8b98:	c1 43 06 00 	mov.b	#0,	6(r1)	;r3 As==00
    8b9c:	cb 3f       	jmp	$-104    	;abs 0x8b34
    8b9e:	0f 45       	mov	r5,	r15	;
    8ba0:	25 53       	incd	r5		;
    8ba2:	a1 4f 30 00 	mov	@r15,	48(r1)	;
    8ba6:	81 43 32 00 	mov	#0,	50(r1)	;r3 As==00
    8baa:	f1 40 10 00 	mov.b	#16,	52(r1)	;#0x0010
    8bae:	34 00 
    8bb0:	f1 d0 40 00 	bis.b	#64,	46(r1)	;#0x0040
    8bb4:	2e 00 
    8bb6:	77 40 78 00 	mov.b	#120,	r7	;#0x0078
    8bba:	3d 3f       	jmp	$-388    	;abs 0x8a36
    8bbc:	f1 42 34 00 	mov.b	#8,	52(r1)	;r2 As==11
    8bc0:	3a 3f       	jmp	$-394    	;abs 0x8a36
    8bc2:	d1 d3 2e 00 	bis.b	#1,	46(r1)	;r3 As==01
    8bc6:	fa 3f       	jmp	$-10     	;abs 0x8bbc
    8bc8:	d1 b3 2e 00 	bit.b	#1,	46(r1)	;r3 As==01
    8bcc:	19 24       	jz	$+52     	;abs 0x8c00
    8bce:	0f 45       	mov	r5,	r15	;
    8bd0:	25 52       	add	#4,	r5	;r2 As==10
    8bd2:	b1 4f 30 00 	mov	@r15+,	48(r1)	;
    8bd6:	b1 4f 32 00 	mov	@r15+,	50(r1)	;
    8bda:	81 93 32 00 	cmp	#0,	50(r1)	;r3 As==00
    8bde:	04 38       	jl	$+10     	;abs 0x8be8
    8be0:	f1 40 0a 00 	mov.b	#10,	52(r1)	;#0x000a
    8be4:	34 00 
    8be6:	29 3f       	jmp	$-428    	;abs 0x8a3a
    8be8:	b1 e3 30 00 	xor	#-1,	48(r1)	;r3 As==11
    8bec:	b1 e3 32 00 	xor	#-1,	50(r1)	;r3 As==11
    8bf0:	91 53 30 00 	inc	48(r1)		;
    8bf4:	81 63 32 00 	adc	50(r1)		;
    8bf8:	f1 40 2d 00 	mov.b	#45,	40(r1)	;#0x002d
    8bfc:	28 00 
    8bfe:	f0 3f       	jmp	$-30     	;abs 0x8be0
    8c00:	0f 45       	mov	r5,	r15	;
    8c02:	25 53       	incd	r5		;
    8c04:	a1 4f 30 00 	mov	@r15,	48(r1)	;
    8c08:	91 41 30 00 	mov	48(r1),	50(r1)	;
    8c0c:	32 00 
    8c0e:	91 51 32 00 	rla	50(r1)		;
    8c12:	32 00 
    8c14:	91 71 32 00 	subc	50(r1),	50(r1)	;
    8c18:	32 00 
    8c1a:	b1 e3 32 00 	xor	#-1,	50(r1)	;r3 As==11
    8c1e:	dd 3f       	jmp	$-68     	;abs 0x8bda
    8c20:	d1 d3 2e 00 	bis.b	#1,	46(r1)	;r3 As==01
    8c24:	d1 3f       	jmp	$-92     	;abs 0x8bc8
    8c26:	81 41 2c 00 	mov	r1,	44(r1)	;
    8c2a:	0f 45       	mov	r5,	r15	;
    8c2c:	25 53       	incd	r5		;
    8c2e:	e1 4f 00 00 	mov.b	@r15,	0(r1)	;
    8c32:	6e 3e       	jmp	$-802    	;abs 0x8910
    8c34:	e1 d2 2e 00 	bis.b	#4,	46(r1)	;r2 As==10
    8c38:	30 40 02 88 	br	#0x8802		;
    8c3c:	f1 b0 10 00 	bit.b	#16,	46(r1)	;#0x0010
    8c40:	2e 00 
    8c42:	02 24       	jz	$+6      	;abs 0x8c48
    8c44:	30 40 02 88 	br	#0x8802		;
    8c48:	f1 d0 20 00 	bis.b	#32,	46(r1)	;#0x0020
    8c4c:	2e 00 
    8c4e:	30 40 02 88 	br	#0x8802		;
    8c52:	67 46       	mov.b	@r6,	r7	;
    8c54:	16 53       	inc	r6		;
    8c56:	77 90 2a 00 	cmp.b	#42,	r7	;#0x002a
    8c5a:	24 24       	jz	$+74     	;abs 0x8ca4
    8c5c:	0d 43       	clr	r13		;
    8c5e:	4f 47       	mov.b	r7,	r15	;
    8c60:	7f 50 d0 ff 	add.b	#-48,	r15	;#0xffd0
    8c64:	7f 90 0a 00 	cmp.b	#10,	r15	;#0x000a
    8c68:	16 2c       	jc	$+46     	;abs 0x8c96
    8c6a:	0f 4d       	mov	r13,	r15	;
    8c6c:	0f 5f       	rla	r15		;
    8c6e:	0f 5f       	rla	r15		;
    8c70:	0e 4d       	mov	r13,	r14	;
    8c72:	0e 5e       	rla	r14		;
    8c74:	0d 4f       	mov	r15,	r13	;
    8c76:	0d 5e       	add	r14,	r13	;
    8c78:	0d 5e       	add	r14,	r13	;
    8c7a:	0d 5e       	add	r14,	r13	;
    8c7c:	4f 47       	mov.b	r7,	r15	;
    8c7e:	8f 11       	sxt	r15		;
    8c80:	0d 5f       	add	r15,	r13	;
    8c82:	3d 50 d0 ff 	add	#-48,	r13	;#0xffd0
    8c86:	67 46       	mov.b	@r6,	r7	;
    8c88:	16 53       	inc	r6		;
    8c8a:	4f 47       	mov.b	r7,	r15	;
    8c8c:	7f 50 d0 ff 	add.b	#-48,	r15	;#0xffd0
    8c90:	7f 90 0a 00 	cmp.b	#10,	r15	;#0x000a
    8c94:	ea 2b       	jnc	$-42     	;abs 0x8c6a
    8c96:	0f 4d       	mov	r13,	r15	;
    8c98:	3d 93       	cmp	#-1,	r13	;r3 As==11
    8c9a:	01 34       	jge	$+4      	;abs 0x8c9e
    8c9c:	3f 43       	mov	#-1,	r15	;r3 As==11
    8c9e:	4b 4f       	mov.b	r15,	r11	;
    8ca0:	30 40 06 88 	br	#0x8806		;
    8ca4:	0f 45       	mov	r5,	r15	;
    8ca6:	25 53       	incd	r5		;
    8ca8:	2d 4f       	mov	@r15,	r13	;
    8caa:	0f 4d       	mov	r13,	r15	;
    8cac:	3d 93       	cmp	#-1,	r13	;r3 As==11
    8cae:	01 34       	jge	$+4      	;abs 0x8cb2
    8cb0:	3f 43       	mov	#-1,	r15	;r3 As==11
    8cb2:	4b 4f       	mov.b	r15,	r11	;
    8cb4:	30 40 02 88 	br	#0x8802		;
    8cb8:	f1 40 2b 00 	mov.b	#43,	40(r1)	;#0x002b
    8cbc:	28 00 
    8cbe:	30 40 02 88 	br	#0x8802		;
    8cc2:	f1 d0 10 00 	bis.b	#16,	46(r1)	;#0x0010
    8cc6:	2e 00 
    8cc8:	f1 f0 df ff 	and.b	#-33,	46(r1)	;#0xffdf
    8ccc:	2e 00 
    8cce:	30 40 02 88 	br	#0x8802		;
    8cd2:	0f 45       	mov	r5,	r15	;
    8cd4:	25 53       	incd	r5		;
    8cd6:	e1 4f 2f 00 	mov.b	@r15,	47(r1)	;
    8cda:	c1 93 2f 00 	cmp.b	#0,	47(r1)	;r3 As==00
    8cde:	02 38       	jl	$+6      	;abs 0x8ce4
    8ce0:	30 40 02 88 	br	#0x8802		;
    8ce4:	f1 e3 2f 00 	xor.b	#-1,	47(r1)	;r3 As==11
    8ce8:	d1 53 2f 00 	inc.b	47(r1)		;
    8cec:	ea 3f       	jmp	$-42     	;abs 0x8cc2
    8cee:	f1 d2 2e 00 	bis.b	#8,	46(r1)	;r2 As==11
    8cf2:	30 40 02 88 	br	#0x8802		;
    8cf6:	c1 93 28 00 	cmp.b	#0,	40(r1)	;r3 As==00
    8cfa:	02 24       	jz	$+6      	;abs 0x8d00
    8cfc:	30 40 02 88 	br	#0x8802		;
    8d00:	f1 40 20 00 	mov.b	#32,	40(r1)	;#0x0020
    8d04:	28 00 
    8d06:	30 40 02 88 	br	#0x8802		;
    8d0a:	d1 b3 2e 00 	bit.b	#1,	46(r1)	;r3 As==01
    8d0e:	08 24       	jz	$+18     	;abs 0x8d20
    8d10:	0f 45       	mov	r5,	r15	;
    8d12:	25 52       	add	#4,	r5	;r2 As==10
    8d14:	b1 4f 30 00 	mov	@r15+,	48(r1)	;
    8d18:	b1 4f 32 00 	mov	@r15+,	50(r1)	;
    8d1c:	30 40 20 88 	br	#0x8820		;
    8d20:	0f 45       	mov	r5,	r15	;
    8d22:	25 53       	incd	r5		;
    8d24:	a1 4f 30 00 	mov	@r15,	48(r1)	;
    8d28:	81 43 32 00 	mov	#0,	50(r1)	;r3 As==00
    8d2c:	30 40 20 88 	br	#0x8820		;
    8d30:	0e 4d       	mov	r13,	r14	;
    8d32:	b0 12 34 87 	call	#-30924	;#0x8734
    8d36:	0f 93       	cmp	#0,	r15	;r3 As==00
    8d38:	02 38       	jl	$+6      	;abs 0x8d3e
    8d3a:	30 40 e6 87 	br	#0x87e6		;
    8d3e:	1f 42 62 02 	mov	&0x0262,r15	;0x0262
    8d42:	31 50 3c 00 	add	#60,	r1	;#0x003c
    8d46:	34 41       	pop	r4		;
    8d48:	35 41       	pop	r5		;
    8d4a:	36 41       	pop	r6		;
    8d4c:	37 41       	pop	r7		;
    8d4e:	38 41       	pop	r8		;
    8d50:	39 41       	pop	r9		;
    8d52:	3a 41       	pop	r10		;
    8d54:	3b 41       	pop	r11		;
    8d56:	30 41       	ret			

00008d58 <puts>:
    8d58:	0b 12       	push	r11		;
    8d5a:	0b 4f       	mov	r15,	r11	;
    8d5c:	0e 43       	clr	r14		;
    8d5e:	6f 4b       	mov.b	@r11,	r15	;
    8d60:	4f 93       	cmp.b	#0,	r15	;r3 As==00
    8d62:	09 24       	jz	$+20     	;abs 0x8d76
    8d64:	8f 11       	sxt	r15		;
    8d66:	1b 53       	inc	r11		;
    8d68:	b0 12 14 15 	call	#5396		;#0x1514
    8d6c:	0e 4f       	mov	r15,	r14	;
    8d6e:	0f 93       	cmp	#0,	r15	;r3 As==00
    8d70:	f6 37       	jge	$-18     	;abs 0x8d5e
    8d72:	0f 4e       	mov	r14,	r15	;
    8d74:	06 3c       	jmp	$+14     	;abs 0x8d82
    8d76:	0e 93       	cmp	#0,	r14	;r3 As==00
    8d78:	fc 3b       	jl	$-6      	;abs 0x8d72
    8d7a:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    8d7e:	b0 12 14 15 	call	#5396		;#0x1514
    8d82:	3b 41       	pop	r11		;
    8d84:	30 41       	ret			

00008d86 <strchr>:
    8d86:	0d 4f       	mov	r15,	r13	;
    8d88:	0f 4e       	mov	r14,	r15	;
    8d8a:	6e 4d       	mov.b	@r13,	r14	;
    8d8c:	4e 9f       	cmp.b	r15,	r14	;
    8d8e:	06 24       	jz	$+14     	;abs 0x8d9c
    8d90:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    8d92:	02 24       	jz	$+6      	;abs 0x8d98
    8d94:	1d 53       	inc	r13		;
    8d96:	f9 3f       	jmp	$-12     	;abs 0x8d8a
    8d98:	0f 43       	clr	r15		;
    8d9a:	30 41       	ret			
    8d9c:	0f 4d       	mov	r13,	r15	;
    8d9e:	30 41       	ret			

00008da0 <memchr>:
    8da0:	0b 12       	push	r11		;
    8da2:	0b 4f       	mov	r15,	r11	;
    8da4:	4c 4e       	mov.b	r14,	r12	;
    8da6:	0d 93       	cmp	#0,	r13	;r3 As==00
    8da8:	07 24       	jz	$+16     	;abs 0x8db8
    8daa:	0e 4b       	mov	r11,	r14	;
    8dac:	6f 4e       	mov.b	@r14,	r15	;
    8dae:	1e 53       	inc	r14		;
    8db0:	4f 9c       	cmp.b	r12,	r15	;
    8db2:	04 24       	jz	$+10     	;abs 0x8dbc
    8db4:	3d 53       	add	#-1,	r13	;r3 As==11
    8db6:	fa 23       	jnz	$-10     	;abs 0x8dac
    8db8:	0f 43       	clr	r15		;
    8dba:	02 3c       	jmp	$+6      	;abs 0x8dc0
    8dbc:	0f 4e       	mov	r14,	r15	;
    8dbe:	3f 53       	add	#-1,	r15	;r3 As==11
    8dc0:	3b 41       	pop	r11		;
    8dc2:	30 41       	ret			

00008dc4 <strcasecmp>:
    8dc4:	0b 12       	push	r11		;
    8dc6:	0a 12       	push	r10		;
    8dc8:	0b 4f       	mov	r15,	r11	;
    8dca:	0a 4e       	mov	r14,	r10	;
    8dcc:	6e 4b       	mov.b	@r11,	r14	;
    8dce:	4c 4e       	mov.b	r14,	r12	;
    8dd0:	0f 4c       	mov	r12,	r15	;
    8dd2:	3f 50 bf ff 	add	#-65,	r15	;#0xffbf
    8dd6:	3f 90 1a 00 	cmp	#26,	r15	;#0x001a
    8dda:	02 2c       	jc	$+6      	;abs 0x8de0
    8ddc:	3c 50 20 00 	add	#32,	r12	;#0x0020
    8de0:	6f 4a       	mov.b	@r10,	r15	;
    8de2:	1a 53       	inc	r10		;
    8de4:	0d 4f       	mov	r15,	r13	;
    8de6:	3f 50 bf ff 	add	#-65,	r15	;#0xffbf
    8dea:	3f 90 1a 00 	cmp	#26,	r15	;#0x001a
    8dee:	02 2c       	jc	$+6      	;abs 0x8df4
    8df0:	3d 50 20 00 	add	#32,	r13	;#0x0020
    8df4:	0c 9d       	cmp	r13,	r12	;
    8df6:	05 20       	jnz	$+12     	;abs 0x8e02
    8df8:	1b 53       	inc	r11		;
    8dfa:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    8dfc:	e7 23       	jnz	$-48     	;abs 0x8dcc
    8dfe:	0f 43       	clr	r15		;
    8e00:	15 3c       	jmp	$+44     	;abs 0x8e2c
    8e02:	4d 4e       	mov.b	r14,	r13	;
    8e04:	0f 4d       	mov	r13,	r15	;
    8e06:	3f 50 bf ff 	add	#-65,	r15	;#0xffbf
    8e0a:	3f 90 1a 00 	cmp	#26,	r15	;#0x001a
    8e0e:	02 2c       	jc	$+6      	;abs 0x8e14
    8e10:	3d 50 20 00 	add	#32,	r13	;#0x0020
    8e14:	5e 4a ff ff 	mov.b	-1(r10),r14	;
    8e18:	0f 4e       	mov	r14,	r15	;
    8e1a:	3f 50 bf ff 	add	#-65,	r15	;#0xffbf
    8e1e:	3f 90 1a 00 	cmp	#26,	r15	;#0x001a
    8e22:	02 2c       	jc	$+6      	;abs 0x8e28
    8e24:	3e 50 20 00 	add	#32,	r14	;#0x0020
    8e28:	0f 4d       	mov	r13,	r15	;
    8e2a:	0f 8e       	sub	r14,	r15	;
    8e2c:	3a 41       	pop	r10		;
    8e2e:	3b 41       	pop	r11		;
    8e30:	30 41       	ret			

00008e32 <strncasecmp>:
    8e32:	0b 12       	push	r11		;
    8e34:	0a 12       	push	r10		;
    8e36:	09 12       	push	r9		;
    8e38:	08 12       	push	r8		;
    8e3a:	07 12       	push	r7		;
    8e3c:	0d 93       	cmp	#0,	r13	;r3 As==00
    8e3e:	1e 24       	jz	$+62     	;abs 0x8e7c
    8e40:	0b 4f       	mov	r15,	r11	;
    8e42:	0a 4e       	mov	r14,	r10	;
    8e44:	68 4b       	mov.b	@r11,	r8	;
    8e46:	4e 48       	mov.b	r8,	r14	;
    8e48:	09 4e       	mov	r14,	r9	;
    8e4a:	07 4e       	mov	r14,	r7	;
    8e4c:	37 50 bf ff 	add	#-65,	r7	;#0xffbf
    8e50:	37 90 1a 00 	cmp	#26,	r7	;#0x001a
    8e54:	02 2c       	jc	$+6      	;abs 0x8e5a
    8e56:	39 50 20 00 	add	#32,	r9	;#0x0020
    8e5a:	6f 4a       	mov.b	@r10,	r15	;
    8e5c:	1a 53       	inc	r10		;
    8e5e:	0c 4f       	mov	r15,	r12	;
    8e60:	3f 50 bf ff 	add	#-65,	r15	;#0xffbf
    8e64:	3f 90 1a 00 	cmp	#26,	r15	;#0x001a
    8e68:	02 2c       	jc	$+6      	;abs 0x8e6e
    8e6a:	3c 50 20 00 	add	#32,	r12	;#0x0020
    8e6e:	09 9c       	cmp	r12,	r9	;
    8e70:	07 20       	jnz	$+16     	;abs 0x8e80
    8e72:	1b 53       	inc	r11		;
    8e74:	48 93       	cmp.b	#0,	r8	;r3 As==00
    8e76:	02 24       	jz	$+6      	;abs 0x8e7c
    8e78:	3d 53       	add	#-1,	r13	;r3 As==11
    8e7a:	e4 23       	jnz	$-54     	;abs 0x8e44
    8e7c:	0f 43       	clr	r15		;
    8e7e:	12 3c       	jmp	$+38     	;abs 0x8ea4
    8e80:	0d 4e       	mov	r14,	r13	;
    8e82:	37 90 1a 00 	cmp	#26,	r7	;#0x001a
    8e86:	02 2c       	jc	$+6      	;abs 0x8e8c
    8e88:	3d 50 20 00 	add	#32,	r13	;#0x0020
    8e8c:	5e 4a ff ff 	mov.b	-1(r10),r14	;
    8e90:	0f 4e       	mov	r14,	r15	;
    8e92:	3f 50 bf ff 	add	#-65,	r15	;#0xffbf
    8e96:	3f 90 1a 00 	cmp	#26,	r15	;#0x001a
    8e9a:	02 2c       	jc	$+6      	;abs 0x8ea0
    8e9c:	3e 50 20 00 	add	#32,	r14	;#0x0020
    8ea0:	0f 4d       	mov	r13,	r15	;
    8ea2:	0f 8e       	sub	r14,	r15	;
    8ea4:	37 41       	pop	r7		;
    8ea6:	38 41       	pop	r8		;
    8ea8:	39 41       	pop	r9		;
    8eaa:	3a 41       	pop	r10		;
    8eac:	3b 41       	pop	r11		;
    8eae:	30 41       	ret			

00008eb0 <strtok_r>:
    8eb0:	0b 12       	push	r11		;
    8eb2:	0a 12       	push	r10		;
    8eb4:	09 12       	push	r9		;
    8eb6:	0b 4f       	mov	r15,	r11	;
    8eb8:	0a 4e       	mov	r14,	r10	;
    8eba:	0f 93       	cmp	#0,	r15	;r3 As==00
    8ebc:	2e 24       	jz	$+94     	;abs 0x8f1a
    8ebe:	6e 4b       	mov.b	@r11,	r14	;
    8ec0:	8e 11       	sxt	r14		;
    8ec2:	1b 53       	inc	r11		;
    8ec4:	0f 4a       	mov	r10,	r15	;
    8ec6:	6c 4a       	mov.b	@r10,	r12	;
    8ec8:	8c 11       	sxt	r12		;
    8eca:	1f 53       	inc	r15		;
    8ecc:	0c 93       	cmp	#0,	r12	;r3 As==00
    8ece:	07 24       	jz	$+16     	;abs 0x8ede
    8ed0:	0e 9c       	cmp	r12,	r14	;
    8ed2:	f5 27       	jz	$-20     	;abs 0x8ebe
    8ed4:	6c 4f       	mov.b	@r15,	r12	;
    8ed6:	8c 11       	sxt	r12		;
    8ed8:	1f 53       	inc	r15		;
    8eda:	0c 93       	cmp	#0,	r12	;r3 As==00
    8edc:	f9 23       	jnz	$-12     	;abs 0x8ed0
    8ede:	0e 93       	cmp	#0,	r14	;r3 As==00
    8ee0:	04 20       	jnz	$+10     	;abs 0x8eea
    8ee2:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    8ee6:	0f 43       	clr	r15		;
    8ee8:	1c 3c       	jmp	$+58     	;abs 0x8f22
    8eea:	09 4b       	mov	r11,	r9	;
    8eec:	39 53       	add	#-1,	r9	;r3 As==11
    8eee:	6e 4b       	mov.b	@r11,	r14	;
    8ef0:	8e 11       	sxt	r14		;
    8ef2:	1b 53       	inc	r11		;
    8ef4:	0f 4a       	mov	r10,	r15	;
    8ef6:	6c 4f       	mov.b	@r15,	r12	;
    8ef8:	8c 11       	sxt	r12		;
    8efa:	1f 53       	inc	r15		;
    8efc:	0c 9e       	cmp	r14,	r12	;
    8efe:	03 24       	jz	$+8      	;abs 0x8f06
    8f00:	0c 93       	cmp	#0,	r12	;r3 As==00
    8f02:	f9 23       	jnz	$-12     	;abs 0x8ef6
    8f04:	f4 3f       	jmp	$-22     	;abs 0x8eee
    8f06:	0c 93       	cmp	#0,	r12	;r3 As==00
    8f08:	05 20       	jnz	$+12     	;abs 0x8f14
    8f0a:	0b 43       	clr	r11		;
    8f0c:	8d 4b 00 00 	mov	r11,	0(r13)	;
    8f10:	0f 49       	mov	r9,	r15	;
    8f12:	07 3c       	jmp	$+16     	;abs 0x8f22
    8f14:	cb 43 ff ff 	mov.b	#0,	-1(r11)	;r3 As==00
    8f18:	f9 3f       	jmp	$-12     	;abs 0x8f0c
    8f1a:	2b 4d       	mov	@r13,	r11	;
    8f1c:	0b 93       	cmp	#0,	r11	;r3 As==00
    8f1e:	cf 23       	jnz	$-96     	;abs 0x8ebe
    8f20:	e2 3f       	jmp	$-58     	;abs 0x8ee6
    8f22:	39 41       	pop	r9		;
    8f24:	3a 41       	pop	r10		;
    8f26:	3b 41       	pop	r11		;
    8f28:	30 41       	ret			

00008f2a <strtok>:
    8f2a:	3d 40 66 02 	mov	#614,	r13	;#0x0266
    8f2e:	b0 12 b0 8e 	call	#-29008	;#0x8eb0
    8f32:	30 41       	ret			

00008f34 <__stop_progExec__>:
    8f34:	02 df       	bis	r15,	r2	;
    8f36:	fe 3f       	jmp	$-2      	;abs 0x8f34

00008f38 <__divmodsi4>:
    8f38:	08 43       	clr	r8		;
    8f3a:	3d b0 00 80 	bit	#-32768,r13	;#0x8000
    8f3e:	05 24       	jz	$+12     	;abs 0x8f4a
    8f40:	3d e3       	inv	r13		;
    8f42:	3c e3       	inv	r12		;
    8f44:	1c 53       	inc	r12		;
    8f46:	0d 63       	adc	r13		;
    8f48:	28 d2       	bis	#4,	r8	;r2 As==10
    8f4a:	3b b0 00 80 	bit	#-32768,r11	;#0x8000
    8f4e:	05 24       	jz	$+12     	;abs 0x8f5a
    8f50:	3b e3       	inv	r11		;
    8f52:	3a e3       	inv	r10		;
    8f54:	1a 53       	inc	r10		;
    8f56:	0b 63       	adc	r11		;
    8f58:	38 d2       	bis	#8,	r8	;r2 As==11
    8f5a:	b0 12 82 8f 	call	#-28798	;#0x8f82
    8f5e:	08 10       	rrc	r8		;
    8f60:	28 b2       	bit	#4,	r8	;r2 As==10
    8f62:	08 24       	jz	$+18     	;abs 0x8f74
    8f64:	3e e3       	inv	r14		;
    8f66:	3f e3       	inv	r15		;
    8f68:	1e 53       	inc	r14		;
    8f6a:	0f 63       	adc	r15		;
    8f6c:	3c e3       	inv	r12		;
    8f6e:	3d e3       	inv	r13		;
    8f70:	1c 53       	inc	r12		;
    8f72:	0d 63       	adc	r13		;
    8f74:	38 b2       	bit	#8,	r8	;r2 As==11
    8f76:	04 24       	jz	$+10     	;abs 0x8f80
    8f78:	3c e3       	inv	r12		;
    8f7a:	3d e3       	inv	r13		;
    8f7c:	1c 53       	inc	r12		;
    8f7e:	0d 63       	adc	r13		;
    8f80:	30 41       	ret			

00008f82 <__udivmodsi4>:
    8f82:	0f ef       	xor	r15,	r15	;
    8f84:	0e ee       	xor	r14,	r14	;
    8f86:	39 40 21 00 	mov	#33,	r9	;#0x0021
    8f8a:	0a 3c       	jmp	$+22     	;abs 0x8fa0
    8f8c:	08 10       	rrc	r8		;
    8f8e:	0e 6e       	rlc	r14		;
    8f90:	0f 6f       	rlc	r15		;
    8f92:	0f 9b       	cmp	r11,	r15	;
    8f94:	05 28       	jnc	$+12     	;abs 0x8fa0
    8f96:	02 20       	jnz	$+6      	;abs 0x8f9c
    8f98:	0e 9a       	cmp	r10,	r14	;
    8f9a:	02 28       	jnc	$+6      	;abs 0x8fa0
    8f9c:	0e 8a       	sub	r10,	r14	;
    8f9e:	0f 7b       	subc	r11,	r15	;
    8fa0:	0c 6c       	rlc	r12		;
    8fa2:	0d 6d       	rlc	r13		;
    8fa4:	08 68       	rlc	r8		;
    8fa6:	19 83       	dec	r9		;
    8fa8:	f1 23       	jnz	$-28     	;abs 0x8f8c
    8faa:	30 41       	ret			

00008fac <__umulsi3hw>:
    8fac:	82 4c 30 01 	mov	r12,	&0x0130	;
    8fb0:	82 4a 38 01 	mov	r10,	&0x0138	;
    8fb4:	82 4c 34 01 	mov	r12,	&0x0134	;
    8fb8:	1e 42 3a 01 	mov	&0x013a,r14	;0x013a
    8fbc:	92 42 3c 01 	mov	&0x013c,&0x013a	;0x013c
    8fc0:	3a 01 
    8fc2:	82 4b 38 01 	mov	r11,	&0x0138	;
    8fc6:	82 4d 34 01 	mov	r13,	&0x0134	;
    8fca:	82 4a 38 01 	mov	r10,	&0x0138	;
    8fce:	1f 42 3a 01 	mov	&0x013a,r15	;0x013a
    8fd2:	30 41       	ret			
Disassembly of section .vectors:

0000ffe0 <InterruptVectors>:
    ffe0:	3a 11 3a 11 3a 11 3a 11 3a 11 3a 11 14 32 3a 11     :.:.:.:.:.:..2:.
    fff0:	3a 11 3a 11 3a 11 3a 11 3a 11 3a 11 3a 11 00 11     :.:.:.:.:.:.:...
