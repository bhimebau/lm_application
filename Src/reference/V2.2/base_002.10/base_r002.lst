
base_r002.elf:     file format elf32-msp430

SYMBOL TABLE:
00001100 l    d  .text	00000000 
00000200 l    d  .data	00000000 
00000c00 l    d  .bootloader	00000000 
00001000 l    d  .infomem	00000000 
00001000 l    d  .infomemnobits	00000000 
00000264 l    d  .bss	00000000 
000007d4 l    d  .noinit	00000000 
0000ffe0 l    d  .vectors	00000000 
00000000 l    d  .stab	00000000 
00000000 l    d  .stabstr	00000000 
00000000 l    d  *ABS*	00000000 
00000000 l    d  *ABS*	00000000 
00000000 l    d  *ABS*	00000000 
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000000 l    df *ABS*	00000000 <command line>
00000000 l    df *ABS*	00000000 <built-in>
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000000 l    df *ABS*	00000000 gcrt0.S
00000000 l    df *ABS*	00000000 gcrt0.S
00000000 l    df *ABS*	00000000 <command line>
00000000 l    df *ABS*	00000000 <built-in>
00000000 l    df *ABS*	00000000 gcrt0.S
00000130 l       *ABS*	00000000 MPY
00000132 l       *ABS*	00000000 MPYS
00000134 l       *ABS*	00000000 MAC
00000136 l       *ABS*	00000000 MACS
00000138 l       *ABS*	00000000 OP2
0000013a l       *ABS*	00000000 RESLO
0000013c l       *ABS*	00000000 RESHI
0000013e l       *ABS*	00000000 SUMEXT
00000020 l       *ABS*	00000000 P1IN
00000021 l       *ABS*	00000000 P1OUT
00000022 l       *ABS*	00000000 P1DIR
00000023 l       *ABS*	00000000 P1IFG
00000024 l       *ABS*	00000000 P1IES
00000025 l       *ABS*	00000000 P1IE
00000026 l       *ABS*	00000000 P1SEL
00000028 l       *ABS*	00000000 P2IN
00000029 l       *ABS*	00000000 P2OUT
0000002a l       *ABS*	00000000 P2DIR
0000002b l       *ABS*	00000000 P2IFG
0000002c l       *ABS*	00000000 P2IES
0000002d l       *ABS*	00000000 P2IE
0000002e l       *ABS*	00000000 P2SEL
00000018 l       *ABS*	00000000 P3IN
00000019 l       *ABS*	00000000 P3OUT
0000001a l       *ABS*	00000000 P3DIR
0000001b l       *ABS*	00000000 P3SEL
0000001c l       *ABS*	00000000 P4IN
0000001d l       *ABS*	00000000 P4OUT
0000001e l       *ABS*	00000000 P4DIR
0000001f l       *ABS*	00000000 P4SEL
00000030 l       *ABS*	00000000 P5IN
00000031 l       *ABS*	00000000 P5OUT
00000032 l       *ABS*	00000000 P5DIR
00000033 l       *ABS*	00000000 P5SEL
00000034 l       *ABS*	00000000 P6IN
00000035 l       *ABS*	00000000 P6OUT
00000036 l       *ABS*	00000000 P6DIR
00000037 l       *ABS*	00000000 P6SEL
00000070 l       *ABS*	00000000 U0CTL
00000071 l       *ABS*	00000000 U0TCTL
00000072 l       *ABS*	00000000 U0RCTL
00000073 l       *ABS*	00000000 U0MCTL
00000074 l       *ABS*	00000000 U0BR0
00000075 l       *ABS*	00000000 U0BR1
00000076 l       *ABS*	00000000 U0RXBUF
00000077 l       *ABS*	00000000 U0TXBUF
00000070 l       *ABS*	00000000 UCTL
00000071 l       *ABS*	00000000 UTCTL
00000072 l       *ABS*	00000000 URCTL
00000073 l       *ABS*	00000000 UMCTL
00000074 l       *ABS*	00000000 UBR0
00000075 l       *ABS*	00000000 UBR1
00000076 l       *ABS*	00000000 RXBUF
00000077 l       *ABS*	00000000 TXBUF
00000070 l       *ABS*	00000000 UCTL0
00000071 l       *ABS*	00000000 UTCTL0
00000072 l       *ABS*	00000000 URCTL0
00000073 l       *ABS*	00000000 UMCTL0
00000074 l       *ABS*	00000000 UBR00
00000075 l       *ABS*	00000000 UBR10
00000076 l       *ABS*	00000000 RXBUF0
00000077 l       *ABS*	00000000 TXBUF0
00000070 l       *ABS*	00000000 UCTL_0
00000071 l       *ABS*	00000000 UTCTL_0
00000072 l       *ABS*	00000000 URCTL_0
00000073 l       *ABS*	00000000 UMCTL_0
00000074 l       *ABS*	00000000 UBR0_0
00000075 l       *ABS*	00000000 UBR1_0
00000076 l       *ABS*	00000000 RXBUF_0
00000077 l       *ABS*	00000000 TXBUF_0
00000071 l       *ABS*	00000000 I2CTCTL
00000072 l       *ABS*	00000000 I2CDCTL
00000073 l       *ABS*	00000000 I2CPSC
00000074 l       *ABS*	00000000 I2CSCLH
00000075 l       *ABS*	00000000 I2CSCLL
00000076 l       *ABS*	00000000 I2CDR
00000050 l       *ABS*	00000000 I2CIE
00000051 l       *ABS*	00000000 I2CIFG
00000052 l       *ABS*	00000000 I2CNDAT
00000118 l       *ABS*	00000000 I2COA
0000011a l       *ABS*	00000000 I2CSA
0000011c l       *ABS*	00000000 I2CIV
00000078 l       *ABS*	00000000 U1CTL
00000079 l       *ABS*	00000000 U1TCTL
0000007a l       *ABS*	00000000 U1RCTL
0000007b l       *ABS*	00000000 U1MCTL
0000007c l       *ABS*	00000000 U1BR0
0000007d l       *ABS*	00000000 U1BR1
0000007e l       *ABS*	00000000 U1RXBUF
0000007f l       *ABS*	00000000 U1TXBUF
00000078 l       *ABS*	00000000 UCTL1
00000079 l       *ABS*	00000000 UTCTL1
0000007a l       *ABS*	00000000 URCTL1
0000007b l       *ABS*	00000000 UMCTL1
0000007c l       *ABS*	00000000 UBR01
0000007d l       *ABS*	00000000 UBR11
0000007e l       *ABS*	00000000 RXBUF1
0000007f l       *ABS*	00000000 TXBUF1
00000078 l       *ABS*	00000000 UCTL_1
00000079 l       *ABS*	00000000 UTCTL_1
0000007a l       *ABS*	00000000 URCTL_1
0000007b l       *ABS*	00000000 UMCTL_1
0000007c l       *ABS*	00000000 UBR0_1
0000007d l       *ABS*	00000000 UBR1_1
0000007e l       *ABS*	00000000 RXBUF_1
0000007f l       *ABS*	00000000 TXBUF_1
00000055 l       *ABS*	00000000 SVSCTL
00000128 l       *ABS*	00000000 FCTL1
0000012a l       *ABS*	00000000 FCTL2
0000012c l       *ABS*	00000000 FCTL3
00000059 l       *ABS*	00000000 CACTL1
0000005a l       *ABS*	00000000 CACTL2
0000005b l       *ABS*	00000000 CAPD
0000012e l       *ABS*	00000000 TAIV
00000160 l       *ABS*	00000000 TACTL
00000162 l       *ABS*	00000000 TACCTL0
00000164 l       *ABS*	00000000 TACCTL1
00000166 l       *ABS*	00000000 TACCTL2
00000170 l       *ABS*	00000000 TAR
00000172 l       *ABS*	00000000 TACCR0
00000174 l       *ABS*	00000000 TACCR1
00000176 l       *ABS*	00000000 TACCR2
00000162 l       *ABS*	00000000 CCTL0
00000164 l       *ABS*	00000000 CCTL1
00000166 l       *ABS*	00000000 CCTL2
00000172 l       *ABS*	00000000 CCR0
00000174 l       *ABS*	00000000 CCR1
00000176 l       *ABS*	00000000 CCR2
0000011e l       *ABS*	00000000 TBIV
00000180 l       *ABS*	00000000 TBCTL
00000182 l       *ABS*	00000000 TBCCTL0
00000184 l       *ABS*	00000000 TBCCTL1
00000186 l       *ABS*	00000000 TBCCTL2
00000190 l       *ABS*	00000000 TBR
00000192 l       *ABS*	00000000 TBCCR0
00000194 l       *ABS*	00000000 TBCCR1
00000196 l       *ABS*	00000000 TBCCR2
00000188 l       *ABS*	00000000 TBCCTL3
0000018a l       *ABS*	00000000 TBCCTL4
0000018c l       *ABS*	00000000 TBCCTL5
0000018e l       *ABS*	00000000 TBCCTL6
00000198 l       *ABS*	00000000 TBCCR3
0000019a l       *ABS*	00000000 TBCCR4
0000019c l       *ABS*	00000000 TBCCR5
0000019e l       *ABS*	00000000 TBCCR6
00000056 l       *ABS*	00000000 DCOCTL
00000057 l       *ABS*	00000000 BCSCTL1
00000058 l       *ABS*	00000000 BCSCTL2
000001a0 l       *ABS*	00000000 ADC12CTL0
000001a2 l       *ABS*	00000000 ADC12CTL1
000001a4 l       *ABS*	00000000 ADC12IFG
000001a6 l       *ABS*	00000000 ADC12IE
000001a8 l       *ABS*	00000000 ADC12IV
00000140 l       *ABS*	00000000 ADC12MEM0
00000142 l       *ABS*	00000000 ADC12MEM1
00000144 l       *ABS*	00000000 ADC12MEM2
00000146 l       *ABS*	00000000 ADC12MEM3
00000148 l       *ABS*	00000000 ADC12MEM4
0000014a l       *ABS*	00000000 ADC12MEM5
0000014c l       *ABS*	00000000 ADC12MEM6
0000014e l       *ABS*	00000000 ADC12MEM7
00000150 l       *ABS*	00000000 ADC12MEM8
00000152 l       *ABS*	00000000 ADC12MEM9
00000154 l       *ABS*	00000000 ADC12MEM10
00000156 l       *ABS*	00000000 ADC12MEM11
00000158 l       *ABS*	00000000 ADC12MEM12
0000015a l       *ABS*	00000000 ADC12MEM13
0000015c l       *ABS*	00000000 ADC12MEM14
0000015e l       *ABS*	00000000 ADC12MEM15
00000080 l       *ABS*	00000000 ADC12MCTL0
00000081 l       *ABS*	00000000 ADC12MCTL1
00000082 l       *ABS*	00000000 ADC12MCTL2
00000083 l       *ABS*	00000000 ADC12MCTL3
00000084 l       *ABS*	00000000 ADC12MCTL4
00000085 l       *ABS*	00000000 ADC12MCTL5
00000086 l       *ABS*	00000000 ADC12MCTL6
00000087 l       *ABS*	00000000 ADC12MCTL7
00000088 l       *ABS*	00000000 ADC12MCTL8
00000089 l       *ABS*	00000000 ADC12MCTL9
0000008a l       *ABS*	00000000 ADC12MCTL10
0000008b l       *ABS*	00000000 ADC12MCTL11
0000008c l       *ABS*	00000000 ADC12MCTL12
0000008d l       *ABS*	00000000 ADC12MCTL13
0000008e l       *ABS*	00000000 ADC12MCTL14
0000008f l       *ABS*	00000000 ADC12MCTL15
000001c0 l       *ABS*	00000000 DAC12_0CTL
000001c2 l       *ABS*	00000000 DAC12_1CTL
000001c8 l       *ABS*	00000000 DAC12_0DAT
000001ca l       *ABS*	00000000 DAC12_1DAT
00000122 l       *ABS*	00000000 DMACTL0
00000124 l       *ABS*	00000000 DMACTL1
000001e0 l       *ABS*	00000000 DMA0CTL
000001e2 l       *ABS*	00000000 DMA0SA
000001e4 l       *ABS*	00000000 DMA0DA
000001e6 l       *ABS*	00000000 DMA0SZ
000001e8 l       *ABS*	00000000 DMA1CTL
000001ea l       *ABS*	00000000 DMA1SA
000001ec l       *ABS*	00000000 DMA1DA
000001ee l       *ABS*	00000000 DMA1SZ
000001f0 l       *ABS*	00000000 DMA2CTL
000001f2 l       *ABS*	00000000 DMA2SA
000001f4 l       *ABS*	00000000 DMA2DA
000001f6 l       *ABS*	00000000 DMA2SZ
00000120 l       *ABS*	00000000 WDTCTL
00000000 l       *ABS*	00000000 IE1
00000002 l       *ABS*	00000000 IFG1
00000001 l       *ABS*	00000000 IE2
00000003 l       *ABS*	00000000 IFG2
00000004 l       *ABS*	00000000 ME1
00000005 l       *ABS*	00000000 ME2
00000000 l    df *ABS*	00000000 main.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
000013ee l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 ueaclib.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00000200 l     O .data	00000001 counter.0
00000202 l     O .data	00000004 led_state.1
00000206 l     O .data	00000004 lla_state.2
00001a6c l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 calibrate.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
0000223a l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 external_flash.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
000025d4 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 ueac.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00002ce2 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 interpreter.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00003236 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 filter.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00003384 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 timer.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
0000020a l     O .data	00000002 chan_last.0
0000020c l     O .data	00000002 chan_next.1
0000020e l     O .data	00000001 state.2
00003538 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 conversion.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
0000563a l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 global.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
000057fe l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 lla.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
0000022a l     O .data	00000001 count.0
00005d8c l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 lla_function_definition.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
000087f2 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000000 l    df *ABS*	00000000 <command line>
00000000 l    df *ABS*	00000000 <built-in>
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000000 l    df *ABS*	00000000 <command line>
00000000 l    df *ABS*	00000000 <built-in>
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000000 l    df *ABS*	00000000 <command line>
00000000 l    df *ABS*	00000000 <built-in>
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000000 l    df *ABS*	00000000 strtol.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00008a0e l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 printf.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00008a20 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 vuprintf.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00000262 l     O .data	00000002 total_len
00008a20 l     F .text	00000030 PRINT
00000264 l     O .bss	00000002 __write_char
00008a50 l     F .text	00000034 __write_pad
00009044 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 puts.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00009072 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 strchr.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
0000908c l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 memchr.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
000090b0 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 strcasecmp.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
0000911e l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 strncasecmp.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
0000919c l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 strtok.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00000266 l     O .bss	00000002 last.0
00009220 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 errno.c
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00009220 l       .text	00000000 Letext
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000000 l    df *ABS*	00000000 <command line>
00000000 l    df *ABS*	00000000 <built-in>
00000000 l    df *ABS*	00000000 config/msp430/libgcc.S
00000130 l       *ABS*	00000000 __MPY
00000132 l       *ABS*	00000000 __MPYS
00000134 l       *ABS*	00000000 __MAC
00000136 l       *ABS*	00000000 __MACS
00000138 l       *ABS*	00000000 __OP2
0000013a l       *ABS*	00000000 __RESLO
0000013c l       *ABS*	00000000 __RESHI
0000013e l       *ABS*	00000000 __SUMEXT
00002ceb g     O .text	00000005 CAL
0000150a g     F .text	00000012 putchar
000023f8 g     F .text	00000006 end_main_array_read
0000026c g     O .bss	000003b6 pin_data
0000919c g     F .text	0000007a strtok_r
00008a0e g     F .text	00000012 printf
00001606 g     F .text	00000050 write_current
00006ed2 g     O .text	00000192 f12
0000783e g     O .text	00000192 f18
0000182c g     F .text	00000014 clear_led_screen
00002c74 g     F .text	0000006e report_instruction
00002202 g     F .text	0000000c current_input_calibration
000007d2 g     O .bss	00000002 errno
000092c0 g       .text	00000000 _etext
00002c04 g     F .text	00000026 lla_input_check
00001a90 g     F .text	0000016a scan_leds
00009220  w      .text	00000000 __stop_progExec__
0000113a g       .text	00000000 _unexpected_1_
00001840 g     F .text	00000112 write_led
0000113a  w      .text	00000000 vector_ffe0
00002d66 g     F .text	000004d0 interpreter
00009044 g     F .text	0000002e puts
000024d0 g     F .text	00000040 buffer1_write
00001d96 g     F .text	000002fe current_output_calibration
00003522 g     F .text	00000016 delay_1_25mS
000079d0 g     O .text	00000192 f19
00005a30 g     F .text	00000068 lla_enable
000015d4 g     F .text	00000006 stop_a2d_converter
00002d06 g     F .text	0000002e delspace
00000622 g     O .bss	00000064 command
0000022c g     O .data	00000036 lla_function_index
00007b62 g     O .text	00000192 f20
000059d0 g     F .text	00000060 lla_disable
00003384 g       .text	00000000 vector_ffec
00007388 g     O .text	00000192 f15
0000335e g     F .text	00000026 initialize_channel_structure
0000113a  w      .text	00000000 vector_fff0
00002ce6 g     O .text	00000005 RST
00003538 g     O .text	00002000 a2d_i_conversion
000066f8 g     O .text	00000192 f7
0000113a g       .text	00000000 __dtors_end
0000911e g     F .text	0000007e strncasecmp
00001430 g     F .text	00000010 clear_latches
000007d4 g       .bss	00000000 __bss_end
0000113a  w      .text	00000000 vector_fffc
000063d4 g     O .text	00000192 f5
00002cf7 g     O .text	00000005 LON
000015a6 g     F .text	00000026 init_a2d
00007e86 g     O .text	00000192 f22
000087f2 g     F .text	0000021c strtol
0000113a  w      .text	00000000 vector_ffe4
0000239a g     F .text	0000005e start_main_array_read
000015ee g     F .text	00000018 write_analog_mux
000071f6 g     O .text	00000192 f14
000012e6 g     F .text	00000074 print_grid_v
00002510 g     F .text	00000040 buffer2_write
00005538 g     F .text	00000102 convert_a2d
0000751a g     O .text	00000192 f16
0000ffe0 g     O .vectors	00000020 InterruptVectors
00002cf0 g     O .text	00000007 DEBUG
00002592 g     F .text	00000042 buffer2_read
000060b0 g     O .text	00000192 f3
0000120a g     F .text	00000096 scan_probes
00001656 g     F .text	00000078 write_dac
00009298 g       .text	00000000 __umulsi3hw
0000908c g     F .text	00000024 memchr
00001582 g     F .text	00000014 init_timer_a
00005f1e g     O .text	00000192 f2
00005a98 g     F .text	0000015e evaluate_lla
0000152c g     F .text	00000056 init_pins
00005cbc g     F .text	000000d0 lla_print_active
000057fe g     F .text	0000002a lla_report
00002cfc g     O .text	00000005 LOF
0000113a  w      .text	00000000 vector_ffe2
000076ac g     O .text	00000192 f17
000090b0 g     F .text	0000006e strcasecmp
0000113a  w      .text	00000000 vector_ffe8
0000113e  w      .text	00000000 _unexpected_
00000686 g     O .bss	00000146 ueac_state
0000113a  w      .text	00000000 vector_fffa
00009216 g     F .text	0000000a strtok
00008a84 g     F .text	000005c0 vuprintf
000023fe g     F .text	0000003c page_to_buffer1_compare
000024b2 g     F .text	0000001e poll_status_register_blocking
00001100 g       .text	00000000 _reset_vector__
0000113a g       .text	00000000 __ctors_start
00003384 g     F .text	0000019e timer_a0_irq
000014a0 g     F .text	00000028 init_spi_0
000020e8 g     F .text	000000fc channel_debug
00000264 g       .bss	00000000 __bss_start
0000113a  w      .text	00000000 vector_ffee
000015cc g     F .text	00000008 start_a2d_converter
00002d01 g     O .text	00000002 GRID_NUM_MIN
0000113a  w      .text	00000000 vector_fff4
00001178 g     F .text	0000008a main
0000113a  w      .text	00000000 vector_fff8
00003236 g     F .text	00000070 update_a2d_data
0000113a  w      .text	00000000 vector_fff2
0000151c g     F .text	00000010 getchar
00002ce4 g     O .text	00000002 TERMINATOR
00001440 g     F .text	00000060 Set_DCO
00002d03 g     O .text	00000002 GRID_NUM_MAX
00010000 g       .vectors	00000000 _vectors_end
0000688a g     O .text	00000192 f8
00007cf4 g     O .text	00000192 f21
00002476 g     F .text	0000003c buffer2_to_page_e
00006d40 g     O .text	00000192 f11
00008660 g     O .text	00000192 f27
0000113a  w      .text	00000000 vector_ffe6
00005698 g     F .text	00000154 init_ueac_state_structure
00000211 g     O .data	00000019 high_time_limit
000081aa g     O .text	00000192 f24
00002ce2 g     O .text	00000002 DELIMITER
000012a0 g     F .text	0000003e get_command
00000210 g     O .data	00000001 led_screen_enable
00007064 g     O .text	00000192 f13
0000222e g     F .text	0000000c voltage_input_calibration
000016ce g     F .text	0000015e led_pwm
00006a1c g     O .text	00000192 f9
000014da g     F .text	00000030 init_serial_1
00008018 g     O .text	00000192 f23
0000113a g       .text	00000000 __dtors_start
0000113a g       .text	00000000 __ctors_end
00009224 g       .text	00000000 __divmodsi4
00000a00 g       *ABS*	00000000 __stack
00006242 g     O .text	00000192 f4
0000563a g     F .text	0000002e init_pin_data_structure
00005d8c g     O .text	00000192 f1
00000264 g       .data	00000000 _edata
0000833c g     O .text	00000192 f25
000007d4 g       .noinit	00000000 _end
0000135a g     F .text	00000094 print_grid_i
000015da g     F .text	00000014 wait_a2d_busy
00006bae g     O .text	00000192 f10
00001596 g     F .text	00000010 init_dac
000007cc g     O .bss	00000002 timer_tick
00002550 g     F .text	00000042 buffer1_read
0000926e g       .text	00000000 __udivmodsi4
000025d4 g     O .text	00000322 dac_translation
00002928 g     F .text	000002dc ueac_execute_instruction
0000113a  w      .text	00000000 vector_fff6
000032e4 g     F .text	0000007a report_channel_structure
000014c8 g     F .text	00000012 send_spi_byte
00009072 g     F .text	0000001a strchr
000013ee g     F .text	00000030 init_sys
00000200 g       .data	00000000 __data_start
000022a8 g     F .text	000000f2 flash_integrity_test
000084ce g     O .text	00000192 f26
0000243a g     F .text	0000003c buffer1_to_page_e
0000113a  w      .text	00000000 vector_ffea
000007ce g     O .bss	00000004 conversion_result
000057ec g     F .text	00000012 init_global_variables
00000268 g     O .bss	00000004 lla_data
00001952 g     F .text	0000011a write_lla
00005828 g     F .text	000001a8 lla_add
0000141e g     F .text	00000012 system_reset
00006566 g     O .text	00000192 f6


Disassembly of section .text:

00001100 <_reset_vector__>:
    1100:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
    1104:	20 01 
    1106:	3f 40 c0 92 	mov	#-27968,r15	;#0x92c0
    110a:	3e 40 00 02 	mov	#512,	r14	;#0x0200
    110e:	3d 40 64 02 	mov	#612,	r13	;#0x0264
    1112:	0d 9e       	cmp	r14,	r13	;
    1114:	05 24       	jz	$+12     	;abs 0x1120
    1116:	fe 4f 00 00 	mov.b	@r15+,	0(r14)	;
    111a:	1e 53       	inc	r14		;
    111c:	0e 9d       	cmp	r13,	r14	;
    111e:	fb 2b       	jnc	$-8      	;abs 0x1116
    1120:	3f 40 64 02 	mov	#612,	r15	;#0x0264
    1124:	3d 40 d4 07 	mov	#2004,	r13	;#0x07d4
    1128:	0d 9f       	cmp	r15,	r13	;
    112a:	05 24       	jz	$+12     	;abs 0x1136
    112c:	cf 43 00 00 	mov.b	#0,	0(r15)	;r3 As==00
    1130:	1f 53       	inc	r15		;
    1132:	0f 9d       	cmp	r13,	r15	;
    1134:	fb 2b       	jnc	$-8      	;abs 0x112c
    1136:	30 40 78 11 	br	#0x1178		;

0000113a <__ctors_end>:
    113a:	30 40 3e 11 	br	#0x113e		;

0000113e <_unexpected_>:
    113e:	00 13       	reti			
    1140:	1b 5b 34 37 	add	14132(r11),r11	;
    1144:	6d 00       	.word	0x006d;	????
    1146:	1b 5b 32 4a 	add	18994(r11),r11	;
    114a:	00 55       	add	r5,	r0	;
    114c:	45 41       	mov.b	r1,	r5	;
    114e:	43 20       	jnz	$+136    	;abs 0x11d6
    1150:	50 4f 53 54 	br	21587(r15)		;
    1154:	0a 0d       	.word	0x0d0a;	????
    1156:	00 75       	subc	r5,	r0	;
    1158:	45 41       	mov.b	r1,	r5	;
    115a:	43 6f       	.word	0x6f43;	????
    115c:	73 20       	jnz	$+232    	;abs 0x1244
    115e:	56 32       	jn	$-850    	;abs 0xe0c
    1160:	2e 32       	jn	$-930    	;abs 0xdbe
    1162:	20 62       	addc	#4,	r0	;r2 As==10
    1164:	61 73       	subc.b	#2,	r1	;r3 As==10
    1166:	65 5f       	add.b	@r15,	r5	;
    1168:	30 30       	jn	$+98     	;abs 0x11ca
    116a:	32 2e       	jc	$-922    	;abs 0xdd0
    116c:	31 30       	jn	$+100    	;abs 0x11d0
    116e:	0a 0d       	.word	0x0d0a;	????
    1170:	00 75       	subc	r5,	r0	;
    1172:	65 61       	addc.b	@r1,	r5	;
    1174:	63 3e       	jmp	$-824    	;abs 0xe3c
    1176:	20 00       	.word	0x0020;	????

00001178 <main>:
void print_grid_i();
int get_command(char *command_buf);
extern short dac_translation[];

int main(void) {
    1178:	31 40 00 0a 	mov	#2560,	r1	;#0x0a00
  int i;
  init_sys();                        // setup the MSP430 peripherals
    117c:	b0 12 ee 13 	call	#5102		;#0x13ee
  printf(BACK_WHITE);
    1180:	30 12 40 11 	push	#4416		;#0x1140
    1184:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  printf(CLR);
    1188:	30 12 46 11 	push	#4422		;#0x1146
    118c:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  printf("UEAC POST\n\r");
    1190:	30 12 4b 11 	push	#4427		;#0x114b
    1194:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  flash_integrity_test();
    1198:	b0 12 a8 22 	call	#8872		;#0x22a8
  scan_leds();
    119c:	b0 12 90 1a 	call	#6800		;#0x1a90
  init_global_variables();
    11a0:	b0 12 ec 57 	call	#22508		;#0x57ec
  for (i=0;i<25;i++) {
    11a4:	0b 43       	clr	r11		;
    11a6:	31 50 06 00 	add	#6,	r1	;#0x0006
    write_lla(i,0);
    11aa:	0e 43       	clr	r14		;
    11ac:	0f 4b       	mov	r11,	r15	;
    11ae:	b0 12 52 19 	call	#6482		;#0x1952
    write_led(i,0);
    11b2:	0e 43       	clr	r14		;
    11b4:	0f 4b       	mov	r11,	r15	;
    11b6:	b0 12 40 18 	call	#6208		;#0x1840
    write_current(i,0);
    11ba:	0e 43       	clr	r14		;
    11bc:	0f 4b       	mov	r11,	r15	;
    11be:	b0 12 06 16 	call	#5638		;#0x1606
    11c2:	1b 53       	inc	r11		;
    11c4:	3b 90 19 00 	cmp	#25,	r11	;#0x0019
    11c8:	f0 3b       	jl	$-30     	;abs 0x11aa
  }
  delay_1_25mS(800);     
    11ca:	3f 40 20 03 	mov	#800,	r15	;#0x0320
    11ce:	b0 12 22 35 	call	#13602		;#0x3522
  //  printf(CLR);
  printf("uEACos V2.2 base_002.10\n\r");
    11d2:	30 12 57 11 	push	#4439		;#0x1157
    11d6:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  led_screen_enable=1;
    11da:	d2 43 10 02 	mov.b	#1,	&0x0210	;r3 As==01
  while(1) {
    11de:	21 53       	incd	r1		;
    printf("ueac> ");
    11e0:	30 12 71 11 	push	#4465		;#0x1171
    11e4:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    get_command(command);
    11e8:	3f 40 22 06 	mov	#1570,	r15	;#0x0622
    11ec:	b0 12 a0 12 	call	#4768		;#0x12a0
    interpreter(command,&ueac_state);
    11f0:	3e 40 86 06 	mov	#1670,	r14	;#0x0686
    11f4:	3f 40 22 06 	mov	#1570,	r15	;#0x0622
    11f8:	b0 12 66 2d 	call	#11622		;#0x2d66
    11fc:	f0 3f       	jmp	$-30     	;abs 0x11de
  }
}
    11fe:	30 40 20 92 	br	#0x9220		;
    1202:	25 64       	addc	@r4,	r5	;
    1204:	20 00       	.word	0x0020;	????
    1206:	0a 0d       	.word	0x0d0a;	????
	...

0000120a <scan_probes>:

void scan_probes() {
    120a:	0b 12       	push	r11		;
    120c:	0a 12       	push	r10		;
    120e:	09 12       	push	r9		;
    1210:	08 12       	push	r8		;
  int i,j;
  for (i=0;i<25;i++) {
    1212:	08 43       	clr	r8		;
    write_lla(i,1);
    1214:	1e 43       	mov	#1,	r14	;r3 As==01
    1216:	0f 48       	mov	r8,	r15	;
    1218:	b0 12 52 19 	call	#6482		;#0x1952
    printf("%d ",i);
    121c:	08 12       	push	r8		;
    121e:	30 12 02 12 	push	#4610		;#0x1202
    1222:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    for (j=200;j>=0;j-=50) {
    1226:	39 40 c8 00 	mov	#200,	r9	;#0x00c8
    122a:	21 52       	add	#4,	r1	;r2 As==10
    122c:	0a 48       	mov	r8,	r10	;
    122e:	0a 5a       	rla	r10		;
    1230:	0b 4a       	mov	r10,	r11	;
      write_current(i,j);
    1232:	0e 49       	mov	r9,	r14	;
    1234:	0f 48       	mov	r8,	r15	;
    1236:	b0 12 06 16 	call	#5638		;#0x1606
      delay_1_25mS(400);     
    123a:	3f 40 90 01 	mov	#400,	r15	;#0x0190
    123e:	b0 12 22 35 	call	#13602		;#0x3522
      convert_a2d(I_CONVERSION,pin_data[i].filtered_result,&conversion_result,i);
    1242:	0f 4a       	mov	r10,	r15	;
    1244:	0f 5f       	rla	r15		;
    1246:	0f 5f       	rla	r15		;
    1248:	0f 5f       	rla	r15		;
    124a:	0f 5f       	rla	r15		;
    124c:	0a 4b       	mov	r11,	r10	;
    124e:	0f 5b       	add	r11,	r15	;
    1250:	0f 5b       	add	r11,	r15	;
    1252:	0f 5b       	add	r11,	r15	;
    1254:	0c 48       	mov	r8,	r12	;
    1256:	3d 40 ce 07 	mov	#1998,	r13	;#0x07ce
    125a:	1e 4f 90 02 	mov	656(r15),r14	;
    125e:	5f 43       	mov.b	#1,	r15	;r3 As==01
    1260:	b0 12 38 55 	call	#21816		;#0x5538
      printf("%d ",conversion_result.integer);
    1264:	12 12 ce 07 	push	&0x07ce		;
    1268:	30 12 02 12 	push	#4610		;#0x1202
    126c:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    1270:	21 52       	add	#4,	r1	;r2 As==10
    1272:	39 50 ce ff 	add	#-50,	r9	;#0xffce
    1276:	39 b0 00 80 	bit	#-32768,r9	;#0x8000
    127a:	db 37       	jge	$-72     	;abs 0x1232
    }
    printf("\n\r");
    127c:	30 12 06 12 	push	#4614		;#0x1206
    1280:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    write_lla(i,0);
    1284:	0e 43       	clr	r14		;
    1286:	0f 48       	mov	r8,	r15	;
    1288:	b0 12 52 19 	call	#6482		;#0x1952
    128c:	21 53       	incd	r1		;
    128e:	18 53       	inc	r8		;
    1290:	38 90 19 00 	cmp	#25,	r8	;#0x0019
    1294:	bf 3b       	jl	$-128    	;abs 0x1214
  }
}
    1296:	38 41       	pop	r8		;
    1298:	39 41       	pop	r9		;
    129a:	3a 41       	pop	r10		;
    129c:	3b 41       	pop	r11		;
    129e:	30 41       	ret			

000012a0 <get_command>:

int get_command(char *command_buf) {
    12a0:	0b 12       	push	r11		;
    12a2:	0a 12       	push	r10		;
    12a4:	0b 4f       	mov	r15,	r11	;
  char ch;
  int counter=0;
    12a6:	0a 43       	clr	r10		;
  while(((ch=getchar())!='\n')&&(ch!='\r')&&(counter++<100)) {
    12a8:	b0 12 1c 15 	call	#5404		;#0x151c
    12ac:	4e 4f       	mov.b	r15,	r14	;
    12ae:	7f 90 0a 00 	cmp.b	#10,	r15	;#0x000a
    12b2:	0c 24       	jz	$+26     	;abs 0x12cc
    12b4:	7f 90 0d 00 	cmp.b	#13,	r15	;#0x000d
    12b8:	09 24       	jz	$+20     	;abs 0x12cc
    12ba:	0f 4a       	mov	r10,	r15	;
    12bc:	1a 53       	inc	r10		;
    12be:	3f 90 64 00 	cmp	#100,	r15	;#0x0064
    12c2:	04 34       	jge	$+10     	;abs 0x12cc
    *command_buf++=ch;
    12c4:	cb 4e 00 00 	mov.b	r14,	0(r11)	;
    12c8:	1b 53       	inc	r11		;
    12ca:	ee 3f       	jmp	$-34     	;abs 0x12a8
  }
  *command_buf++='\n';
    12cc:	fb 40 0a 00 	mov.b	#10,	0(r11)	;#0x000a
    12d0:	00 00 
  *command_buf=0;
    12d2:	cb 43 01 00 	mov.b	#0,	1(r11)	;r3 As==00
  return (counter);
}     
    12d6:	0f 4a       	mov	r10,	r15	;
    12d8:	3a 41       	pop	r10		;
    12da:	3b 41       	pop	r11		;
    12dc:	30 41       	ret			
    12de:	25 64       	addc	@r4,	r5	;
    12e0:	2e 25       	jz	$+606    	;abs 0x153e
    12e2:	64 20       	jnz	$+202    	;abs 0x13ac
	...

000012e6 <print_grid_v>:

void print_grid_v() {
    12e6:	0b 12       	push	r11		;
    12e8:	0a 12       	push	r10		;
    12ea:	09 12       	push	r9		;
  int i,j;
  for (i=0;i<5;i++) {
    12ec:	09 43       	clr	r9		;
    for (j=0;j<5;j++) {
    12ee:	0a 43       	clr	r10		;
    12f0:	0b 49       	mov	r9,	r11	;
    12f2:	0b 5b       	rla	r11		;
    12f4:	0b 59       	add	r9,	r11	;
    12f6:	0b 59       	add	r9,	r11	;
    12f8:	0b 59       	add	r9,	r11	;
      convert_a2d(V_CONVERSION,pin_data[i*5+j].filtered_result,&conversion_result,i*5+j); 
    12fa:	0f 4b       	mov	r11,	r15	;
    12fc:	0f 5a       	add	r10,	r15	;
    12fe:	0e 4f       	mov	r15,	r14	;
    1300:	0e 5e       	rla	r14		;
    1302:	0e 5e       	rla	r14		;
    1304:	0e 5e       	rla	r14		;
    1306:	0e 5e       	rla	r14		;
    1308:	0e 5e       	rla	r14		;
    130a:	0d 4f       	mov	r15,	r13	;
    130c:	0d 5d       	rla	r13		;
    130e:	0e 5d       	add	r13,	r14	;
    1310:	0e 5d       	add	r13,	r14	;
    1312:	0e 5d       	add	r13,	r14	;
    1314:	0c 4f       	mov	r15,	r12	;
    1316:	3d 40 ce 07 	mov	#1998,	r13	;#0x07ce
    131a:	1e 4e 90 02 	mov	656(r14),r14	;
    131e:	4f 43       	clr.b	r15		;
    1320:	b0 12 38 55 	call	#21816		;#0x5538
      printf("%d.%d ",conversion_result.integer,conversion_result.hundredth);
    1324:	12 12 d0 07 	push	&0x07d0		;
    1328:	12 12 ce 07 	push	&0x07ce		;
    132c:	30 12 de 12 	push	#4830		;#0x12de
    1330:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    1334:	31 50 06 00 	add	#6,	r1	;#0x0006
    1338:	1a 53       	inc	r10		;
    133a:	3a 90 05 00 	cmp	#5,	r10	;#0x0005
    133e:	dd 3b       	jl	$-68     	;abs 0x12fa
    }
    printf("\n\r");
    1340:	30 12 06 12 	push	#4614		;#0x1206
    1344:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    1348:	21 53       	incd	r1		;
    134a:	19 53       	inc	r9		;
    134c:	39 90 05 00 	cmp	#5,	r9	;#0x0005
    1350:	ce 3b       	jl	$-98     	;abs 0x12ee
  }
}
    1352:	39 41       	pop	r9		;
    1354:	3a 41       	pop	r10		;
    1356:	3b 41       	pop	r11		;
    1358:	30 41       	ret			

0000135a <print_grid_i>:

void print_grid_i() {
    135a:	0b 12       	push	r11		;
    135c:	0a 12       	push	r10		;
    135e:	09 12       	push	r9		;
    1360:	08 12       	push	r8		;
  int i,j;
  for (i=0;i<5;i++) {
    1362:	08 43       	clr	r8		;
    for (j=0;j<5;j++) {
    1364:	09 43       	clr	r9		;
    1366:	0a 48       	mov	r8,	r10	;
    1368:	0a 5a       	rla	r10		;
    136a:	0a 58       	add	r8,	r10	;
    136c:	0a 58       	add	r8,	r10	;
    136e:	0a 58       	add	r8,	r10	;
      write_lla(i*5+j,1);
    1370:	0b 4a       	mov	r10,	r11	;
    1372:	0b 59       	add	r9,	r11	;
    1374:	1e 43       	mov	#1,	r14	;r3 As==01
    1376:	0f 4b       	mov	r11,	r15	;
    1378:	b0 12 52 19 	call	#6482		;#0x1952
      write_current(i*5+j,200);
    137c:	3e 40 c8 00 	mov	#200,	r14	;#0x00c8
    1380:	0f 4b       	mov	r11,	r15	;
    1382:	b0 12 06 16 	call	#5638		;#0x1606
      delay_1_25mS(500);
    1386:	3f 40 f4 01 	mov	#500,	r15	;#0x01f4
    138a:	b0 12 22 35 	call	#13602		;#0x3522
      convert_a2d(I_CONVERSION,pin_data[i*5+j].filtered_result,&conversion_result,i*5+j); 
    138e:	0f 4b       	mov	r11,	r15	;
    1390:	0f 5f       	rla	r15		;
    1392:	0f 5f       	rla	r15		;
    1394:	0f 5f       	rla	r15		;
    1396:	0f 5f       	rla	r15		;
    1398:	0f 5f       	rla	r15		;
    139a:	0e 4b       	mov	r11,	r14	;
    139c:	0e 5e       	rla	r14		;
    139e:	0f 5e       	add	r14,	r15	;
    13a0:	0f 5e       	add	r14,	r15	;
    13a2:	0f 5e       	add	r14,	r15	;
    13a4:	0c 4b       	mov	r11,	r12	;
    13a6:	3d 40 ce 07 	mov	#1998,	r13	;#0x07ce
    13aa:	1e 4f 90 02 	mov	656(r15),r14	;
    13ae:	5f 43       	mov.b	#1,	r15	;r3 As==01
    13b0:	b0 12 38 55 	call	#21816		;#0x5538
      printf("%d ",conversion_result.integer);
    13b4:	12 12 ce 07 	push	&0x07ce		;
    13b8:	30 12 02 12 	push	#4610		;#0x1202
    13bc:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
      write_lla(i*5+j,0);
    13c0:	0e 43       	clr	r14		;
    13c2:	0f 4b       	mov	r11,	r15	;
    13c4:	b0 12 52 19 	call	#6482		;#0x1952
    13c8:	21 52       	add	#4,	r1	;r2 As==10
    13ca:	19 53       	inc	r9		;
    13cc:	39 90 05 00 	cmp	#5,	r9	;#0x0005
    13d0:	cf 3b       	jl	$-96     	;abs 0x1370
    }
    printf("\n\r");
    13d2:	30 12 06 12 	push	#4614		;#0x1206
    13d6:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    13da:	21 53       	incd	r1		;
    13dc:	18 53       	inc	r8		;
    13de:	38 90 05 00 	cmp	#5,	r8	;#0x0005
    13e2:	c0 3b       	jl	$-126    	;abs 0x1364
  }
}
    13e4:	38 41       	pop	r8		;
    13e6:	39 41       	pop	r9		;
    13e8:	3a 41       	pop	r10		;
    13ea:	3b 41       	pop	r11		;
    13ec:	30 41       	ret			

000013ee <init_sys>:


void init_sys(void) {
  unsigned int i;
  WDTCTL = WDTPW + WDTHOLD;    // Stop watchdog
    13ee:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
    13f2:	20 01 
  init_pins();                 // Setup the discrete I/O - important to enable 8Mhz crystal 
    13f4:	b0 12 2c 15 	call	#5420		;#0x152c
  for (i = 0xFFFF;i>0;i--);    // Delay for XTAL and oscillator to fire up and settle
    13f8:	3f 43       	mov	#-1,	r15	;r3 As==11
    13fa:	3f 53       	add	#-1,	r15	;r3 As==11
    13fc:	fe 23       	jnz	$-2      	;abs 0x13fa
  Set_DCO();                   // calibrate DCO using the 32.768Khz crystal to 3.686400 Mhz  
    13fe:	b0 12 40 14 	call	#5184		;#0x1440
  init_spi_0();
    1402:	b0 12 a0 14 	call	#5280		;#0x14a0
  init_serial_1();             // initialize USB virtual serial port
    1406:	b0 12 da 14 	call	#5338		;#0x14da
  init_timer_a();              
    140a:	b0 12 82 15 	call	#5506		;#0x1582
  init_dac();
    140e:	b0 12 96 15 	call	#5526		;#0x1596
  init_a2d();
    1412:	b0 12 a6 15 	call	#5542		;#0x15a6
  clear_latches();
    1416:	b0 12 30 14 	call	#5168		;#0x1430
  _EINT();                     // Global interrupt enable
    141a:	32 d2       	eint			
}
    141c:	30 41       	ret			

0000141e <system_reset>:

void system_reset(void) {
  _DINT();
    141e:	32 c2       	dint			
  WDTCTL = WDTPW|WDTCNTCL|WDTIS_3;  // start the watchdog, SMCLK ticks until reset 
    1420:	b2 40 0b 5a 	mov	#23051,	&0x0120	;#0x5a0b
    1424:	20 01 
  P4OUT=0x8F;
    1426:	f2 40 8f ff 	mov.b	#-113,	&0x001d	;#0xff8f
    142a:	1d 00 
  while (1);                        // wedge here until the dog resets the core
    142c:	ff 3f       	jmp	$+0      	;abs 0x142c
}
    142e:	30 41       	ret			

00001430 <clear_latches>:

void clear_latches(void) {
  P1OUT=0x00;
    1430:	c2 43 21 00 	mov.b	#0,	&0x0021	;r3 As==00
  P5OUT=0x3F;
    1434:	f2 40 3f 00 	mov.b	#63,	&0x0031	;#0x003f
    1438:	31 00 
  P5OUT=0x00;
    143a:	c2 43 31 00 	mov.b	#0,	&0x0031	;r3 As==00
}
    143e:	30 41       	ret			

00001440 <Set_DCO>:

void Set_DCO (void) { 
  unsigned int Compare, Oldcapture = 0;
    1440:	0e 43       	clr	r14		;
  CCTL0 = 0x0000;                       // this too - see next comment
    1442:	82 43 62 01 	mov	#0,	&0x0162	;r3 As==00
  CCTL1 = 0x0000;                       // see if this fixes the clock cal issue
    1446:	82 43 64 01 	mov	#0,	&0x0164	;r3 As==00
  CCTL2 = 0x0000;
    144a:	82 43 66 01 	mov	#0,	&0x0166	;r3 As==00
  CCTL2 = CCIS0 + CM0 + CAP;            // Define CCR2, CAP, ACLK
    144e:	b2 40 00 51 	mov	#20736,	&0x0166	;#0x5100
    1452:	66 01 
  TACTL = TASSEL1 + TACLR + MC1;        // SMCLK, continous mode
    1454:	b2 40 24 02 	mov	#548,	&0x0160	;#0x0224
    1458:	60 01 
  while (1) {
    while ((CCTL2 & CCIFG) != CCIFG);   // Wait until capture occured!
    145a:	92 b3 66 01 	bit	#1,	&0x0166	;r3 As==01
    145e:	fd 27       	jz	$-4      	;abs 0x145a
    CCTL2 &= ~CCIFG;                    // Capture occured, clear flag
    1460:	92 c3 66 01 	bic	#1,	&0x0166	;r3 As==01
    Compare = CCR2;                     // Get current captured SMCLK
    Compare = Compare - Oldcapture;     // SMCLK difference
    1464:	1f 42 76 01 	mov	&0x0176,r15	;0x0176
    1468:	0f 8e       	sub	r14,	r15	;
    Oldcapture = CCR2;                  // Save current captured SMCLK
    146a:	1e 42 76 01 	mov	&0x0176,r14	;0x0176
    if (DELTA == Compare) {
    146e:	3f 90 84 03 	cmp	#900,	r15	;#0x0384
    1472:	11 24       	jz	$+36     	;abs 0x1496
      break;                            // if equal, leave "while(1)"
    }
    else if (DELTA < Compare) {         // DCO is too fast, slow it down
    1474:	3f 90 85 03 	cmp	#901,	r15	;#0x0385
    1478:	06 2c       	jc	$+14     	;abs 0x1486
      DCOCTL--;
      if (DCOCTL == 0xFF) {             // Did DCO roll under?
	BCSCTL1--;                      // Select next lower RSEL
      }
    }
    else {                      
      DCOCTL++;
    147a:	d2 53 56 00 	inc.b	&0x0056		;
      if (DCOCTL == 0x00) {             // Did DCO roll over?
    147e:	ed 23       	jnz	$-36     	;abs 0x145a
        BCSCTL1++;                      // Select next higher RSEL
    1480:	d2 53 57 00 	inc.b	&0x0057		;
    1484:	ea 3f       	jmp	$-42     	;abs 0x145a
    1486:	f2 53 56 00 	add.b	#-1,	&0x0056	;r3 As==11
    148a:	f2 93 56 00 	cmp.b	#-1,	&0x0056	;r3 As==11
    148e:	e5 23       	jnz	$-52     	;abs 0x145a
    1490:	f2 53 57 00 	add.b	#-1,	&0x0057	;r3 As==11
    1494:	e2 3f       	jmp	$-58     	;abs 0x145a
      }
    }
  }  
  CCTL2 = 0;                              // Stop CCR2 function
    1496:	82 43 66 01 	mov	#0,	&0x0166	;r3 As==00
  TACTL = 0;                              // Stop Timer_A
    149a:	82 43 60 01 	mov	#0,	&0x0160	;r3 As==00
}
    149e:	30 41       	ret			

000014a0 <init_spi_0>:

void init_spi_0 (void) {
  UCTL0 |= SWRST;                // Place USART into RESET 
    14a0:	d2 d3 70 00 	bis.b	#1,	&0x0070	;r3 As==01
  UCTL0  = CHAR|SYNC|MM|SWRST;   // 8-bit,SPI,Master,Hold Module in RESET
    14a4:	f2 40 17 00 	mov.b	#23,	&0x0070	;#0x0017
    14a8:	70 00 
  UTCTL0 = CKPH|SSEL1|SSEL0|STC; // falling edge out,SMCLK,3-pin SPI (Works for LTC Parts)
    14aa:	f2 40 b2 ff 	mov.b	#-78,	&0x0071	;#0xffb2
    14ae:	71 00 
  // UTCTL0 = CKPL|SSEL1|SSEL0|STC; // falling edge out,SMCLK,3-pin SPI (Works for AT parts)
  // LTC1660 DAC can handle a 5Mhz SCLK
  // AT45DB041 Flash can handle 20Mhz SCLK 
  UBR00  = 0x02;                 // Run at SMCLK/2 - 8Mhz/2=4Mhz for normal operation
    14b0:	e2 43 74 00 	mov.b	#2,	&0x0074	;r3 As==10
  UBR10  = 0x00;                 // Upper half of SCLK control 
    14b4:	c2 43 75 00 	mov.b	#0,	&0x0075	;r3 As==00
  ME1    = USPIE0;               // Enable the SPI module for UART0
    14b8:	f2 40 40 00 	mov.b	#64,	&0x0004	;#0x0040
    14bc:	04 00 
  UMCTL0 = 0x00;                 // Modulation control not used by SPI set to 0 according to User's Guide
    14be:	c2 43 73 00 	mov.b	#0,	&0x0073	;r3 As==00
  UCTL0 &= ~SWRST;               // release USART from RESET 
    14c2:	d2 c3 70 00 	bic.b	#1,	&0x0070	;r3 As==01
}
    14c6:	30 41       	ret			

000014c8 <send_spi_byte>:

unsigned char send_spi_byte(unsigned char data_byte) {
  TXBUF0 = data_byte;        // buffer 1 write  
    14c8:	c2 4f 77 00 	mov.b	r15,	&0x0077	;
  while(!(UTCTL0&0x01));     // wait until transmitter empty
    14cc:	d2 b3 71 00 	bit.b	#1,	&0x0071	;r3 As==01
    14d0:	fd 27       	jz	$-4      	;abs 0x14cc
  return(RXBUF0);            // return any received data
    14d2:	5f 42 76 00 	mov.b	&0x0076,r15	;0x0076
    14d6:	7f f3       	and.b	#-1,	r15	;r3 As==11
                             // No data returned from DAC
                             // SPI flash returns read data
}
    14d8:	30 41       	ret			

000014da <init_serial_1>:

void init_serial_1 (void) {
  char temp;
  // Data Comm Port - Connected to FT2232 Port A
  UCTL1 = CHAR + SWRST;
    14da:	f2 40 11 00 	mov.b	#17,	&0x0078	;#0x0011
    14de:	78 00 
  UTCTL1 = SSEL1 + SSEL0;
    14e0:	f2 40 30 00 	mov.b	#48,	&0x0079	;#0x0030
    14e4:	79 00 

  // 19.2k init (3.686400 Mhz Clock)
  UBR01=0xC0; 
    14e6:	f2 40 c0 ff 	mov.b	#-64,	&0x007c	;#0xffc0
    14ea:	7c 00 
  UBR11=0x00;
    14ec:	c2 43 7d 00 	mov.b	#0,	&0x007d	;r3 As==00
  UMCTL1=0x00; 
    14f0:	c2 43 7b 00 	mov.b	#0,	&0x007b	;r3 As==00
  ME2 = 0x30;
    14f4:	f2 40 30 00 	mov.b	#48,	&0x0005	;#0x0030
    14f8:	05 00 
  UCTL1 = CHAR;
    14fa:	f2 40 10 00 	mov.b	#16,	&0x0078	;#0x0010
    14fe:	78 00 
  temp=RXBUF1;  // Flush the RX buffer 
    1500:	5f 42 7e 00 	mov.b	&0x007e,r15	;0x007e
  temp=RXBUF1;  
    1504:	5f 42 7e 00 	mov.b	&0x007e,r15	;0x007e
}
    1508:	30 41       	ret			

0000150a <putchar>:
    
int putchar(int in_char){
    150a:	0e 4f       	mov	r15,	r14	;
  while (!(IFG2&UTXIFG1));
    150c:	f2 b0 20 00 	bit.b	#32,	&0x0003	;#0x0020
    1510:	03 00 
    1512:	fc 27       	jz	$-6      	;abs 0x150c
  TXBUF1=in_char;
    1514:	c2 4e 7f 00 	mov.b	r14,	&0x007f	;
  return(0);
}
    1518:	0f 43       	clr	r15		;
    151a:	30 41       	ret			

0000151c <getchar>:

char getchar(void) {
  char rx_data;
  while (!(IFG2&URXIFG1));
    151c:	f2 b0 10 00 	bit.b	#16,	&0x0003	;#0x0010
    1520:	03 00 
    1522:	fc 27       	jz	$-6      	;abs 0x151c
  rx_data= RXBUF1;
    1524:	5f 42 7e 00 	mov.b	&0x007e,r15	;0x007e
  return (rx_data);
    1528:	8f 11       	sxt	r15		;
}
    152a:	30 41       	ret			

0000152c <init_pins>:

void init_pins(void) {
 /*!
  * <i><b>P1 Usage</b></i> 
  * <table>
  * <tr><th>Pin<th>Function<th>Direction<th>Select
  * <tr><td>P1.0<td>Latch_Data(0)<td>Output<td>Dio  
  * <tr><td>P1.1<td>Latch_Data(1)<td>Output<td>Dio    
  * <tr><td>P1.2<td>Latch_Data(2)<td>Output<td>Dio    
  * <tr><td>P1.3<td>Latch_Data(3)<td>Output<td>Dio    
  * <tr><td>P1.4<td>Latch_Data(4)<td>Output<td>Dio    
  * <tr><td>P1.5<td>Latch_Data(5)<td>Output<td>Dio    
  * <tr><td>P1.6<td>Latch_Data(6)<td>Output<td>Dio    
  * <tr><td>P1.7<td>Latch_Data(7)<td>Output<td>Dio    
  * </table>
  */
  P1SEL = 0x00;
    152c:	c2 43 26 00 	mov.b	#0,	&0x0026	;r3 As==00
  P1OUT = 0x00;
    1530:	c2 43 21 00 	mov.b	#0,	&0x0021	;r3 As==00
  P1DIR = 0xFF;
    1534:	f2 43 22 00 	mov.b	#-1,	&0x0022	;r3 As==11

 /*!
  * <i><b>P2 Usage</b></i> 
  * <table>
  * <tr><th>Pin<th>Function<th>Direction<th>Select
  * <tr><td>P2.0<td>LED_OUT(24)<td>Output<td>Dio    
  * <tr><td>P2.1<td>LLA_ENABLE(24)<td>Output<td>Dio    
  * <tr><td>P2.2<td>BSL(0) FTDI CHB TXD<td>Input<td>Dio  
  * <tr><td>P2.3<td>No Connect<td>Output<td>Dio    
  * <tr><td>P2.4<td>No Connect<td>Output<td>Dio    
  * <tr><td>P2.5<td>100k Pull-up Rosc<td>Input<td>Dio    
  * <tr><td>P2.6<td>No Connect<td>Output<td>Dio    
  * <tr><td>P2.7<td>FTDI nRTS<td>Input<td>Dio    
  * </table>
  */
  P2SEL = 0x00;
    1538:	c2 43 2e 00 	mov.b	#0,	&0x002e	;r3 As==00
  P2OUT = 0x00;
    153c:	c2 43 29 00 	mov.b	#0,	&0x0029	;r3 As==00
  P2DIR = 0x5B;
    1540:	f2 40 5b 00 	mov.b	#91,	&0x002a	;#0x005b
    1544:	2a 00 

 /*!
  * <i><b>P3 Usage</b></i> 
  * <table>
  * <tr><th>Pin<th>Function<th>Direction<th>Select
  * <tr><td>P3.0<td>FTDI nCTS<td>Output<td>Dio
  * <tr><td>P3.1<td>SIMO-0<td>Output<td><b>Sel</b>
  * <tr><td>P3.2<td>SOMI-0<td>Input<td><b>Sel</b>
  * <tr><td>P3.3<td>SCK-0<td>Output<td><b>Sel</b>
  * <tr><td>P3.4<td>UART0 TX<td>Output<td><b>Sel</b>
  * <tr><td>P3.5<td>UART0 RX<td>Input<td><b>Sel</b>
  * <tr><td>P3.6<td>UART1 TX<td>Output<td><b>Sel</b>
  * <tr><td>P3.7<td>UART1 RX<td>Input<td><b>Sel</b>
  * </table>
  */
  P3SEL = 0xFE;
    1546:	f2 40 fe ff 	mov.b	#-2,	&0x001b	;#0xfffe
    154a:	1b 00 
  P3OUT = 0x00;
    154c:	c2 43 19 00 	mov.b	#0,	&0x0019	;r3 As==00
  P3DIR = 0x5B;
    1550:	f2 40 5b 00 	mov.b	#91,	&0x001a	;#0x005b
    1554:	1a 00 

 /*!
  * <i><b>P4 Usage</b></i> 
  * <table>
  * <tr><th>Pin<th>Function<th>Direction<th>Select
  * <tr><td>P4.0<td>SPI nCS DAC CH 0-7<td>Output<td>Dio
  * <tr><td>P4.1<td>SPI nCS DAC CH 8-15<td>Output<td>Dio
  * <tr><td>P4.2<td>SPI nCS DAC CH 16-23<td>Output<td>Dio
  * <tr><td>P4.3<td>SPI nCS Serial Flash<td>Output<td>Dio
  * <tr><td>P4.4<td>Analog Mux Select (0)<td>Output<td>Dio
  * <tr><td>P4.5<td>Analog Mux Select (1)<td>Output<td>Dio
  * <tr><td>P4.6<td>Analog Mux Select (2)<td>Output<td>Dio
  * <tr><td>P4.7<td>8Mhz Osc Enable<td>Output<td>Dio
  * </table>
  */
  P4SEL = 0x00;
    1556:	c2 43 1f 00 	mov.b	#0,	&0x001f	;r3 As==00
  P4OUT = 0x8F;   
    155a:	f2 40 8f ff 	mov.b	#-113,	&0x001d	;#0xff8f
    155e:	1d 00 
  P4DIR = 0xFF; 
    1560:	f2 43 1e 00 	mov.b	#-1,	&0x001e	;r3 As==11
 /*!
  * <i><b>P5 Usage</b></i> 
  * <table>
  * <tr><th>Pin<th>Function<th>Direction<th>Select
  * <tr><td>P5.0<td>LED Latch Clk CH 0-7<td>Output<td>Dio
  * <tr><td>P5.1<td>LED Latch Clk CH 8-15<td>Output<td>Dio
  * <tr><td>P5.2<td>LED Latch Clk CH 16-23<td>Output<td>Dio
  * <tr><td>P5.3<td>LLA Latch Clk CH 0-7<td>Output<td>Dio
  * <tr><td>P5.4<td>LLA Latch Clk CH 8-15<td>Output<td>Dio
  * <tr><td>P5.5<td>LLA Latch Clk CH 16-23<td>Output<td>Dio
  * <tr><td>P5.6<td>No Connect<td>Output<td>Dio
  * <tr><td>P5.7<td>No Connect<td>Output<td>Dio
  * </table>
  */
  P5SEL = 0x00;
    1564:	c2 43 33 00 	mov.b	#0,	&0x0033	;r3 As==00
  P5OUT = 0x00;
    1568:	c2 43 31 00 	mov.b	#0,	&0x0031	;r3 As==00
  P5DIR = 0xFF; 
    156c:	f2 43 32 00 	mov.b	#-1,	&0x0032	;r3 As==11

 /*!
  * <i><b>P6 Usage</b></i> 
  * <table>
  * <tr><th>Pin<th>Function<th>Direction<th>Select
  * <tr><td>P6.0<td>VMUX_OUT(0)<td>Input<td><b>Sel</b>
  * <tr><td>P6.1<td>VMUX_OUT(1)<td>Input<td><b>Sel</b>
  * <tr><td>P6.2<td>VMUX_OUT(2)<td>Input<td><b>Sel</b>
  * <tr><td>P6.3<td>VMUX_OUT(3)<td>Input<td><b>Sel</b>
  * <tr><td>P6.4<td>VMUX_OUT(4)<td>Input<td><b>Sel</b>
  * <tr><td>P6.5<td>No Connect<td>Input<td>Dio
  * <tr><td>P6.6<td>DAC Control CH24<td>Input (analog output)<td><b>Sel</b>
  * <tr><td>P6.7<td>No Connect<td>Input<td>Dio
  * </table>
  */
  P6SEL = 0x5F;
    1570:	f2 40 5f 00 	mov.b	#95,	&0x0037	;#0x005f
    1574:	37 00 
  P6OUT = 0x00;
    1576:	c2 43 35 00 	mov.b	#0,	&0x0035	;r3 As==00
  P6DIR = 0xA0; 
    157a:	f2 40 a0 ff 	mov.b	#-96,	&0x0036	;#0xffa0
    157e:	36 00 
}
    1580:	30 41       	ret			

00001582 <init_timer_a>:

void init_timer_a(void) {
  // SMCLK SOURCE (3.686400Mhz)
  // Timer in Continuous Mode 
  // Clear the timer register (TAR)
  // Compare 1 used as main time base at 1.25mS. 
  TACTL=TASSEL1|MC1|TACLR;  // Timer a sourced from 3.686400 Mhz SMCLK, continuous mode
    1582:	b2 40 24 02 	mov	#548,	&0x0160	;#0x0224
    1586:	60 01 
  TACCR0=0x900;             // 100uS interrupt rate
    1588:	b2 40 00 09 	mov	#2304,	&0x0172	;#0x0900
    158c:	72 01 
  TACCTL0=CCIE;             // Enable the timer interrupt
    158e:	b2 40 10 00 	mov	#16,	&0x0162	;#0x0010
    1592:	62 01 
}
    1594:	30 41       	ret			

00001596 <init_dac>:

void init_dac(void) {
  // Dac 0 Controls Sources 
  // Dac 1 Controls Sinks
  // Parameters
  // [14-13] DAC12SREFx (11) Use VeREF+->3.3V 
  // [12] DAC12RES (0) 12-Bit Resolution  
  // [11-10] DAC12LSELx (00) Load DAC on write to the DAC12_0DAT register
  // [9] DAC12CALON (1) Calibration active, poll until this bit is clear 
  // [8] DAC12IR (1) Input range = 1x
  // [7-5] DAC12AMPx (111) High Speed, High Current 
  // [4] DAC12DF (0) Straight Binary 
  // [3] DAC12IE (0) Interrupt Disabled
  // [2] DAC12IFG (x) Interrupt flag
  // [1] DAC12ENC (1) Enable DAC conversion 
  // [0] DAC12GRP (0) Channel grouping disabled 
  DAC12_0CTL = DAC12SREF1|DAC12SREF0|DAC12CALON|DAC12IR|DAC12AMP2|DAC12AMP1|DAC12AMP0|DAC12ENC;
    1596:	b2 40 e2 63 	mov	#25570,	&0x01c0	;#0x63e2
    159a:	c0 01 
  while (DAC12_0CTL&DAC12CALON);  // spin here until cal complete
    159c:	b2 b0 00 02 	bit	#512,	&0x01c0	;#0x0200
    15a0:	c0 01 
    15a2:	fc 23       	jnz	$-6      	;abs 0x159c
}
    15a4:	30 41       	ret			

000015a6 <init_a2d>:

/*!  ADC12 Initialization Function
 * \section AA Overview
 * This project utilizes the first 5 channels of the A/D. Each of the channels is setup to use the 3.3V supply as the 
 * Reference. <br>
 *
 * \section BB Converter Usage
 * <table> 
 * <tr><th>Pin<th>Function<th>Description
 * <tr><td>P6.0<td>A/D 0<td>Reads External Mux for CH 0-7
 * <tr><td>P6.1<td>A/D 1<td>Reads External Mux for CH 8-15
 * <tr><td>P6.2<td>A/D 2<td>Reads External Mux for CH 16-23
 * <tr><td>P6.3<td>A/D 3<td>Reads CH24 
 * <tr><td>P6.3<td>A/D 4<td>Reads VOP Voltage 10k//2.5k divider 
 * </table>
 * \section CC VOP Calculation
 * VOP_Voltage = AD_Counts_VOP/248  
 * \section D Converter Sampling Time Usage
 * t_sample>(Rs+2k)x9.011x40pf+800nS; Rs is the channel external input resistance - 200 ohms for uEAC<br>
 * t_sample>2200x9.011x40pf+800nS=1.6uS 
 * 1.6uS = 12.8 clocks of the 8Mhz oscillator. Choose 16 for the sample clock divisor. 
 */ 
void init_a2d (void) {
  // ADC12 Parameters
  // Sample Hold Time - 16 clocks 
  /*! \section D ADC12CTRL0 Config 
  */
  ADC12CTL0 = SHT1_2|SHT0_2|MSC|REF2_5V|REFON|ADC12ON; // sampling time set to 3.2uS 
    15a6:	b2 40 f0 22 	mov	#8944,	&0x01a0	;#0x22f0
    15aa:	a0 01 
  ADC12CTL1 = SHP|CONSEQ0;                             // sample sequence of channels and then stop 
    15ac:	b2 40 02 02 	mov	#514,	&0x01a2	;#0x0202
    15b0:	a2 01 
  ADC12MCTL0 =  SREF_2|INCH_0;                         // Use Avcc (3.3V) as the reference, channels (0-7)   
    15b2:	f2 40 20 00 	mov.b	#32,	&0x0080	;#0x0020
    15b6:	80 00 
  ADC12MCTL1 =  SREF_2|INCH_1;                         // Use Avcc (3.3V) as the reference, channels (8-15)   
    15b8:	f2 40 21 00 	mov.b	#33,	&0x0081	;#0x0021
    15bc:	81 00 
  ADC12MCTL2 =  SREF_2|INCH_2;                         // Use Avcc (3.3V) as the reference, channels (16-23)   
    15be:	f2 40 22 00 	mov.b	#34,	&0x0082	;#0x0022
    15c2:	82 00 
  ADC12MCTL3 =  EOS|SREF_2|INCH_3;                     // Use Avcc (3.3V) as the reference, channels (24)    
    15c4:	f2 40 a3 ff 	mov.b	#-93,	&0x0083	;#0xffa3
    15c8:	83 00 
}
    15ca:	30 41       	ret			

000015cc <start_a2d_converter>:

void start_a2d_converter(void) {
  ADC12CTL0|=ENC|ADC12SC;                    // start the converter 
    15cc:	b2 d0 03 00 	bis	#3,	&0x01a0	;#0x0003
    15d0:	a0 01 
}  
    15d2:	30 41       	ret			

000015d4 <stop_a2d_converter>:

void stop_a2d_converter(void) {
  ADC12CTL0&=~ENC;                           // stop the converter 
    15d4:	a2 c3 a0 01 	bic	#2,	&0x01a0	;r3 As==10
}  
    15d8:	30 41       	ret			

000015da <wait_a2d_busy>:

int wait_a2d_busy(void) {
  int count=0;
    15da:	0e 43       	clr	r14		;
  while (ADC12CTL1&ADC12BUSY) count++;
    15dc:	92 b3 a2 01 	bit	#1,	&0x01a2	;r3 As==01
    15e0:	04 24       	jz	$+10     	;abs 0x15ea
    15e2:	1e 53       	inc	r14		;
    15e4:	92 b3 a2 01 	bit	#1,	&0x01a2	;r3 As==01
    15e8:	fc 23       	jnz	$-6      	;abs 0x15e2
  return count;
}
    15ea:	0f 4e       	mov	r14,	r15	;
    15ec:	30 41       	ret			

000015ee <write_analog_mux>:

void write_analog_mux(unsigned char select) {
  select&=0x07;   // clamp the input to 7 
    15ee:	7f f0 07 00 	and.b	#7,	r15	;#0x0007
  select<<=4;     // shift to align with bits 6-4 (mux select bits)
    15f2:	4f 5f       	rla.b	r15		;
    15f4:	4f 5f       	rla.b	r15		;
    15f6:	4f 5f       	rla.b	r15		;
    15f8:	4f 5f       	rla.b	r15		;
  P4OUT&=0x8F;    // clear the mux select bits
    15fa:	f2 f0 8f ff 	and.b	#-113,	&0x001d	;#0xff8f
    15fe:	1d 00 
  P4OUT|=select;  // "or" in the new select value
    1600:	c2 df 1d 00 	bis.b	r15,	&0x001d	;
}
    1604:	30 41       	ret			

00001606 <write_current>:

void write_current(int channel,int value_uA) {
    1606:	0d 4f       	mov	r15,	r13	;
    1608:	0f 4e       	mov	r14,	r15	;
  if (value_uA>200) value_uA=200;
    160a:	3e 90 c9 00 	cmp	#201,	r14	;#0x00c9
    160e:	02 38       	jl	$+6      	;abs 0x1614
    1610:	3f 40 c8 00 	mov	#200,	r15	;#0x00c8
  if (value_uA<-200) value_uA=-200;
    1614:	3f 90 38 ff 	cmp	#-200,	r15	;#0xff38
    1618:	02 34       	jge	$+6      	;abs 0x161e
    161a:	3f 40 38 ff 	mov	#-200,	r15	;#0xff38
  if (value_uA==0) {
    161e:	0f 93       	cmp	#0,	r15	;r3 As==00
    1620:	0d 20       	jnz	$+28     	;abs 0x163c
    write_dac(channel,(dac_translation[200]+ueac_state.pin_cal[channel].i_zero_offset));
    1622:	0f 4d       	mov	r13,	r15	;
    1624:	0f 5f       	rla	r15		;
    1626:	0f 5f       	rla	r15		;
    1628:	5f 4f c9 06 	mov.b	1737(r15),r15	;
    162c:	8f 11       	sxt	r15		;
    162e:	1f 52 64 27 	add	&0x2764,r15	;0x2764
    1632:	0e 4f       	mov	r15,	r14	;
    1634:	0f 4d       	mov	r13,	r15	;
    1636:	b0 12 56 16 	call	#5718		;#0x1656
  }
  else {
    write_dac(channel,dac_translation[200-value_uA]+ueac_state.pin_cal[channel].i_200uA_offset);
  }
}
    163a:	30 41       	ret			
    163c:	3e 40 c8 00 	mov	#200,	r14	;#0x00c8
    1640:	0e 8f       	sub	r15,	r14	;
    1642:	0e 5e       	rla	r14		;
    1644:	0f 4d       	mov	r13,	r15	;
    1646:	0f 5f       	rla	r15		;
    1648:	0f 5f       	rla	r15		;
    164a:	5f 4f c8 06 	mov.b	1736(r15),r15	;
    164e:	8f 11       	sxt	r15		;
    1650:	1f 5e d4 25 	add	9684(r14),r15	;
    1654:	ee 3f       	jmp	$-34     	;abs 0x1632

00001656 <write_dac>:

void write_dac(int channel,int value) {
    1656:	21 83       	decd	r1		;
    1658:	0d 4f       	mov	r15,	r13	;
    165a:	81 4e 00 00 	mov	r14,	0(r1)	;
  // write_dac(channel,value)
  // channel = 0-24 where the channels are the control voltages for the current sources. The current 
  // sources are labeled starting at the top left corner as follows.
  //  0  1  2  3  4
  //  5  6  7  8  9
  // 10 11 12 13 14
  // 15 16 17 18 19
  // 20 21 22 23 24
  //
  // Value = 0-1023 (10-bit) where the number represents a control voltage that is 0-3.3v. Each bit represents 
  // a voltage of 3.3v/1023 or 3.22mV. 
  //
  // Hardware Note: Channels 0-23 are implemented by external SPI octal dacs (Linear LTC1660 components). Channel 
  // 24 is implemented using DAC0 on the MSP430 
  // 
  // Initial Version BH 11/1/05

  if (channel < 8) {
    165e:	3f 92       	cmp	#8,	r15	;r2 As==11
    1660:	1c 34       	jge	$+58     	;abs 0x169a
    P4OUT&=~0x01;                                   // assert the proper chip select
    1662:	d2 c3 1d 00 	bic.b	#1,	&0x001d	;r3 As==01
    channel++;                                      // increment the channel number LTC1660 channels run from 1-8   
    1666:	1d 53       	inc	r13		;
  }           
  else if (channel < 16) {
    P4OUT&=~0x02;                                   // assert the proper chip select
    channel-=7;                                     // bring channel number into range 1-8
  } 
  else if (channel < 24) {
    P4OUT&=~0x04;                                   // assert the proper chip select
    channel-=15;                                    // bring channel number into range 1-8
  }
  else if (channel == 24) {
    DAC12_0DAT=value<<2;                            // Shift up to a 12-bit number and write to the MSP430 DAC0 
    return;                                         // This is all to do for the MSP430 DAC case, exit...
  }
  else {                                            // channel number provided is too large, exit... 
    return;
  }
  value=(value&0x03FF)<<2;                          // mask and shift the value to align properly in the dac sentence
    1668:	2f 41       	mov	@r1,	r15	;
    166a:	3f f0 ff 03 	and	#1023,	r15	;#0x03ff
    166e:	0f 5f       	rla	r15		;
    1670:	0f 5f       	rla	r15		;
    1672:	81 4f 00 00 	mov	r15,	0(r1)	;
  channel<<=4;
    1676:	0f 4d       	mov	r13,	r15	;
    1678:	0f 5f       	rla	r15		;
    167a:	0f 5f       	rla	r15		;
    167c:	0f 5f       	rla	r15		;
    167e:	0f 5f       	rla	r15		;
  *(((unsigned char *) &value)+1)|=((unsigned char) channel); // "or" in the channel number to the value data
    1680:	5f d1 01 00 	bis.b	1(r1),	r15	;
    1684:	c1 4f 01 00 	mov.b	r15,	1(r1)	;
  send_spi_byte(*(((unsigned char *) &value)+1));             // send the high byte 
    1688:	b0 12 c8 14 	call	#5320		;#0x14c8
  send_spi_byte(*((unsigned char *) &value));                 // send the high byte 
    168c:	6f 41       	mov.b	@r1,	r15	;
    168e:	b0 12 c8 14 	call	#5320		;#0x14c8
  P4OUT|=0x0F;                                                // deassert all of the spi dac chip selects   
    1692:	f2 d0 0f 00 	bis.b	#15,	&0x001d	;#0x000f
    1696:	1d 00 
    1698:	18 3c       	jmp	$+50     	;abs 0x16ca
    169a:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    169e:	05 34       	jge	$+12     	;abs 0x16aa
    16a0:	e2 c3 1d 00 	bic.b	#2,	&0x001d	;r3 As==10
    16a4:	3d 50 f9 ff 	add	#-7,	r13	;#0xfff9
    16a8:	df 3f       	jmp	$-64     	;abs 0x1668
    16aa:	3f 90 18 00 	cmp	#24,	r15	;#0x0018
    16ae:	05 34       	jge	$+12     	;abs 0x16ba
    16b0:	e2 c2 1d 00 	bic.b	#4,	&0x001d	;r2 As==10
    16b4:	3d 50 f1 ff 	add	#-15,	r13	;#0xfff1
    16b8:	d7 3f       	jmp	$-80     	;abs 0x1668
    16ba:	3f 90 18 00 	cmp	#24,	r15	;#0x0018
    16be:	05 20       	jnz	$+12     	;abs 0x16ca
    16c0:	2f 41       	mov	@r1,	r15	;
    16c2:	0f 5f       	rla	r15		;
    16c4:	0f 5f       	rla	r15		;
    16c6:	82 4f c8 01 	mov	r15,	&0x01c8	;
}
    16ca:	21 53       	incd	r1		;
    16cc:	30 41       	ret			

000016ce <led_pwm>:

#define PWM_COUNT_MASK 0x1F
void led_pwm (int enable) {
  static unsigned char counter=0;
  if (enable) {
    16ce:	0f 93       	cmp	#0,	r15	;r3 As==00
    16d0:	ac 24       	jz	$+346    	;abs 0x182a
    counter++;
    16d2:	5f 42 00 02 	mov.b	&0x0200,r15	;0x0200
    16d6:	5f 53       	inc.b	r15		;
    counter&=PWM_COUNT_MASK; 
    16d8:	7f f0 1f 00 	and.b	#31,	r15	;#0x001f
    16dc:	c2 4f 00 02 	mov.b	r15,	&0x0200	;
    if (!counter) {
    16e0:	09 20       	jnz	$+20     	;abs 0x16f4
      P1OUT=0xFF;
    16e2:	f2 43 21 00 	mov.b	#-1,	&0x0021	;r3 As==11
      P5OUT=0x07;
    16e6:	f2 40 07 00 	mov.b	#7,	&0x0031	;#0x0007
    16ea:	31 00 
      P5OUT=0;
    16ec:	c2 43 31 00 	mov.b	#0,	&0x0031	;r3 As==00
      P2OUT|=0x01;
    16f0:	d2 d3 29 00 	bis.b	#1,	&0x0029	;r3 As==01
    }
    P1OUT=0xFF;
    16f4:	f2 43 21 00 	mov.b	#-1,	&0x0021	;r3 As==11
    if (counter>=high_time_limit[0]) P1OUT&=~0x01;
    16f8:	5f 92 11 02 	cmp.b	&0x0211,r15	;0x0211
    16fc:	02 28       	jnc	$+6      	;abs 0x1702
    16fe:	d2 c3 21 00 	bic.b	#1,	&0x0021	;r3 As==01
    if (counter>=high_time_limit[1]) P1OUT&=~0x02;
    1702:	5f 92 12 02 	cmp.b	&0x0212,r15	;0x0212
    1706:	02 28       	jnc	$+6      	;abs 0x170c
    1708:	e2 c3 21 00 	bic.b	#2,	&0x0021	;r3 As==10
    if (counter>=high_time_limit[2]) P1OUT&=~0x04;
    170c:	5f 92 13 02 	cmp.b	&0x0213,r15	;0x0213
    1710:	02 28       	jnc	$+6      	;abs 0x1716
    1712:	e2 c2 21 00 	bic.b	#4,	&0x0021	;r2 As==10
    if (counter>=high_time_limit[3]) P1OUT&=~0x08;
    1716:	5f 92 14 02 	cmp.b	&0x0214,r15	;0x0214
    171a:	02 28       	jnc	$+6      	;abs 0x1720
    171c:	f2 c2 21 00 	bic.b	#8,	&0x0021	;r2 As==11
    if (counter>=high_time_limit[4]) P1OUT&=~0x10;
    1720:	5f 92 15 02 	cmp.b	&0x0215,r15	;0x0215
    1724:	03 28       	jnc	$+8      	;abs 0x172c
    1726:	f2 f0 ef ff 	and.b	#-17,	&0x0021	;#0xffef
    172a:	21 00 
    if (counter>=high_time_limit[5]) P1OUT&=~0x20;
    172c:	5f 92 16 02 	cmp.b	&0x0216,r15	;0x0216
    1730:	03 28       	jnc	$+8      	;abs 0x1738
    1732:	f2 f0 df ff 	and.b	#-33,	&0x0021	;#0xffdf
    1736:	21 00 
    if (counter>=high_time_limit[6]) P1OUT&=~0x40;
    1738:	5f 92 17 02 	cmp.b	&0x0217,r15	;0x0217
    173c:	03 28       	jnc	$+8      	;abs 0x1744
    173e:	f2 f0 bf ff 	and.b	#-65,	&0x0021	;#0xffbf
    1742:	21 00 
    if (counter>=high_time_limit[7]) P1OUT&=~0x80;
    1744:	5f 92 18 02 	cmp.b	&0x0218,r15	;0x0218
    1748:	03 28       	jnc	$+8      	;abs 0x1750
    174a:	f2 f0 7f 00 	and.b	#127,	&0x0021	;#0x007f
    174e:	21 00 
    P5OUT=0x01;
    1750:	d2 43 31 00 	mov.b	#1,	&0x0031	;r3 As==01
    P5OUT=0x00;
    1754:	c2 43 31 00 	mov.b	#0,	&0x0031	;r3 As==00
    P1OUT=0xFF;
    1758:	f2 43 21 00 	mov.b	#-1,	&0x0021	;r3 As==11
    if (counter>=high_time_limit[8]) P1OUT&=~0x01;
    175c:	5f 92 19 02 	cmp.b	&0x0219,r15	;0x0219
    1760:	02 28       	jnc	$+6      	;abs 0x1766
    1762:	d2 c3 21 00 	bic.b	#1,	&0x0021	;r3 As==01
    if (counter>=high_time_limit[9]) P1OUT&=~0x02;
    1766:	5f 92 1a 02 	cmp.b	&0x021a,r15	;0x021a
    176a:	02 28       	jnc	$+6      	;abs 0x1770
    176c:	e2 c3 21 00 	bic.b	#2,	&0x0021	;r3 As==10
    if (counter>=high_time_limit[10]) P1OUT&=~0x04;
    1770:	5f 92 1b 02 	cmp.b	&0x021b,r15	;0x021b
    1774:	02 28       	jnc	$+6      	;abs 0x177a
    1776:	e2 c2 21 00 	bic.b	#4,	&0x0021	;r2 As==10
    if (counter>=high_time_limit[11]) P1OUT&=~0x08;
    177a:	5f 92 1c 02 	cmp.b	&0x021c,r15	;0x021c
    177e:	02 28       	jnc	$+6      	;abs 0x1784
    1780:	f2 c2 21 00 	bic.b	#8,	&0x0021	;r2 As==11
    if (counter>=high_time_limit[12]) P1OUT&=~0x10;
    1784:	5f 92 1d 02 	cmp.b	&0x021d,r15	;0x021d
    1788:	03 28       	jnc	$+8      	;abs 0x1790
    178a:	f2 f0 ef ff 	and.b	#-17,	&0x0021	;#0xffef
    178e:	21 00 
    if (counter>=high_time_limit[13]) P1OUT&=~0x20;
    1790:	5f 92 1e 02 	cmp.b	&0x021e,r15	;0x021e
    1794:	03 28       	jnc	$+8      	;abs 0x179c
    1796:	f2 f0 df ff 	and.b	#-33,	&0x0021	;#0xffdf
    179a:	21 00 
    if (counter>=high_time_limit[14]) P1OUT&=~0x40;
    179c:	5f 92 1f 02 	cmp.b	&0x021f,r15	;0x021f
    17a0:	03 28       	jnc	$+8      	;abs 0x17a8
    17a2:	f2 f0 bf ff 	and.b	#-65,	&0x0021	;#0xffbf
    17a6:	21 00 
    if (counter>=high_time_limit[15]) P1OUT&=~0x80;
    17a8:	5f 92 20 02 	cmp.b	&0x0220,r15	;0x0220
    17ac:	03 28       	jnc	$+8      	;abs 0x17b4
    17ae:	f2 f0 7f 00 	and.b	#127,	&0x0021	;#0x007f
    17b2:	21 00 
    P5OUT=0x02;
    17b4:	e2 43 31 00 	mov.b	#2,	&0x0031	;r3 As==10
    P5OUT=0x00;
    17b8:	c2 43 31 00 	mov.b	#0,	&0x0031	;r3 As==00
    P1OUT=0xFF;
    17bc:	f2 43 21 00 	mov.b	#-1,	&0x0021	;r3 As==11
    if (counter>=high_time_limit[16]) P1OUT&=~0x01;
    17c0:	5f 92 21 02 	cmp.b	&0x0221,r15	;0x0221
    17c4:	02 28       	jnc	$+6      	;abs 0x17ca
    17c6:	d2 c3 21 00 	bic.b	#1,	&0x0021	;r3 As==01
    if (counter>=high_time_limit[17]) P1OUT&=~0x02;
    17ca:	5f 92 22 02 	cmp.b	&0x0222,r15	;0x0222
    17ce:	02 28       	jnc	$+6      	;abs 0x17d4
    17d0:	e2 c3 21 00 	bic.b	#2,	&0x0021	;r3 As==10
    if (counter>=high_time_limit[18]) P1OUT&=~0x04;
    17d4:	5f 92 23 02 	cmp.b	&0x0223,r15	;0x0223
    17d8:	02 28       	jnc	$+6      	;abs 0x17de
    17da:	e2 c2 21 00 	bic.b	#4,	&0x0021	;r2 As==10
    if (counter>=high_time_limit[19]) P1OUT&=~0x08;
    17de:	5f 92 24 02 	cmp.b	&0x0224,r15	;0x0224
    17e2:	02 28       	jnc	$+6      	;abs 0x17e8
    17e4:	f2 c2 21 00 	bic.b	#8,	&0x0021	;r2 As==11
    if (counter>=high_time_limit[20]) P1OUT&=~0x10;
    17e8:	5f 92 25 02 	cmp.b	&0x0225,r15	;0x0225
    17ec:	03 28       	jnc	$+8      	;abs 0x17f4
    17ee:	f2 f0 ef ff 	and.b	#-17,	&0x0021	;#0xffef
    17f2:	21 00 
    if (counter>=high_time_limit[21]) P1OUT&=~0x20;
    17f4:	5f 92 26 02 	cmp.b	&0x0226,r15	;0x0226
    17f8:	03 28       	jnc	$+8      	;abs 0x1800
    17fa:	f2 f0 df ff 	and.b	#-33,	&0x0021	;#0xffdf
    17fe:	21 00 
    if (counter>=high_time_limit[22]) P1OUT&=~0x40;
    1800:	5f 92 27 02 	cmp.b	&0x0227,r15	;0x0227
    1804:	03 28       	jnc	$+8      	;abs 0x180c
    1806:	f2 f0 bf ff 	and.b	#-65,	&0x0021	;#0xffbf
    180a:	21 00 
    if (counter>=high_time_limit[23]) P1OUT&=~0x80;
    180c:	5f 92 28 02 	cmp.b	&0x0228,r15	;0x0228
    1810:	03 28       	jnc	$+8      	;abs 0x1818
    1812:	f2 f0 7f 00 	and.b	#127,	&0x0021	;#0x007f
    1816:	21 00 
    P5OUT=0x04;
    1818:	e2 42 31 00 	mov.b	#4,	&0x0031	;r2 As==10
    P5OUT=0x00;
    181c:	c2 43 31 00 	mov.b	#0,	&0x0031	;r3 As==00
    if (counter>=high_time_limit[24]) P2OUT&=~0x01;
    1820:	5f 92 29 02 	cmp.b	&0x0229,r15	;0x0229
    1824:	02 28       	jnc	$+6      	;abs 0x182a
    1826:	d2 c3 29 00 	bic.b	#1,	&0x0029	;r3 As==01
  }
}
    182a:	30 41       	ret			

0000182c <clear_led_screen>:

void clear_led_screen (void) {
  P1OUT=0;
    182c:	c2 43 21 00 	mov.b	#0,	&0x0021	;r3 As==00
  P5OUT=0x07;
    1830:	f2 40 07 00 	mov.b	#7,	&0x0031	;#0x0007
    1834:	31 00 
  P5OUT=0;
    1836:	c2 43 31 00 	mov.b	#0,	&0x0031	;r3 As==00
  P2OUT&=~0x01;
    183a:	d2 c3 29 00 	bic.b	#1,	&0x0029	;r3 As==01
}
    183e:	30 41       	ret			

00001840 <write_led>:


void write_led (int channel, int enable) {
    1840:	0d 4f       	mov	r15,	r13	;
  static unsigned long led_state = 0x00000000;
  if (enable) {
    1842:	0e 93       	cmp	#0,	r14	;r3 As==00
    1844:	4a 24       	jz	$+150    	;abs 0x18da
    if (channel<8) {
    1846:	3d 92       	cmp	#8,	r13	;r2 As==11
    1848:	12 34       	jge	$+38     	;abs 0x186e
      *((unsigned char *) &led_state) |= 0x01<<channel;       // Save the new state of the LED in led_state
    184a:	1f 43       	mov	#1,	r15	;r3 As==01
    184c:	0e 4d       	mov	r13,	r14	;
    184e:	0e 93       	cmp	#0,	r14	;r3 As==00
    1850:	03 24       	jz	$+8      	;abs 0x1858
    1852:	0f 5f       	rla	r15		;
    1854:	1e 83       	dec	r14		;
    1856:	fd 23       	jnz	$-4      	;abs 0x1852
    1858:	5f d2 02 02 	bis.b	&0x0202,r15	;0x0202
    185c:	c2 4f 02 02 	mov.b	r15,	&0x0202	;
      P1OUT=*((unsigned char *) &led_state);                  // Place the relevant byte of led_state on the latch bus 
    1860:	c2 4f 21 00 	mov.b	r15,	&0x0021	;
      P5OUT|=0x01;                                            // strobe the chip select for the target latch
    1864:	d2 d3 31 00 	bis.b	#1,	&0x0031	;r3 As==01
      P5OUT&=~0x01;                                           // clear the chip select bit
    }
    else if (channel<16) {
      channel-=8;
      *(((unsigned char *) &led_state)+1) |= 0x01<<channel;  
      P1OUT=*(((unsigned char *) &led_state)+1);  
      P5OUT=0x02;
      P5OUT&=~0x02;                                           // clear the chip select bit
    }
    else if (channel<24) {
      channel-=16;
      *(((unsigned char *) &led_state)+2) |= 0x01<<channel;  
      P1OUT=*(((unsigned char *) &led_state)+2);  
      P5OUT=0x04;
      P5OUT&=~0x04;                                           // clear the chip select bit
    }
    else if (channel==24) {
      *(((unsigned char *) &led_state)+3) |= 0x01;  
      P2OUT|=0x01;
    }
  }
  else {
    if (channel<8) {
      *((unsigned char *) &led_state) &= ~(0x01<<channel);  
      P1OUT=*((unsigned char *) &led_state);  
      P5OUT=0x01;
      P5OUT&=~0x01;                                           // clear the chip select bit
    1868:	d2 c3 31 00 	bic.b	#1,	&0x0031	;r3 As==01
    }
    else if (channel<16) {
      channel-=8;
      *(((unsigned char *) &led_state)+1) &= ~(0x01<<channel);  
      P1OUT=*(((unsigned char *) &led_state)+1);  
      P5OUT=0x02;
      P5OUT&=~0x02;                                           // clear the chip select bit
    }
    else if (channel<24) {
      channel-=16;
      *(((unsigned char *) &led_state)+2) &= ~(0x01<<channel);  
      P1OUT=*(((unsigned char *) &led_state)+2);  
      P5OUT=0x04;
      P5OUT&=~0x04;                                           // clear the chip select bit
    }
    else if (channel==24) {
      *(((unsigned char *) &led_state)+3) &= 0xFE;  
      P2OUT&=0xFE;
    }
  }
}
    186c:	30 41       	ret			
    186e:	3d 90 10 00 	cmp	#16,	r13	;#0x0010
    1872:	13 34       	jge	$+40     	;abs 0x189a
    1874:	3f 40 03 02 	mov	#515,	r15	;#0x0203
    1878:	1e 43       	mov	#1,	r14	;r3 As==01
    187a:	3d 82       	sub	#8,	r13	;r2 As==11
    187c:	0d 93       	cmp	#0,	r13	;r3 As==00
    187e:	03 24       	jz	$+8      	;abs 0x1886
    1880:	0e 5e       	rla	r14		;
    1882:	1d 83       	dec	r13		;
    1884:	fd 23       	jnz	$-4      	;abs 0x1880
    1886:	6e df       	bis.b	@r15,	r14	;
    1888:	cf 4e 00 00 	mov.b	r14,	0(r15)	;
    188c:	c2 4e 21 00 	mov.b	r14,	&0x0021	;
    1890:	e2 43 31 00 	mov.b	#2,	&0x0031	;r3 As==10
    1894:	e2 c3 31 00 	bic.b	#2,	&0x0031	;r3 As==10
    1898:	30 41       	ret			
    189a:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    189e:	14 34       	jge	$+42     	;abs 0x18c8
    18a0:	3f 40 04 02 	mov	#516,	r15	;#0x0204
    18a4:	1e 43       	mov	#1,	r14	;r3 As==01
    18a6:	3d 50 f0 ff 	add	#-16,	r13	;#0xfff0
    18aa:	0d 93       	cmp	#0,	r13	;r3 As==00
    18ac:	03 24       	jz	$+8      	;abs 0x18b4
    18ae:	0e 5e       	rla	r14		;
    18b0:	1d 83       	dec	r13		;
    18b2:	fd 23       	jnz	$-4      	;abs 0x18ae
    18b4:	6e df       	bis.b	@r15,	r14	;
    18b6:	cf 4e 00 00 	mov.b	r14,	0(r15)	;
    18ba:	c2 4e 21 00 	mov.b	r14,	&0x0021	;
    18be:	e2 42 31 00 	mov.b	#4,	&0x0031	;r2 As==10
    18c2:	e2 c2 31 00 	bic.b	#4,	&0x0031	;r2 As==10
    18c6:	30 41       	ret			
    18c8:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    18cc:	01 24       	jz	$+4      	;abs 0x18d0
    18ce:	30 41       	ret			
    18d0:	d2 d3 05 02 	bis.b	#1,	&0x0205	;r3 As==01
    18d4:	d2 d3 29 00 	bis.b	#1,	&0x0029	;r3 As==01
    18d8:	30 41       	ret			
    18da:	3d 92       	cmp	#8,	r13	;r2 As==11
    18dc:	11 34       	jge	$+36     	;abs 0x1900
    18de:	1f 43       	mov	#1,	r15	;r3 As==01
    18e0:	0e 4d       	mov	r13,	r14	;
    18e2:	0e 93       	cmp	#0,	r14	;r3 As==00
    18e4:	03 24       	jz	$+8      	;abs 0x18ec
    18e6:	0f 5f       	rla	r15		;
    18e8:	1e 83       	dec	r14		;
    18ea:	fd 23       	jnz	$-4      	;abs 0x18e6
    18ec:	5d 42 02 02 	mov.b	&0x0202,r13	;0x0202
    18f0:	4d cf       	bic.b	r15,	r13	;
    18f2:	c2 4d 02 02 	mov.b	r13,	&0x0202	;
    18f6:	c2 4d 21 00 	mov.b	r13,	&0x0021	;
    18fa:	d2 43 31 00 	mov.b	#1,	&0x0031	;r3 As==01
    18fe:	b4 3f       	jmp	$-150    	;abs 0x1868
    1900:	3d 90 10 00 	cmp	#16,	r13	;#0x0010
    1904:	0d 34       	jge	$+28     	;abs 0x1920
    1906:	3f 40 03 02 	mov	#515,	r15	;#0x0203
    190a:	1e 43       	mov	#1,	r14	;r3 As==01
    190c:	3d 82       	sub	#8,	r13	;r2 As==11
    190e:	0d 93       	cmp	#0,	r13	;r3 As==00
    1910:	03 24       	jz	$+8      	;abs 0x1918
    1912:	0e 5e       	rla	r14		;
    1914:	1d 83       	dec	r13		;
    1916:	fd 23       	jnz	$-4      	;abs 0x1912
    1918:	6d 4f       	mov.b	@r15,	r13	;
    191a:	4d ce       	bic.b	r14,	r13	;
    191c:	4e 4d       	mov.b	r13,	r14	;
    191e:	b4 3f       	jmp	$-150    	;abs 0x1888
    1920:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    1924:	0e 34       	jge	$+30     	;abs 0x1942
    1926:	3f 40 04 02 	mov	#516,	r15	;#0x0204
    192a:	1e 43       	mov	#1,	r14	;r3 As==01
    192c:	3d 50 f0 ff 	add	#-16,	r13	;#0xfff0
    1930:	0d 93       	cmp	#0,	r13	;r3 As==00
    1932:	03 24       	jz	$+8      	;abs 0x193a
    1934:	0e 5e       	rla	r14		;
    1936:	1d 83       	dec	r13		;
    1938:	fd 23       	jnz	$-4      	;abs 0x1934
    193a:	6d 4f       	mov.b	@r15,	r13	;
    193c:	4d ce       	bic.b	r14,	r13	;
    193e:	4e 4d       	mov.b	r13,	r14	;
    1940:	ba 3f       	jmp	$-138    	;abs 0x18b6
    1942:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    1946:	c3 23       	jnz	$-120    	;abs 0x18ce
    1948:	d2 c3 05 02 	bic.b	#1,	&0x0205	;r3 As==01
    194c:	d2 c3 29 00 	bic.b	#1,	&0x0029	;r3 As==01
    1950:	be 3f       	jmp	$-130    	;abs 0x18ce

00001952 <write_lla>:

void write_lla (int channel, int enable) {
    1952:	0d 4f       	mov	r15,	r13	;
  static unsigned long lla_state = 0x00000000;
  if (enable) {
    1954:	0e 93       	cmp	#0,	r14	;r3 As==00
    1956:	4e 24       	jz	$+158    	;abs 0x19f4
    if (channel<8) {
    1958:	3d 92       	cmp	#8,	r13	;r2 As==11
    195a:	12 34       	jge	$+38     	;abs 0x1980
      *((unsigned char *) &lla_state) |= 0x01<<channel;       // Save the new state of the LED in lla_state
    195c:	1f 43       	mov	#1,	r15	;r3 As==01
    195e:	0e 4d       	mov	r13,	r14	;
    1960:	0e 93       	cmp	#0,	r14	;r3 As==00
    1962:	03 24       	jz	$+8      	;abs 0x196a
    1964:	0f 5f       	rla	r15		;
    1966:	1e 83       	dec	r14		;
    1968:	fd 23       	jnz	$-4      	;abs 0x1964
    196a:	5f d2 06 02 	bis.b	&0x0206,r15	;0x0206
    196e:	c2 4f 06 02 	mov.b	r15,	&0x0206	;
      P1OUT=*((unsigned char *) &lla_state);                  // Place the relevant byte of lla_state on the latch bus 
    1972:	c2 4f 21 00 	mov.b	r15,	&0x0021	;
      P5OUT|=0x08;                                            // strobe the chip select for the target latch
    1976:	f2 d2 31 00 	bis.b	#8,	&0x0031	;r2 As==11
      P5OUT&=~0x08;                                           // clear the chip select bit
    }
    else if (channel<16) {
      channel-=8;
      *(((unsigned char *) &lla_state)+1) |= 0x01<<channel;  
      P1OUT=*(((unsigned char *) &lla_state)+1);  
      P5OUT=0x10;
      P5OUT&=~0x10;                                           // clear the chip select bit
    }
    else if (channel<24) {
      channel-=16;
      *(((unsigned char *) &lla_state)+2) |= 0x01<<channel;  
      P1OUT=*(((unsigned char *) &lla_state)+2);  
      P5OUT=0x20;
      P5OUT&=~0x20;                                           // clear the chip select bit
    }
    else if (channel==24) {
      *(((unsigned char *) &lla_state)+3) |= 0x01;  
      P2OUT|=0x02;
    }
  }
  else {
    if (channel<8) {
      *((unsigned char *) &lla_state) &= ~(0x01<<channel);  
      P1OUT=*((unsigned char *) &lla_state);  
      P5OUT=0x08;
      P5OUT&=~0x08;                                           // clear the chip select bit
    197a:	f2 c2 31 00 	bic.b	#8,	&0x0031	;r2 As==11
    }
    else if (channel<16) {
      channel-=8;
      *(((unsigned char *) &lla_state)+1) &= ~(0x01<<channel);  
      P1OUT=*(((unsigned char *) &lla_state)+1);  
      P5OUT=0x10;
      P5OUT&=~0x10;                                           // clear the chip select bit
    }
    else if (channel<24) {
      channel-=16;
      *(((unsigned char *) &lla_state)+2) &= ~(0x01<<channel);  
      P1OUT=*(((unsigned char *) &lla_state)+2);  
      P5OUT=0x20;
      P5OUT&=~0x20;                                           // clear the chip select bit
    }
    else if (channel==24) {
      *(((unsigned char *) &lla_state)+3) &= 0xFE;  
      P2OUT&=0xFD;
    }
  }
}
    197e:	30 41       	ret			
    1980:	3d 90 10 00 	cmp	#16,	r13	;#0x0010
    1984:	15 34       	jge	$+44     	;abs 0x19b0
    1986:	3f 40 07 02 	mov	#519,	r15	;#0x0207
    198a:	1e 43       	mov	#1,	r14	;r3 As==01
    198c:	3d 82       	sub	#8,	r13	;r2 As==11
    198e:	0d 93       	cmp	#0,	r13	;r3 As==00
    1990:	03 24       	jz	$+8      	;abs 0x1998
    1992:	0e 5e       	rla	r14		;
    1994:	1d 83       	dec	r13		;
    1996:	fd 23       	jnz	$-4      	;abs 0x1992
    1998:	6e df       	bis.b	@r15,	r14	;
    199a:	cf 4e 00 00 	mov.b	r14,	0(r15)	;
    199e:	c2 4e 21 00 	mov.b	r14,	&0x0021	;
    19a2:	f2 40 10 00 	mov.b	#16,	&0x0031	;#0x0010
    19a6:	31 00 
    19a8:	f2 f0 ef ff 	and.b	#-17,	&0x0031	;#0xffef
    19ac:	31 00 
    19ae:	30 41       	ret			
    19b0:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    19b4:	16 34       	jge	$+46     	;abs 0x19e2
    19b6:	3f 40 08 02 	mov	#520,	r15	;#0x0208
    19ba:	1e 43       	mov	#1,	r14	;r3 As==01
    19bc:	3d 50 f0 ff 	add	#-16,	r13	;#0xfff0
    19c0:	0d 93       	cmp	#0,	r13	;r3 As==00
    19c2:	03 24       	jz	$+8      	;abs 0x19ca
    19c4:	0e 5e       	rla	r14		;
    19c6:	1d 83       	dec	r13		;
    19c8:	fd 23       	jnz	$-4      	;abs 0x19c4
    19ca:	6e df       	bis.b	@r15,	r14	;
    19cc:	cf 4e 00 00 	mov.b	r14,	0(r15)	;
    19d0:	c2 4e 21 00 	mov.b	r14,	&0x0021	;
    19d4:	f2 40 20 00 	mov.b	#32,	&0x0031	;#0x0020
    19d8:	31 00 
    19da:	f2 f0 df ff 	and.b	#-33,	&0x0031	;#0xffdf
    19de:	31 00 
    19e0:	30 41       	ret			
    19e2:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    19e6:	01 24       	jz	$+4      	;abs 0x19ea
    19e8:	30 41       	ret			
    19ea:	d2 d3 09 02 	bis.b	#1,	&0x0209	;r3 As==01
    19ee:	e2 d3 29 00 	bis.b	#2,	&0x0029	;r3 As==10
    19f2:	30 41       	ret			
    19f4:	3d 92       	cmp	#8,	r13	;r2 As==11
    19f6:	11 34       	jge	$+36     	;abs 0x1a1a
    19f8:	1f 43       	mov	#1,	r15	;r3 As==01
    19fa:	0e 4d       	mov	r13,	r14	;
    19fc:	0e 93       	cmp	#0,	r14	;r3 As==00
    19fe:	03 24       	jz	$+8      	;abs 0x1a06
    1a00:	0f 5f       	rla	r15		;
    1a02:	1e 83       	dec	r14		;
    1a04:	fd 23       	jnz	$-4      	;abs 0x1a00
    1a06:	5d 42 06 02 	mov.b	&0x0206,r13	;0x0206
    1a0a:	4d cf       	bic.b	r15,	r13	;
    1a0c:	c2 4d 06 02 	mov.b	r13,	&0x0206	;
    1a10:	c2 4d 21 00 	mov.b	r13,	&0x0021	;
    1a14:	f2 42 31 00 	mov.b	#8,	&0x0031	;r2 As==11
    1a18:	b0 3f       	jmp	$-158    	;abs 0x197a
    1a1a:	3d 90 10 00 	cmp	#16,	r13	;#0x0010
    1a1e:	0d 34       	jge	$+28     	;abs 0x1a3a
    1a20:	3f 40 07 02 	mov	#519,	r15	;#0x0207
    1a24:	1e 43       	mov	#1,	r14	;r3 As==01
    1a26:	3d 82       	sub	#8,	r13	;r2 As==11
    1a28:	0d 93       	cmp	#0,	r13	;r3 As==00
    1a2a:	03 24       	jz	$+8      	;abs 0x1a32
    1a2c:	0e 5e       	rla	r14		;
    1a2e:	1d 83       	dec	r13		;
    1a30:	fd 23       	jnz	$-4      	;abs 0x1a2c
    1a32:	6d 4f       	mov.b	@r15,	r13	;
    1a34:	4d ce       	bic.b	r14,	r13	;
    1a36:	4e 4d       	mov.b	r13,	r14	;
    1a38:	b0 3f       	jmp	$-158    	;abs 0x199a
    1a3a:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    1a3e:	0e 34       	jge	$+30     	;abs 0x1a5c
    1a40:	3f 40 08 02 	mov	#520,	r15	;#0x0208
    1a44:	1e 43       	mov	#1,	r14	;r3 As==01
    1a46:	3d 50 f0 ff 	add	#-16,	r13	;#0xfff0
    1a4a:	0d 93       	cmp	#0,	r13	;r3 As==00
    1a4c:	03 24       	jz	$+8      	;abs 0x1a54
    1a4e:	0e 5e       	rla	r14		;
    1a50:	1d 83       	dec	r13		;
    1a52:	fd 23       	jnz	$-4      	;abs 0x1a4e
    1a54:	6d 4f       	mov.b	@r15,	r13	;
    1a56:	4d ce       	bic.b	r14,	r13	;
    1a58:	4e 4d       	mov.b	r13,	r14	;
    1a5a:	b8 3f       	jmp	$-142    	;abs 0x19cc
    1a5c:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    1a60:	c3 23       	jnz	$-120    	;abs 0x19e8
    1a62:	d2 c3 09 02 	bic.b	#1,	&0x0209	;r3 As==01
    1a66:	e2 c3 29 00 	bic.b	#2,	&0x0029	;r3 As==10
    1a6a:	be 3f       	jmp	$-130    	;abs 0x19e8

00001a6c <Letext>:
    1a6c:	53 63       	.word	0x6353;	????
    1a6e:	61 6e       	addc.b	@r14,	r1	;
    1a70:	6e 69       	addc.b	@r9,	r14	;
    1a72:	6e 67       	addc.b	@r7,	r14	;
    1a74:	20 4c       	br	@r12		;
    1a76:	45 44       	mov.b	r4,	r5	;
    1a78:	73 20       	jnz	$+232    	;abs 0x1b60
    1a7a:	00 1b       	.word	0x1b00;	????
    1a7c:	5b 33       	jn	$-328    	;abs 0x1934
    1a7e:	32 6d       	addc	@r13+,	r2	;
    1a80:	00 5b       	add	r11,	r0	;
    1a82:	44 4f       	mov.b	r15,	r4	;
    1a84:	4e 45       	mov.b	r5,	r14	;
    1a86:	5d 0a       	.word	0x0a5d;	????
    1a88:	0d 00       	.word	0x000d;	????
    1a8a:	1b 5b 33 30 	add	12339(r11),r11	;
    1a8e:	6d 00       	.word	0x006d;	????

00001a90 <scan_leds>:
extern short dac_translation[];
#define LED_DWELL 100

/* Code: */
void scan_leds(void) {
    1a90:	0b 12       	push	r11		;
    1a92:	0a 12       	push	r10		;
    1a94:	09 12       	push	r9		;
    1a96:	08 12       	push	r8		;
    1a98:	07 12       	push	r7		;
  enum {OFF,ON};
  int index; 
  printf("Scanning LEDs ");
    1a9a:	30 12 6c 1a 	push	#6764		;#0x1a6c
    1a9e:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  // All LEDs off
  for (index=0;index<25;index++) {
    1aa2:	07 43       	clr	r7		;
    1aa4:	21 53       	incd	r1		;
    write_led(index,OFF);
    1aa6:	0e 43       	clr	r14		;
    1aa8:	0f 47       	mov	r7,	r15	;
    1aaa:	b0 12 40 18 	call	#6208		;#0x1840
    1aae:	17 53       	inc	r7		;
    1ab0:	37 90 19 00 	cmp	#25,	r7	;#0x0019
    1ab4:	f8 3b       	jl	$-14     	;abs 0x1aa6
  }
  // Scan Rows 
  for (index=0;index<25;index+=5) {
    1ab6:	07 43       	clr	r7		;
    write_led(index,ON);
    1ab8:	1e 43       	mov	#1,	r14	;r3 As==01
    1aba:	0f 47       	mov	r7,	r15	;
    1abc:	b0 12 40 18 	call	#6208		;#0x1840
    write_led(index+1,ON);
    1ac0:	08 47       	mov	r7,	r8	;
    1ac2:	18 53       	inc	r8		;
    1ac4:	1e 43       	mov	#1,	r14	;r3 As==01
    1ac6:	0f 48       	mov	r8,	r15	;
    1ac8:	b0 12 40 18 	call	#6208		;#0x1840
    write_led(index+2,ON);
    1acc:	09 47       	mov	r7,	r9	;
    1ace:	29 53       	incd	r9		;
    1ad0:	1e 43       	mov	#1,	r14	;r3 As==01
    1ad2:	0f 49       	mov	r9,	r15	;
    1ad4:	b0 12 40 18 	call	#6208		;#0x1840
    write_led(index+3,ON);
    1ad8:	0a 47       	mov	r7,	r10	;
    1ada:	3a 50 03 00 	add	#3,	r10	;#0x0003
    1ade:	1e 43       	mov	#1,	r14	;r3 As==01
    1ae0:	0f 4a       	mov	r10,	r15	;
    1ae2:	b0 12 40 18 	call	#6208		;#0x1840
    write_led(index+4,ON);
    1ae6:	0b 47       	mov	r7,	r11	;
    1ae8:	2b 52       	add	#4,	r11	;r2 As==10
    1aea:	1e 43       	mov	#1,	r14	;r3 As==01
    1aec:	0f 4b       	mov	r11,	r15	;
    1aee:	b0 12 40 18 	call	#6208		;#0x1840
    delay_1_25mS(LED_DWELL);
    1af2:	3f 40 64 00 	mov	#100,	r15	;#0x0064
    1af6:	b0 12 22 35 	call	#13602		;#0x3522
    write_led(index,OFF);
    1afa:	0e 43       	clr	r14		;
    1afc:	0f 47       	mov	r7,	r15	;
    1afe:	b0 12 40 18 	call	#6208		;#0x1840
    write_led(index+1,OFF);
    1b02:	0e 43       	clr	r14		;
    1b04:	0f 48       	mov	r8,	r15	;
    1b06:	b0 12 40 18 	call	#6208		;#0x1840
    write_led(index+2,OFF);
    1b0a:	0e 43       	clr	r14		;
    1b0c:	0f 49       	mov	r9,	r15	;
    1b0e:	b0 12 40 18 	call	#6208		;#0x1840
    write_led(index+3,OFF);
    1b12:	0e 43       	clr	r14		;
    1b14:	0f 4a       	mov	r10,	r15	;
    1b16:	b0 12 40 18 	call	#6208		;#0x1840
    write_led(index+4,OFF);
    1b1a:	0e 43       	clr	r14		;
    1b1c:	0f 4b       	mov	r11,	r15	;
    1b1e:	b0 12 40 18 	call	#6208		;#0x1840
    1b22:	37 50 05 00 	add	#5,	r7	;#0x0005
    1b26:	37 90 19 00 	cmp	#25,	r7	;#0x0019
    1b2a:	c6 3b       	jl	$-114    	;abs 0x1ab8
  }
  // Scan Columns 
  for (index=0;index<5;index++) {
    1b2c:	07 43       	clr	r7		;
    write_led(index,ON);
    1b2e:	1e 43       	mov	#1,	r14	;r3 As==01
    1b30:	0f 47       	mov	r7,	r15	;
    1b32:	b0 12 40 18 	call	#6208		;#0x1840
    write_led(index+5,ON);
    1b36:	08 47       	mov	r7,	r8	;
    1b38:	38 50 05 00 	add	#5,	r8	;#0x0005
    1b3c:	1e 43       	mov	#1,	r14	;r3 As==01
    1b3e:	0f 48       	mov	r8,	r15	;
    1b40:	b0 12 40 18 	call	#6208		;#0x1840
    write_led(index+10,ON);
    1b44:	09 47       	mov	r7,	r9	;
    1b46:	39 50 0a 00 	add	#10,	r9	;#0x000a
    1b4a:	1e 43       	mov	#1,	r14	;r3 As==01
    1b4c:	0f 49       	mov	r9,	r15	;
    1b4e:	b0 12 40 18 	call	#6208		;#0x1840
    write_led(index+15,ON);
    1b52:	0a 47       	mov	r7,	r10	;
    1b54:	3a 50 0f 00 	add	#15,	r10	;#0x000f
    1b58:	1e 43       	mov	#1,	r14	;r3 As==01
    1b5a:	0f 4a       	mov	r10,	r15	;
    1b5c:	b0 12 40 18 	call	#6208		;#0x1840
    write_led(index+20,ON);
    1b60:	0b 47       	mov	r7,	r11	;
    1b62:	3b 50 14 00 	add	#20,	r11	;#0x0014
    1b66:	1e 43       	mov	#1,	r14	;r3 As==01
    1b68:	0f 4b       	mov	r11,	r15	;
    1b6a:	b0 12 40 18 	call	#6208		;#0x1840
    delay_1_25mS(LED_DWELL);
    1b6e:	3f 40 64 00 	mov	#100,	r15	;#0x0064
    1b72:	b0 12 22 35 	call	#13602		;#0x3522
    write_led(index,OFF);
    1b76:	0e 43       	clr	r14		;
    1b78:	0f 47       	mov	r7,	r15	;
    1b7a:	b0 12 40 18 	call	#6208		;#0x1840
    write_led(index+5,OFF);
    1b7e:	0e 43       	clr	r14		;
    1b80:	0f 48       	mov	r8,	r15	;
    1b82:	b0 12 40 18 	call	#6208		;#0x1840
    write_led(index+10,OFF);
    1b86:	0e 43       	clr	r14		;
    1b88:	0f 49       	mov	r9,	r15	;
    1b8a:	b0 12 40 18 	call	#6208		;#0x1840
    write_led(index+15,OFF);
    1b8e:	0e 43       	clr	r14		;
    1b90:	0f 4a       	mov	r10,	r15	;
    1b92:	b0 12 40 18 	call	#6208		;#0x1840
    write_led(index+20,OFF);
    1b96:	0e 43       	clr	r14		;
    1b98:	0f 4b       	mov	r11,	r15	;
    1b9a:	b0 12 40 18 	call	#6208		;#0x1840
    1b9e:	17 53       	inc	r7		;
    1ba0:	37 90 05 00 	cmp	#5,	r7	;#0x0005
    1ba4:	c4 3b       	jl	$-118    	;abs 0x1b2e
  }
  // All LEDs ON
  for (index=0;index<25;index++) {
    1ba6:	07 43       	clr	r7		;
    write_led(index,ON);
    1ba8:	1e 43       	mov	#1,	r14	;r3 As==01
    1baa:	0f 47       	mov	r7,	r15	;
    1bac:	b0 12 40 18 	call	#6208		;#0x1840
    1bb0:	17 53       	inc	r7		;
    1bb2:	37 90 19 00 	cmp	#25,	r7	;#0x0019
    1bb6:	f8 3b       	jl	$-14     	;abs 0x1ba8
  }
  delay_1_25mS(LED_DWELL*2);
    1bb8:	3f 40 c8 00 	mov	#200,	r15	;#0x00c8
    1bbc:	b0 12 22 35 	call	#13602		;#0x3522
  // All LEDs OFF
  for (index=0;index<25;index++) {
    1bc0:	07 43       	clr	r7		;
    write_led(index,OFF);
    1bc2:	0e 43       	clr	r14		;
    1bc4:	0f 47       	mov	r7,	r15	;
    1bc6:	b0 12 40 18 	call	#6208		;#0x1840
    1bca:	17 53       	inc	r7		;
    1bcc:	37 90 19 00 	cmp	#25,	r7	;#0x0019
    1bd0:	f8 3b       	jl	$-14     	;abs 0x1bc2
  }
  printf(GREEN);
    1bd2:	30 12 7b 1a 	push	#6779		;#0x1a7b
    1bd6:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  printf("[DONE]\n\r");
    1bda:	30 12 81 1a 	push	#6785		;#0x1a81
    1bde:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  printf(BLACK);
    1be2:	30 12 8a 1a 	push	#6794		;#0x1a8a
    1be6:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    1bea:	31 50 06 00 	add	#6,	r1	;#0x0006
}
    1bee:	37 41       	pop	r7		;
    1bf0:	38 41       	pop	r8		;
    1bf2:	39 41       	pop	r9		;
    1bf4:	3a 41       	pop	r10		;
    1bf6:	3b 41       	pop	r11		;
    1bf8:	30 41       	ret			
    1bfa:	0a 0d       	.word	0x0d0a;	????
    1bfc:	43 75       	.word	0x7543;	????
    1bfe:	72 72       	subc.b	#8,	r2	;r2 As==11
    1c00:	65 6e       	addc.b	@r14,	r5	;
    1c02:	74 20       	jnz	$+234    	;abs 0x1cec
    1c04:	4f 75       	subc.b	r5,	r15	;
    1c06:	74 70 75 74 	subc.b	#29813,	r4	;#0x7475
    1c0a:	20 43       	br	#2		;r3 As==10
    1c0c:	61 6c       	addc.b	@r12,	r1	;
    1c0e:	69 62       	addc.b	#4,	r9	;r2 As==10
    1c10:	72 61       	addc.b	@r1+,	r2	;
    1c12:	74 69       	addc.b	@r9+,	r4	;
    1c14:	6f 6e       	addc.b	@r14,	r15	;
    1c16:	0a 0d       	.word	0x0d0a;	????
    1c18:	00 41       	br	r1		;
    1c1a:	74 74       	subc.b	@r4+,	r4	;
    1c1c:	61 63       	addc.b	#2,	r1	;r3 As==10
    1c1e:	68 20       	jnz	$+210    	;abs 0x1cf0
    1c20:	74 68       	addc.b	@r8+,	r4	;
    1c22:	65 20       	jnz	$+204    	;abs 0x1cee
    1c24:	44 56       	add.b	r6,	r4	;
    1c26:	4d 20       	jnz	$+156    	;abs 0x1cc2
    1c28:	69 6e       	addc.b	@r14,	r9	;
    1c2a:	20 63       	addc	#2,	r0	;r3 As==10
    1c2c:	75 72       	subc.b	#8,	r5	;r2 As==11
    1c2e:	72 65       	addc.b	@r5+,	r2	;
    1c30:	6e 74       	subc.b	@r4,	r14	;
    1c32:	20 6d       	addc	@r13,	r0	;
    1c34:	6f 64       	addc.b	@r4,	r15	;
    1c36:	65 20       	jnz	$+204    	;abs 0x1d02
    1c38:	74 6f       	addc.b	@r15+,	r4	;
    1c3a:	20 74       	subc	@r4,	r0	;
    1c3c:	68 65       	addc.b	@r5,	r8	;
    1c3e:	20 70       	subc	@r0,	r0	;
    1c40:	69 6e       	addc.b	@r14,	r9	;
    1c42:	20 77       	subc	@r7,	r0	;
    1c44:	69 74       	subc.b	@r4,	r9	;
    1c46:	68 20       	jnz	$+210    	;abs 0x1d18
    1c48:	74 68       	addc.b	@r8+,	r4	;
    1c4a:	65 20       	jnz	$+204    	;abs 0x1d16
    1c4c:	61 63       	addc.b	#2,	r1	;r3 As==10
    1c4e:	74 69       	addc.b	@r9+,	r4	;
    1c50:	76 65       	addc.b	@r5+,	r6	;
    1c52:	20 4c       	br	@r12		;
    1c54:	45 44       	mov.b	r4,	r5	;
    1c56:	0a 0d       	.word	0x0d0a;	????
    1c58:	00 55       	add	r5,	r0	;
    1c5a:	73 65       	.word	0x6573;	????
    1c5c:	20 74       	subc	@r4,	r0	;
    1c5e:	68 65       	addc.b	@r5,	r8	;
    1c60:	20 75       	subc	@r5,	r0	;
    1c62:	70 20       	jnz	$+226    	;abs 0x1d44
    1c64:	61 72       	subc.b	#4,	r1	;r2 As==10
    1c66:	72 6f       	addc.b	@r15+,	r2	;
    1c68:	77 20       	jnz	$+240    	;abs 0x1d58
    1c6a:	61 6e       	addc.b	@r14,	r1	;
    1c6c:	64 20       	jnz	$+202    	;abs 0x1d36
    1c6e:	64 6f       	addc.b	@r15,	r4	;
    1c70:	77 6e       	addc.b	@r14+,	r7	;
    1c72:	20 61       	addc	@r1,	r0	;
    1c74:	72 72       	subc.b	#8,	r2	;r2 As==11
    1c76:	6f 77       	subc.b	@r7,	r15	;
    1c78:	20 6b       	addc	@r11,	r0	;
    1c7a:	65 79       	subc.b	@r9,	r5	;
    1c7c:	73 20       	jnz	$+232    	;abs 0x1d64
    1c7e:	74 6f       	addc.b	@r15+,	r4	;
    1c80:	20 61       	addc	@r1,	r0	;
    1c82:	64 6a       	addc.b	@r10,	r4	;
    1c84:	75 73       	subc.b	#-1,	r5	;r3 As==11
    1c86:	74 20       	jnz	$+234    	;abs 0x1d70
    1c88:	74 68       	addc.b	@r8+,	r4	;
    1c8a:	65 20       	jnz	$+204    	;abs 0x1d56
    1c8c:	63 75       	.word	0x7563;	????
    1c8e:	72 72       	subc.b	#8,	r2	;r2 As==11
    1c90:	65 6e       	addc.b	@r14,	r5	;
    1c92:	74 0a       	.word	0x0a74;	????
    1c94:	0d 00       	.word	0x000d;	????
    1c96:	2d 2d       	jc	$+604    	;abs 0x1ef2
    1c98:	2d 2d       	jc	$+604    	;abs 0x1ef4
    1c9a:	2d 2d       	jc	$+604    	;abs 0x1ef6
    1c9c:	2d 2d       	jc	$+604    	;abs 0x1ef8
    1c9e:	2d 2d       	jc	$+604    	;abs 0x1efa
    1ca0:	2d 2d       	jc	$+604    	;abs 0x1efc
    1ca2:	2d 2d       	jc	$+604    	;abs 0x1efe
    1ca4:	2d 2d       	jc	$+604    	;abs 0x1f00
    1ca6:	2d 2d       	jc	$+604    	;abs 0x1f02
    1ca8:	2d 2d       	jc	$+604    	;abs 0x1f04
    1caa:	2d 2d       	jc	$+604    	;abs 0x1f06
    1cac:	2d 2d       	jc	$+604    	;abs 0x1f08
    1cae:	2d 2d       	jc	$+604    	;abs 0x1f0a
    1cb0:	2d 2d       	jc	$+604    	;abs 0x1f0c
    1cb2:	2d 2d       	jc	$+604    	;abs 0x1f0e
    1cb4:	2d 2d       	jc	$+604    	;abs 0x1f10
    1cb6:	2d 2d       	jc	$+604    	;abs 0x1f12
    1cb8:	2d 2d       	jc	$+604    	;abs 0x1f14
    1cba:	2d 2d       	jc	$+604    	;abs 0x1f16
    1cbc:	2d 2d       	jc	$+604    	;abs 0x1f18
    1cbe:	2d 2d       	jc	$+604    	;abs 0x1f1a
    1cc0:	2d 2d       	jc	$+604    	;abs 0x1f1c
    1cc2:	2d 2d       	jc	$+604    	;abs 0x1f1e
    1cc4:	2d 2d       	jc	$+604    	;abs 0x1f20
    1cc6:	2d 2d       	jc	$+604    	;abs 0x1f22
    1cc8:	2d 2d       	jc	$+604    	;abs 0x1f24
    1cca:	2d 2d       	jc	$+604    	;abs 0x1f26
    1ccc:	2d 2d       	jc	$+604    	;abs 0x1f28
    1cce:	2d 2d       	jc	$+604    	;abs 0x1f2a
    1cd0:	2d 2d       	jc	$+604    	;abs 0x1f2c
    1cd2:	2d 2d       	jc	$+604    	;abs 0x1f2e
    1cd4:	2d 2d       	jc	$+604    	;abs 0x1f30
    1cd6:	2d 0a       	.word	0x0a2d;	????
    1cd8:	0d 00       	.word	0x000d;	????
    1cda:	25 64       	addc	@r4,	r5	;
    1cdc:	40 32       	jn	$-894    	;abs 0x195e
    1cde:	30 30       	jn	$+98     	;abs 0x1d40
    1ce0:	75 41       	pop.b	r5		;
    1ce2:	3e 20       	jnz	$+126    	;abs 0x1d60
    1ce4:	00 25       	jz	$+514    	;abs 0x1ee6
    1ce6:	64 40       	mov.b	@r0,	r4	;
    1ce8:	30 75       	subc	@r5+,	r0	;
    1cea:	41 3e       	jmp	$-892    	;abs 0x196e
    1cec:	20 00       	.word	0x0020;	????
    1cee:	25 64       	addc	@r4,	r5	;
    1cf0:	20 00       	.word	0x0020;	????
    1cf2:	66 6c       	addc.b	@r12,	r6	;
    1cf4:	6f 6f       	addc.b	@r15,	r15	;
    1cf6:	72 3d       	jmp	$+742    	;abs 0x1fdc
    1cf8:	25 64       	addc	@r4,	r5	;
    1cfa:	2c 00       	.word	0x002c;	????
    1cfc:	6f 66       	addc.b	@r6,	r15	;
    1cfe:	66 73       	subc.b	#2,	r6	;r3 As==10
    1d00:	65 74       	subc.b	@r4,	r5	;
    1d02:	3d 25       	jz	$+636    	;abs 0x1f7e
    1d04:	64 0a       	.word	0x0a64;	????
    1d06:	0d 00       	.word	0x000d;	????
    1d08:	43 6f       	.word	0x6f43;	????
    1d0a:	6d 6d       	addc.b	@r13,	r13	;
    1d0c:	69 74       	subc.b	@r4,	r9	;
    1d0e:	20 63       	addc	#2,	r0	;r3 As==10
    1d10:	61 6c       	addc.b	@r12,	r1	;
    1d12:	69 62       	addc.b	#4,	r9	;r2 As==10
    1d14:	72 61       	addc.b	@r1+,	r2	;
    1d16:	74 69       	addc.b	@r9+,	r4	;
    1d18:	6f 6e       	addc.b	@r14,	r15	;
    1d1a:	20 74       	subc	@r4,	r0	;
    1d1c:	6f 20       	jnz	$+224    	;abs 0x1dfc
    1d1e:	65 78       	subc.b	@r8,	r5	;
    1d20:	74 65       	addc.b	@r5+,	r4	;
    1d22:	72 6e       	addc.b	@r14+,	r2	;
    1d24:	61 6c       	addc.b	@r12,	r1	;
    1d26:	20 66       	addc	@r6,	r0	;
    1d28:	6c 61       	addc.b	@r1,	r12	;
    1d2a:	73 68       	.word	0x6873;	????
    1d2c:	20 3f       	jmp	$-446    	;abs 0x1b6e
    1d2e:	20 28       	jnc	$+66     	;abs 0x1d70
    1d30:	79 20       	jnz	$+244    	;abs 0x1e24
    1d32:	6f 72       	subc.b	#4,	r15	;r2 As==10
    1d34:	20 6e       	addc	@r14,	r0	;
    1d36:	29 20       	jnz	$+84     	;abs 0x1d8a
    1d38:	00 0a       	.word	0x0a00;	????
    1d3a:	0d 50       	add	r0,	r13	;
    1d3c:	6c 65       	addc.b	@r5,	r12	;
    1d3e:	61 73       	subc.b	#2,	r1	;r3 As==10
    1d40:	65 20       	jnz	$+204    	;abs 0x1e0c
    1d42:	72 65       	addc.b	@r5+,	r2	;
    1d44:	73 70       	.word	0x7073;	????
    1d46:	6f 6e       	addc.b	@r14,	r15	;
    1d48:	64 20       	jnz	$+202    	;abs 0x1e12
    1d4a:	77 69       	addc.b	@r9+,	r7	;
    1d4c:	74 68       	addc.b	@r8+,	r4	;
    1d4e:	20 79       	subc	@r9,	r0	;
    1d50:	20 6f       	addc	@r15,	r0	;
    1d52:	72 20       	jnz	$+230    	;abs 0x1e38
    1d54:	6e 3a       	jl	$-802    	;abs 0x1a32
    1d56:	20 00       	.word	0x0020;	????
    1d58:	0a 0d       	.word	0x0d0a;	????
    1d5a:	43 61       	.word	0x6143;	????
    1d5c:	6c 69       	addc.b	@r9,	r12	;
    1d5e:	62 72       	subc.b	#4,	r2	;r2 As==10
    1d60:	61 74       	subc.b	@r4,	r1	;
    1d62:	69 6f       	addc.b	@r15,	r9	;
    1d64:	6e 20       	jnz	$+222    	;abs 0x1e42
    1d66:	41 62       	addc.b	r2,	r1	;
    1d68:	6f 72       	subc.b	#4,	r15	;r2 As==10
    1d6a:	74 20       	jnz	$+234    	;abs 0x1e54
    1d6c:	21 0a       	.word	0x0a21;	????
    1d6e:	0d 00       	.word	0x000d;	????
    1d70:	0a 0d       	.word	0x0d0a;	????
    1d72:	43 61       	.word	0x6143;	????
    1d74:	6c 69       	addc.b	@r9,	r12	;
    1d76:	62 72       	subc.b	#4,	r2	;r2 As==10
    1d78:	61 74       	subc.b	@r4,	r1	;
    1d7a:	69 6f       	addc.b	@r15,	r9	;
    1d7c:	6e 20       	jnz	$+222    	;abs 0x1e5a
    1d7e:	53 61       	.word	0x6153;	????
    1d80:	76 65       	addc.b	@r5+,	r6	;
    1d82:	64 20       	jnz	$+202    	;abs 0x1e4c
    1d84:	21 0a       	.word	0x0a21;	????
    1d86:	0d 00       	.word	0x000d;	????
    1d88:	25 64       	addc	@r4,	r5	;
    1d8a:	20 25       	jz	$+578    	;abs 0x1fcc
    1d8c:	64 0a       	.word	0x0a64;	????
    1d8e:	0d 00       	.word	0x000d;	????
    1d90:	25 64       	addc	@r4,	r5	;
    1d92:	0a 0d       	.word	0x0d0a;	????
	...

00001d96 <current_output_calibration>:

void current_output_calibration (ueac_t *system) {
    1d96:	0b 12       	push	r11		;
    1d98:	0a 12       	push	r10		;
    1d9a:	09 12       	push	r9		;
    1d9c:	08 12       	push	r8		;
    1d9e:	07 12       	push	r7		;
    1da0:	06 12       	push	r6		;
    1da2:	05 12       	push	r5		;
    1da4:	21 82       	sub	#4,	r1	;r2 As==10
    1da6:	05 4f       	mov	r15,	r5	;
  enum {FIND_ESCAPE,FIND_LEFT_BRACKET,EVALUATE_ARROW};
  int i;
  char ch;
  int parse_state=FIND_ESCAPE;
    1da8:	0a 43       	clr	r10		;
  int i_offset=0;
  int found=0;
  int sum,current;
  ueacval_t result;


  printf("\n\rCurrent Output Calibration\n\r");
    1daa:	30 12 fa 1b 	push	#7162		;#0x1bfa
    1dae:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  printf("Attach the DVM in current mode to the pin with the active LED\n\r");
    1db2:	30 12 19 1c 	push	#7193		;#0x1c19
    1db6:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  printf("Use the up arrow and down arrow keys to adjust the current\n\r");
    1dba:	30 12 59 1c 	push	#7257		;#0x1c59
    1dbe:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  printf("-----------------------------------------------------------------\n\r");
    1dc2:	30 12 96 1c 	push	#7318		;#0x1c96
    1dc6:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  buffer1_write(0,'V');        // write the valid char to the first location of external flash
    1dca:	7e 40 56 00 	mov.b	#86,	r14	;#0x0056
    1dce:	0f 43       	clr	r15		;
    1dd0:	b0 12 d0 24 	call	#9424		;#0x24d0
  for (i=1;i<PAGE_SIZE;i++) {  // clear out the external flash's SRAM buffer
    1dd4:	19 43       	mov	#1,	r9	;r3 As==01
    1dd6:	31 52       	add	#8,	r1	;r2 As==11
    buffer1_write(i,0);
    1dd8:	4e 43       	clr.b	r14		;
    1dda:	0f 49       	mov	r9,	r15	;
    1ddc:	b0 12 d0 24 	call	#9424		;#0x24d0
    1de0:	19 53       	inc	r9		;
    1de2:	39 90 08 01 	cmp	#264,	r9	;#0x0108
    1de6:	f8 3b       	jl	$-14     	;abs 0x1dd8
  }
  for (i=0;i<25;i++) {
    1de8:	09 43       	clr	r9		;
    write_lla(i,0);
    1dea:	0e 43       	clr	r14		;
    1dec:	0f 49       	mov	r9,	r15	;
    1dee:	b0 12 52 19 	call	#6482		;#0x1952
    write_led(i,1);
    1df2:	1e 43       	mov	#1,	r14	;r3 As==01
    1df4:	0f 49       	mov	r9,	r15	;
    1df6:	b0 12 40 18 	call	#6208		;#0x1840
    found=0;
    1dfa:	07 43       	clr	r7		;
    i_offset=0;
    1dfc:	0b 43       	clr	r11		;
    printf("%d@200uA> ",i);
    1dfe:	09 12       	push	r9		;
    1e00:	30 12 da 1c 	push	#7386		;#0x1cda
    1e04:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    while (!found) {
    1e08:	21 52       	add	#4,	r1	;r2 As==10
    1e0a:	06 49       	mov	r9,	r6	;
    1e0c:	16 53       	inc	r6		;
    1e0e:	08 49       	mov	r9,	r8	;
    1e10:	08 58       	rla	r8		;
    1e12:	08 58       	rla	r8		;
      write_dac(i,dac_translation[0]+i_offset);
    1e14:	1f 42 d4 25 	mov	&0x25d4,r15	;0x25d4
    1e18:	0f 5b       	add	r11,	r15	;
    1e1a:	0e 4f       	mov	r15,	r14	;
    1e1c:	0f 49       	mov	r9,	r15	;
    1e1e:	b0 12 56 16 	call	#5718		;#0x1656
      if (((ch=getchar())!='\n')&&(ch!='\r')) {
    1e22:	b0 12 1c 15 	call	#5404		;#0x151c
    1e26:	7f 90 0a 00 	cmp.b	#10,	r15	;#0x000a
    1e2a:	1b 25       	jz	$+568    	;abs 0x2062
    1e2c:	7f 90 0d 00 	cmp.b	#13,	r15	;#0x000d
    1e30:	18 25       	jz	$+562    	;abs 0x2062
        switch (parse_state) {
    1e32:	1a 93       	cmp	#1,	r10	;r3 As==01
    1e34:	11 25       	jz	$+548    	;abs 0x2058
    1e36:	2a 93       	cmp	#2,	r10	;r3 As==10
    1e38:	08 39       	jl	$+530    	;abs 0x204a
    1e3a:	2a 93       	cmp	#2,	r10	;r3 As==10
    1e3c:	fa 24       	jz	$+502    	;abs 0x2032
    1e3e:	07 93       	cmp	#0,	r7	;r3 As==00
    1e40:	e9 27       	jz	$-44     	;abs 0x1e14
        case FIND_ESCAPE:
          if (ch==0x1b) {
            parse_state=FIND_LEFT_BRACKET;
          }
          break;
        case FIND_LEFT_BRACKET:
          if (ch=='[') {
            parse_state=EVALUATE_ARROW;
          }
          else {
            parse_state=FIND_ESCAPE;
          }
          break;
        case EVALUATE_ARROW:
          if (ch=='A') {
            i_offset--;
          }
          else if (ch=='B') {
            i_offset++;
          }
          parse_state=FIND_ESCAPE;
          break;
        }
      }
      else {
        buffer1_write(i+1,i_offset);
        printf("%d\n\r",i_offset);
        found=1;
        system->pin_cal[i].i_200uA_offset=i_offset;
      }
    }
    found=0;
    1e42:	07 43       	clr	r7		;
    i_offset=0;
    1e44:	0b 47       	mov	r7,	r11	;
    printf("%d@0uA> ",i);
    1e46:	09 12       	push	r9		;
    1e48:	30 12 e5 1c 	push	#7397		;#0x1ce5
    1e4c:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    while (!found) {
    1e50:	21 52       	add	#4,	r1	;r2 As==10
    1e52:	08 49       	mov	r9,	r8	;
    1e54:	08 58       	rla	r8		;
    1e56:	08 58       	rla	r8		;
    1e58:	08 55       	add	r5,	r8	;
    1e5a:	38 50 42 00 	add	#66,	r8	;#0x0042
      write_dac(i,dac_translation[200]+i_offset);
    1e5e:	1f 42 64 27 	mov	&0x2764,r15	;0x2764
    1e62:	0f 5b       	add	r11,	r15	;
    1e64:	0e 4f       	mov	r15,	r14	;
    1e66:	0f 49       	mov	r9,	r15	;
    1e68:	b0 12 56 16 	call	#5718		;#0x1656
      if (((ch=getchar())!='\n')&&(ch!='\r')) {
    1e6c:	b0 12 1c 15 	call	#5404		;#0x151c
    1e70:	7f 90 0a 00 	cmp.b	#10,	r15	;#0x000a
    1e74:	c9 24       	jz	$+404    	;abs 0x2008
    1e76:	7f 90 0d 00 	cmp.b	#13,	r15	;#0x000d
    1e7a:	c6 24       	jz	$+398    	;abs 0x2008
        switch (parse_state) {
    1e7c:	1a 93       	cmp	#1,	r10	;r3 As==01
    1e7e:	bf 24       	jz	$+384    	;abs 0x1ffe
    1e80:	2a 93       	cmp	#2,	r10	;r3 As==10
    1e82:	b6 38       	jl	$+366    	;abs 0x1ff0
    1e84:	2a 93       	cmp	#2,	r10	;r3 As==10
    1e86:	a8 24       	jz	$+338    	;abs 0x1fd8
    1e88:	07 93       	cmp	#0,	r7	;r3 As==00
    1e8a:	e9 27       	jz	$-44     	;abs 0x1e5e
        case FIND_ESCAPE:
          if (ch==0x1b) {
            parse_state=FIND_LEFT_BRACKET;
          }
          break;
        case FIND_LEFT_BRACKET:
          if (ch=='[') {
            parse_state=EVALUATE_ARROW;
          }
          else {
            parse_state=FIND_ESCAPE;
          }
          break;
        case EVALUATE_ARROW:
          if (ch=='A') {
            i_offset--;
          }
          else if (ch=='B') {
            i_offset++;
          }
          parse_state=FIND_ESCAPE;
          break;
        }
      }
      else {
        buffer1_write(i+26,i_offset);
        printf("%d %d\n\r",i_offset,dac_translation[200]+i_offset);
        found=1;
        system->pin_cal[i].i_zero_offset=i_offset;
      }
    }
    write_led(i,0);
    1e8c:	0e 43       	clr	r14		;
    1e8e:	0f 49       	mov	r9,	r15	;
    1e90:	b0 12 40 18 	call	#6208		;#0x1840
    1e94:	09 46       	mov	r6,	r9	;
    1e96:	36 90 19 00 	cmp	#25,	r6	;#0x0019
    1e9a:	a7 3b       	jl	$-176    	;abs 0x1dea
  }
  for (i=0;i<25;i++) {
    1e9c:	09 43       	clr	r9		;
    write_lla(i,1);
    1e9e:	1e 43       	mov	#1,	r14	;r3 As==01
    1ea0:	0f 49       	mov	r9,	r15	;
    1ea2:	b0 12 52 19 	call	#6482		;#0x1952
    write_led(i,1);
    1ea6:	1e 43       	mov	#1,	r14	;r3 As==01
    1ea8:	0f 49       	mov	r9,	r15	;
    1eaa:	b0 12 40 18 	call	#6208		;#0x1840
    printf("%d ",i);
    1eae:	09 12       	push	r9		;
    1eb0:	30 12 ee 1c 	push	#7406		;#0x1cee
    1eb4:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    sum=0;
    1eb8:	06 43       	clr	r6		;
    for (current=200;current>0;current-=50) {
    1eba:	37 40 c8 00 	mov	#200,	r7	;#0x00c8
    1ebe:	21 52       	add	#4,	r1	;r2 As==10
    1ec0:	08 49       	mov	r9,	r8	;
    1ec2:	08 58       	rla	r8		;
    1ec4:	0a 48       	mov	r8,	r10	;
      write_current(i,current);
    1ec6:	0e 47       	mov	r7,	r14	;
    1ec8:	0f 49       	mov	r9,	r15	;
    1eca:	b0 12 06 16 	call	#5638		;#0x1606
      delay_1_25mS(1500);
    1ece:	3f 40 dc 05 	mov	#1500,	r15	;#0x05dc
    1ed2:	b0 12 22 35 	call	#13602		;#0x3522
      convert_a2d(I_CONVERSION,pin_data[i].filtered_result,&result,25);
    1ed6:	0b 48       	mov	r8,	r11	;
    1ed8:	0b 5b       	rla	r11		;
    1eda:	0b 5b       	rla	r11		;
    1edc:	0b 5b       	rla	r11		;
    1ede:	0b 5b       	rla	r11		;
    1ee0:	08 4a       	mov	r10,	r8	;
    1ee2:	0b 5a       	add	r10,	r11	;
    1ee4:	0b 5a       	add	r10,	r11	;
    1ee6:	0b 5a       	add	r10,	r11	;
    1ee8:	3b 50 6c 02 	add	#620,	r11	;#0x026c
    1eec:	3c 40 19 00 	mov	#25,	r12	;#0x0019
    1ef0:	0d 41       	mov	r1,	r13	;
    1ef2:	1e 4b 24 00 	mov	36(r11),r14	;
    1ef6:	5f 43       	mov.b	#1,	r15	;r3 As==01
    1ef8:	b0 12 38 55 	call	#21816		;#0x5538
      printf("%d ",result.integer);
    1efc:	11 12 02 00 	push	2(r1)		;
    1f00:	30 12 ee 1c 	push	#7406		;#0x1cee
    1f04:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
      sum+=(current-result.integer);
    1f08:	0f 47       	mov	r7,	r15	;
    1f0a:	1f 81 04 00 	sub	4(r1),	r15	;
    1f0e:	06 5f       	add	r15,	r6	;
    1f10:	21 52       	add	#4,	r1	;r2 As==10
    1f12:	37 50 ce ff 	add	#-50,	r7	;#0xffce
    1f16:	17 93       	cmp	#1,	r7	;r3 As==01
    1f18:	d6 37       	jge	$-82     	;abs 0x1ec6
    }
    write_current(i,0);
    1f1a:	0e 43       	clr	r14		;
    1f1c:	0f 49       	mov	r9,	r15	;
    1f1e:	b0 12 06 16 	call	#5638		;#0x1606
    delay_1_25mS(1500);
    1f22:	3f 40 dc 05 	mov	#1500,	r15	;#0x05dc
    1f26:	b0 12 22 35 	call	#13602		;#0x3522
    convert_a2d(I_CONVERSION,pin_data[i].filtered_result,&result,25);
    1f2a:	3c 40 19 00 	mov	#25,	r12	;#0x0019
    1f2e:	0d 41       	mov	r1,	r13	;
    1f30:	1e 4b 24 00 	mov	36(r11),r14	;
    1f34:	5f 43       	mov.b	#1,	r15	;r3 As==01
    1f36:	b0 12 38 55 	call	#21816		;#0x5538
    printf("floor=%d,",result.integer);
    1f3a:	11 12 02 00 	push	2(r1)		;
    1f3e:	30 12 f2 1c 	push	#7410		;#0x1cf2
    1f42:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    buffer1_write(i+51,result.integer);
    1f46:	0f 49       	mov	r9,	r15	;
    1f48:	3f 50 33 00 	add	#51,	r15	;#0x0033
    1f4c:	5e 41 04 00 	mov.b	4(r1),	r14	;
    1f50:	b0 12 d0 24 	call	#9424		;#0x24d0
    printf("offset=%d\n\r",sum/4);
    1f54:	0b 46       	mov	r6,	r11	;
    1f56:	06 93       	cmp	#0,	r6	;r3 As==00
    1f58:	3c 38       	jl	$+122    	;abs 0x1fd2
    1f5a:	0b 11       	rra	r11		;
    1f5c:	0b 11       	rra	r11		;
    1f5e:	0b 12       	push	r11		;
    1f60:	30 12 fc 1c 	push	#7420		;#0x1cfc
    1f64:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    buffer1_write(i+76,sum/4);
    1f68:	0f 49       	mov	r9,	r15	;
    1f6a:	3f 50 4c 00 	add	#76,	r15	;#0x004c
    1f6e:	4e 4b       	mov.b	r11,	r14	;
    1f70:	b0 12 d0 24 	call	#9424		;#0x24d0
    write_led(i,0);
    1f74:	0e 43       	clr	r14		;
    1f76:	0f 49       	mov	r9,	r15	;
    1f78:	b0 12 40 18 	call	#6208		;#0x1840
    write_lla(i,0);
    1f7c:	0e 43       	clr	r14		;
    1f7e:	0f 49       	mov	r9,	r15	;
    1f80:	b0 12 52 19 	call	#6482		;#0x1952
    1f84:	31 52       	add	#8,	r1	;r2 As==11
    1f86:	19 53       	inc	r9		;
    1f88:	39 90 19 00 	cmp	#25,	r9	;#0x0019
    1f8c:	88 3b       	jl	$-238    	;abs 0x1e9e
  }
  printf("Commit calibration to external flash ? (y or n) ");
    1f8e:	30 12 08 1d 	push	#7432		;#0x1d08
    1f92:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  while (1) {
    1f96:	21 53       	incd	r1		;
    if (((ch=getchar())=='y')||(ch=='Y')) {
    1f98:	b0 12 1c 15 	call	#5404		;#0x151c
    1f9c:	7f 90 79 00 	cmp.b	#121,	r15	;#0x0079
    1fa0:	12 24       	jz	$+38     	;abs 0x1fc6
    1fa2:	7f 90 59 00 	cmp.b	#89,	r15	;#0x0059
    1fa6:	0f 24       	jz	$+32     	;abs 0x1fc6
      buffer1_to_page_e(0);
      printf("\n\rCalibration Saved !\n\r");
      break;
    }
    if ((ch=='n')||(ch=='N')) {
    1fa8:	7f 90 6e 00 	cmp.b	#110,	r15	;#0x006e
    1fac:	06 24       	jz	$+14     	;abs 0x1fba
    1fae:	7f 90 4e 00 	cmp.b	#78,	r15	;#0x004e
    1fb2:	03 24       	jz	$+8      	;abs 0x1fba
      printf("\n\rCalibration Abort !\n\r");
      break;
    }
    else {
      printf("\n\rPlease respond with y or n: ");
    1fb4:	30 12 39 1d 	push	#7481		;#0x1d39
    1fb8:	ec 3f       	jmp	$-38     	;abs 0x1f92
    1fba:	30 12 58 1d 	push	#7512		;#0x1d58
    1fbe:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    1fc2:	21 53       	incd	r1		;
    1fc4:	5e 3c       	jmp	$+190    	;abs 0x2082
    1fc6:	0f 43       	clr	r15		;
    1fc8:	b0 12 3a 24 	call	#9274		;#0x243a
    1fcc:	30 12 70 1d 	push	#7536		;#0x1d70
    1fd0:	f6 3f       	jmp	$-18     	;abs 0x1fbe
    1fd2:	3b 50 03 00 	add	#3,	r11	;#0x0003
    1fd6:	c1 3f       	jmp	$-124    	;abs 0x1f5a
    1fd8:	7f 90 41 00 	cmp.b	#65,	r15	;#0x0041
    1fdc:	07 24       	jz	$+16     	;abs 0x1fec
    1fde:	7f 90 42 00 	cmp.b	#66,	r15	;#0x0042
    1fe2:	02 24       	jz	$+6      	;abs 0x1fe8
    1fe4:	0a 43       	clr	r10		;
    1fe6:	50 3f       	jmp	$-350    	;abs 0x1e88
    1fe8:	1b 53       	inc	r11		;
    1fea:	fc 3f       	jmp	$-6      	;abs 0x1fe4
    1fec:	3b 53       	add	#-1,	r11	;r3 As==11
    1fee:	fa 3f       	jmp	$-10     	;abs 0x1fe4
    1ff0:	0a 93       	cmp	#0,	r10	;r3 As==00
    1ff2:	4a 23       	jnz	$-362    	;abs 0x1e88
    1ff4:	7f 90 1b 00 	cmp.b	#27,	r15	;#0x001b
    1ff8:	47 23       	jnz	$-368    	;abs 0x1e88
    1ffa:	1a 43       	mov	#1,	r10	;r3 As==01
    1ffc:	45 3f       	jmp	$-372    	;abs 0x1e88
    1ffe:	7f 90 5b 00 	cmp.b	#91,	r15	;#0x005b
    2002:	f0 23       	jnz	$-30     	;abs 0x1fe4
    2004:	2a 43       	mov	#2,	r10	;r3 As==10
    2006:	40 3f       	jmp	$-382    	;abs 0x1e88
    2008:	4e 4b       	mov.b	r11,	r14	;
    200a:	0f 49       	mov	r9,	r15	;
    200c:	3f 50 1a 00 	add	#26,	r15	;#0x001a
    2010:	b0 12 d0 24 	call	#9424		;#0x24d0
    2014:	1f 42 64 27 	mov	&0x2764,r15	;0x2764
    2018:	0f 5b       	add	r11,	r15	;
    201a:	0f 12       	push	r15		;
    201c:	0b 12       	push	r11		;
    201e:	30 12 88 1d 	push	#7560		;#0x1d88
    2022:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    2026:	17 43       	mov	#1,	r7	;r3 As==01
    2028:	c8 4b 01 00 	mov.b	r11,	1(r8)	;
    202c:	31 50 06 00 	add	#6,	r1	;#0x0006
    2030:	2b 3f       	jmp	$-424    	;abs 0x1e88
    2032:	7f 90 41 00 	cmp.b	#65,	r15	;#0x0041
    2036:	07 24       	jz	$+16     	;abs 0x2046
    2038:	7f 90 42 00 	cmp.b	#66,	r15	;#0x0042
    203c:	02 24       	jz	$+6      	;abs 0x2042
    203e:	0a 43       	clr	r10		;
    2040:	fe 3e       	jmp	$-514    	;abs 0x1e3e
    2042:	1b 53       	inc	r11		;
    2044:	fc 3f       	jmp	$-6      	;abs 0x203e
    2046:	3b 53       	add	#-1,	r11	;r3 As==11
    2048:	fa 3f       	jmp	$-10     	;abs 0x203e
    204a:	0a 93       	cmp	#0,	r10	;r3 As==00
    204c:	f8 22       	jnz	$-526    	;abs 0x1e3e
    204e:	7f 90 1b 00 	cmp.b	#27,	r15	;#0x001b
    2052:	f5 22       	jnz	$-532    	;abs 0x1e3e
    2054:	1a 43       	mov	#1,	r10	;r3 As==01
    2056:	f3 3e       	jmp	$-536    	;abs 0x1e3e
    2058:	7f 90 5b 00 	cmp.b	#91,	r15	;#0x005b
    205c:	f0 23       	jnz	$-30     	;abs 0x203e
    205e:	2a 43       	mov	#2,	r10	;r3 As==10
    2060:	ee 3e       	jmp	$-546    	;abs 0x1e3e
    2062:	4e 4b       	mov.b	r11,	r14	;
    2064:	0f 46       	mov	r6,	r15	;
    2066:	b0 12 d0 24 	call	#9424		;#0x24d0
    206a:	0b 12       	push	r11		;
    206c:	30 12 90 1d 	push	#7568		;#0x1d90
    2070:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    2074:	17 43       	mov	#1,	r7	;r3 As==01
    2076:	0f 48       	mov	r8,	r15	;
    2078:	0f 55       	add	r5,	r15	;
    207a:	cf 4b 42 00 	mov.b	r11,	66(r15)	;
    207e:	21 52       	add	#4,	r1	;r2 As==10
    2080:	de 3e       	jmp	$-578    	;abs 0x1e3e
    }
  }
}
    2082:	21 52       	add	#4,	r1	;r2 As==10
    2084:	35 41       	pop	r5		;
    2086:	36 41       	pop	r6		;
    2088:	37 41       	pop	r7		;
    208a:	38 41       	pop	r8		;
    208c:	39 41       	pop	r9		;
    208e:	3a 41       	pop	r10		;
    2090:	3b 41       	pop	r11		;
    2092:	30 41       	ret			
    2094:	53 65       	.word	0x6553;	????
    2096:	6c 65       	addc.b	@r5,	r12	;
    2098:	63 74       	.word	0x7463;	????
    209a:	20 61       	addc	@r1,	r0	;
    209c:	20 43       	br	#2		;r3 As==10
    209e:	68 61       	addc.b	@r1,	r8	;
    20a0:	6e 6e       	addc.b	@r14,	r14	;
    20a2:	65 6c       	addc.b	@r12,	r5	;
    20a4:	20 75       	subc	@r5,	r0	;
    20a6:	73 69       	.word	0x6973;	????
    20a8:	6e 67       	addc.b	@r7,	r14	;
    20aa:	20 74       	subc	@r4,	r0	;
    20ac:	68 65       	addc.b	@r5,	r8	;
    20ae:	20 61       	addc	@r1,	r0	;
    20b0:	72 72       	subc.b	#8,	r2	;r2 As==11
    20b2:	6f 77       	subc.b	@r7,	r15	;
    20b4:	20 6b       	addc	@r11,	r0	;
    20b6:	65 79       	subc.b	@r9,	r5	;
    20b8:	73 20       	jnz	$+232    	;abs 0x21a0
    20ba:	61 6e       	addc.b	@r14,	r1	;
    20bc:	64 20       	jnz	$+202    	;abs 0x2186
    20be:	70 72       	subc.b	#8,	r0	;r2 As==11
    20c0:	65 73       	subc.b	#2,	r5	;r3 As==10
    20c2:	73 20       	jnz	$+232    	;abs 0x21aa
    20c4:	72 65       	addc.b	@r5+,	r2	;
    20c6:	74 75       	subc.b	@r5+,	r4	;
    20c8:	72 6e       	addc.b	@r14+,	r2	;
    20ca:	20 2e       	jc	$-958    	;abs 0x1d0c
    20cc:	2e 2e       	jc	$-930    	;abs 0x1d2a
    20ce:	0a 0d       	.word	0x0d0a;	????
    20d0:	00 25       	jz	$+514    	;abs 0x22d2
    20d2:	64 20       	jnz	$+202    	;abs 0x219c
    20d4:	63 68       	.word	0x6863;	????
    20d6:	61 6e       	addc.b	@r14,	r1	;
    20d8:	6e 65       	addc.b	@r5,	r14	;
    20da:	6c 20       	jnz	$+218    	;abs 0x21b4
    20dc:	73 65       	.word	0x6573;	????
    20de:	6c 65       	addc.b	@r5,	r12	;
    20e0:	63 74       	.word	0x7463;	????
    20e2:	65 64       	addc.b	@r4,	r5	;
    20e4:	0a 0d       	.word	0x0d0a;	????
	...

000020e8 <channel_debug>:

void channel_debug (ueac_t *system) {
    20e8:	0b 12       	push	r11		;
    20ea:	0a 12       	push	r10		;
  enum {FIND_ESCAPE,FIND_LEFT_BRACKET,EVALUATE_ARROW};
  int channel=0;
    20ec:	0a 43       	clr	r10		;
  int parse_state=FIND_ESCAPE;
    20ee:	0b 43       	clr	r11		;
  char ch;

  printf("Select a Channel using the arrow keys and press return ...\n\r");
    20f0:	30 12 94 20 	push	#8340		;#0x2094
    20f4:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  write_led(channel,1);
    20f8:	1e 43       	mov	#1,	r14	;r3 As==01
    20fa:	0f 43       	clr	r15		;
    20fc:	b0 12 40 18 	call	#6208		;#0x1840
  while (((ch=getchar())!='\n')&&(ch!='\r')) {
    2100:	21 53       	incd	r1		;
    2102:	b0 12 1c 15 	call	#5404		;#0x151c
    2106:	7f 90 0a 00 	cmp.b	#10,	r15	;#0x000a
    210a:	63 24       	jz	$+200    	;abs 0x21d2
    210c:	7f 90 0d 00 	cmp.b	#13,	r15	;#0x000d
    2110:	60 24       	jz	$+194    	;abs 0x21d2
    switch (parse_state) {
    2112:	1b 93       	cmp	#1,	r11	;r3 As==01
    2114:	07 20       	jnz	$+16     	;abs 0x2124
    case FIND_ESCAPE:
      if (ch==0x1b) {
        parse_state=FIND_LEFT_BRACKET;
      }
      break;
    case FIND_LEFT_BRACKET:
      if (ch=='[') {
    2116:	7f 90 5b 00 	cmp.b	#91,	r15	;#0x005b
    211a:	02 24       	jz	$+6      	;abs 0x2120
        parse_state=EVALUATE_ARROW;
      }
      else {
        parse_state=FIND_ESCAPE;
      }
      break;
    case EVALUATE_ARROW:
      if (ch=='A') {
        // up arrow
        if (channel>4) {
          write_led(channel,0);
          channel-=5;
          write_led(channel,1);
        }
      }
      else if (ch=='B') {
        // down arrow
        if (channel<20) {
          write_led(channel,0);
          channel+=5;
          write_led(channel,1);
        }
      }
      else if (ch=='C') {
        // Right Arrow
        if ((channel!=4) &&\
            (channel!=9) &&\
            (channel!=14)&&\
            (channel!=19)&&\
            (channel!=24)) {
          write_led(channel,0);
          channel++; 
          write_led(channel,1);
        }
      }
      else if (ch=='D') {
        // Left Arrow
        if ((channel!=0) &&\
            (channel!=5) &&\
            (channel!=10)&&\
            (channel!=15)&&\
            (channel!=20)) {
          write_led(channel,0);
          channel--; 
          write_led(channel,1);
        }
      }
      parse_state=FIND_ESCAPE;
    211c:	0b 43       	clr	r11		;
    211e:	f1 3f       	jmp	$-28     	;abs 0x2102
    2120:	2b 43       	mov	#2,	r11	;r3 As==10
    2122:	ef 3f       	jmp	$-32     	;abs 0x2102
    2124:	2b 93       	cmp	#2,	r11	;r3 As==10
    2126:	4e 38       	jl	$+158    	;abs 0x21c4
    2128:	2b 93       	cmp	#2,	r11	;r3 As==10
    212a:	eb 23       	jnz	$-40     	;abs 0x2102
    212c:	7f 90 41 00 	cmp.b	#65,	r15	;#0x0041
    2130:	3f 24       	jz	$+128    	;abs 0x21b0
    2132:	7f 90 42 00 	cmp.b	#66,	r15	;#0x0042
    2136:	32 24       	jz	$+102    	;abs 0x219c
    2138:	7f 90 43 00 	cmp.b	#67,	r15	;#0x0043
    213c:	1b 24       	jz	$+56     	;abs 0x2174
    213e:	7f 90 44 00 	cmp.b	#68,	r15	;#0x0044
    2142:	ec 23       	jnz	$-38     	;abs 0x211c
    2144:	0a 93       	cmp	#0,	r10	;r3 As==00
    2146:	ea 27       	jz	$-42     	;abs 0x211c
    2148:	3a 90 05 00 	cmp	#5,	r10	;#0x0005
    214c:	e7 27       	jz	$-48     	;abs 0x211c
    214e:	3a 90 0a 00 	cmp	#10,	r10	;#0x000a
    2152:	e4 27       	jz	$-54     	;abs 0x211c
    2154:	3a 90 0f 00 	cmp	#15,	r10	;#0x000f
    2158:	e1 27       	jz	$-60     	;abs 0x211c
    215a:	3a 90 14 00 	cmp	#20,	r10	;#0x0014
    215e:	de 27       	jz	$-66     	;abs 0x211c
    2160:	0e 43       	clr	r14		;
    2162:	0f 4a       	mov	r10,	r15	;
    2164:	b0 12 40 18 	call	#6208		;#0x1840
    2168:	3a 53       	add	#-1,	r10	;r3 As==11
    216a:	1e 43       	mov	#1,	r14	;r3 As==01
    216c:	0f 4a       	mov	r10,	r15	;
    216e:	b0 12 40 18 	call	#6208		;#0x1840
    2172:	d4 3f       	jmp	$-86     	;abs 0x211c
    2174:	2a 92       	cmp	#4,	r10	;r2 As==10
    2176:	d2 27       	jz	$-90     	;abs 0x211c
    2178:	3a 90 09 00 	cmp	#9,	r10	;#0x0009
    217c:	cf 27       	jz	$-96     	;abs 0x211c
    217e:	3a 90 0e 00 	cmp	#14,	r10	;#0x000e
    2182:	cc 27       	jz	$-102    	;abs 0x211c
    2184:	3a 90 13 00 	cmp	#19,	r10	;#0x0013
    2188:	c9 27       	jz	$-108    	;abs 0x211c
    218a:	3a 90 18 00 	cmp	#24,	r10	;#0x0018
    218e:	c6 27       	jz	$-114    	;abs 0x211c
    2190:	0e 43       	clr	r14		;
    2192:	0f 4a       	mov	r10,	r15	;
    2194:	b0 12 40 18 	call	#6208		;#0x1840
    2198:	1a 53       	inc	r10		;
    219a:	e7 3f       	jmp	$-48     	;abs 0x216a
    219c:	3a 90 14 00 	cmp	#20,	r10	;#0x0014
    21a0:	bd 37       	jge	$-132    	;abs 0x211c
    21a2:	0e 43       	clr	r14		;
    21a4:	0f 4a       	mov	r10,	r15	;
    21a6:	b0 12 40 18 	call	#6208		;#0x1840
    21aa:	3a 50 05 00 	add	#5,	r10	;#0x0005
    21ae:	dd 3f       	jmp	$-68     	;abs 0x216a
    21b0:	3a 90 05 00 	cmp	#5,	r10	;#0x0005
    21b4:	b3 3b       	jl	$-152    	;abs 0x211c
    21b6:	0e 43       	clr	r14		;
    21b8:	0f 4a       	mov	r10,	r15	;
    21ba:	b0 12 40 18 	call	#6208		;#0x1840
    21be:	3a 50 fb ff 	add	#-5,	r10	;#0xfffb
    21c2:	d3 3f       	jmp	$-88     	;abs 0x216a
    21c4:	0b 93       	cmp	#0,	r11	;r3 As==00
    21c6:	9d 23       	jnz	$-196    	;abs 0x2102
    21c8:	7f 90 1b 00 	cmp.b	#27,	r15	;#0x001b
    21cc:	9a 23       	jnz	$-202    	;abs 0x2102
    21ce:	1b 43       	mov	#1,	r11	;r3 As==01
    21d0:	98 3f       	jmp	$-206    	;abs 0x2102
      break;
    }
  }
  printf("%d channel selected\n\r",channel);
    21d2:	0a 12       	push	r10		;
    21d4:	30 12 d1 20 	push	#8401		;#0x20d1
    21d8:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    21dc:	21 52       	add	#4,	r1	;r2 As==10
}
    21de:	3a 41       	pop	r10		;
    21e0:	3b 41       	pop	r11		;
    21e2:	30 41       	ret			
    21e4:	0a 0d       	.word	0x0d0a;	????
    21e6:	43 75       	.word	0x7543;	????
    21e8:	72 72       	subc.b	#8,	r2	;r2 As==11
    21ea:	65 6e       	addc.b	@r14,	r5	;
    21ec:	74 20       	jnz	$+234    	;abs 0x22d6
    21ee:	49 6e       	addc.b	r14,	r9	;
    21f0:	70 75       	subc.b	@r5+,	r0	;
    21f2:	74 20       	jnz	$+234    	;abs 0x22dc
    21f4:	43 61       	.word	0x6143;	????
    21f6:	6c 69       	addc.b	@r9,	r12	;
    21f8:	62 72       	subc.b	#4,	r2	;r2 As==10
    21fa:	61 74       	subc.b	@r4,	r1	;
    21fc:	69 6f       	addc.b	@r15,	r9	;
    21fe:	6e 0a       	.word	0x0a6e;	????
    2200:	0d 00       	.word	0x000d;	????

00002202 <current_input_calibration>:

void current_input_calibration (ueac_t *system) {
  printf("\n\rCurrent Input Calibration\n\r");
    2202:	30 12 e4 21 	push	#8676		;#0x21e4
    2206:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    220a:	21 53       	incd	r1		;
}
    220c:	30 41       	ret			
    220e:	0a 0d       	.word	0x0d0a;	????
    2210:	56 6f 6c 74 	addc.b	29804(r15),r6	;
    2214:	61 67       	addc.b	@r7,	r1	;
    2216:	65 20       	jnz	$+204    	;abs 0x22e2
    2218:	49 6e       	addc.b	r14,	r9	;
    221a:	70 75       	subc.b	@r5+,	r0	;
    221c:	74 20       	jnz	$+234    	;abs 0x2306
    221e:	20 43       	br	#2		;r3 As==10
    2220:	61 6c       	addc.b	@r12,	r1	;
    2222:	69 62       	addc.b	#4,	r9	;r2 As==10
    2224:	72 61       	addc.b	@r1+,	r2	;
    2226:	74 69       	addc.b	@r9+,	r4	;
    2228:	6f 6e       	addc.b	@r14,	r15	;
    222a:	0a 0d       	.word	0x0d0a;	????
	...

0000222e <voltage_input_calibration>:

void voltage_input_calibration (ueac_t *system) {
  printf("\n\rVoltage Input  Calibration\n\r");
    222e:	30 12 0e 22 	push	#8718		;#0x220e
    2232:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    2236:	21 53       	incd	r1		;
}
    2238:	30 41       	ret			

0000223a <Letext>:
    223a:	45 78       	subc.b	r8,	r5	;
    223c:	74 65       	addc.b	@r5+,	r4	;
    223e:	72 6e       	addc.b	@r14+,	r2	;
    2240:	61 6c       	addc.b	@r12,	r1	;
    2242:	20 46       	br	@r6		;
    2244:	6c 61       	addc.b	@r1,	r12	;
    2246:	73 68       	.word	0x6873;	????
    2248:	20 53       	incd	r0		;
    224a:	52 41 4d 20 	mov.b	8269(r1),r2	;
    224e:	42 75       	subc.b	r5,	r2	;
    2250:	66 66       	addc.b	@r6,	r6	;
    2252:	65 72       	subc.b	#4,	r5	;r2 As==10
    2254:	20 31       	jn	$+578    	;abs 0x2496
    2256:	20 46       	br	@r6		;
    2258:	69 6c       	addc.b	@r12,	r9	;
    225a:	6c 20       	jnz	$+218    	;abs 0x2334
    225c:	00 1b       	.word	0x1b00;	????
    225e:	5b 33       	jn	$-328    	;abs 0x2116
    2260:	32 6d       	addc	@r13+,	r2	;
    2262:	00 5b       	add	r11,	r0	;
    2264:	50 41 53 53 	br	21331(r1)		;
    2268:	45 44       	mov.b	r4,	r5	;
    226a:	5d 0a       	.word	0x0a5d;	????
    226c:	0d 00       	.word	0x000d;	????
    226e:	1b 5b 33 30 	add	12339(r11),r11	;
    2272:	6d 00       	.word	0x006d;	????
    2274:	45 78       	subc.b	r8,	r5	;
    2276:	74 65       	addc.b	@r5+,	r4	;
    2278:	72 6e       	addc.b	@r14+,	r2	;
    227a:	61 6c       	addc.b	@r12,	r1	;
    227c:	20 46       	br	@r6		;
    227e:	6c 61       	addc.b	@r1,	r12	;
    2280:	73 68       	.word	0x6873;	????
    2282:	20 53       	incd	r0		;
    2284:	52 41 4d 20 	mov.b	8269(r1),r2	;
    2288:	42 75       	subc.b	r5,	r2	;
    228a:	66 66       	addc.b	@r6,	r6	;
    228c:	65 72       	subc.b	#4,	r5	;r2 As==10
    228e:	20 32       	jn	$-958    	;abs 0x1ed0
    2290:	20 46       	br	@r6		;
    2292:	69 6c       	addc.b	@r12,	r9	;
    2294:	6c 20       	jnz	$+218    	;abs 0x236e
    2296:	00 1b       	.word	0x1b00;	????
    2298:	5b 33       	jn	$-328    	;abs 0x2150
    229a:	31 6d       	addc	@r13+,	r1	;
    229c:	00 5b       	add	r11,	r0	;
    229e:	46 41       	mov.b	r1,	r6	;
    22a0:	49 4c       	mov.b	r12,	r9	;
    22a2:	45 44       	mov.b	r4,	r5	;
    22a4:	5d 0a       	.word	0x0a5d;	????
    22a6:	0d 00       	.word	0x000d;	????

000022a8 <flash_integrity_test>:
    22a8:	0b 12       	push	r11		;
    22aa:	0a 12       	push	r10		;
    22ac:	09 12       	push	r9		;
    22ae:	08 12       	push	r8		;
    22b0:	49 43       	clr.b	r9		;
    22b2:	08 43       	clr	r8		;
    22b4:	0a 43       	clr	r10		;
    22b6:	4f 49       	mov.b	r9,	r15	;
    22b8:	59 53       	inc.b	r9		;
    22ba:	4e 4f       	mov.b	r15,	r14	;
    22bc:	0f 4a       	mov	r10,	r15	;
    22be:	b0 12 d0 24 	call	#9424		;#0x24d0
    22c2:	1a 53       	inc	r10		;
    22c4:	3a 90 08 01 	cmp	#264,	r10	;#0x0108
    22c8:	f6 3b       	jl	$-18     	;abs 0x22b6
    22ca:	49 43       	clr.b	r9		;
    22cc:	0a 43       	clr	r10		;
    22ce:	4b 49       	mov.b	r9,	r11	;
    22d0:	59 53       	inc.b	r9		;
    22d2:	0f 4a       	mov	r10,	r15	;
    22d4:	b0 12 50 25 	call	#9552		;#0x2550
    22d8:	4b 9f       	cmp.b	r15,	r11	;
    22da:	01 24       	jz	$+4      	;abs 0x22de
    22dc:	18 43       	mov	#1,	r8	;r3 As==01
    22de:	1a 53       	inc	r10		;
    22e0:	3a 90 08 01 	cmp	#264,	r10	;#0x0108
    22e4:	f4 3b       	jl	$-22     	;abs 0x22ce
    22e6:	30 12 3a 22 	push	#8762		;#0x223a
    22ea:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    22ee:	21 53       	incd	r1		;
    22f0:	18 93       	cmp	#1,	r8	;r3 As==01
    22f2:	3e 24       	jz	$+126    	;abs 0x2370
    22f4:	30 12 5d 22 	push	#8797		;#0x225d
    22f8:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    22fc:	30 12 63 22 	push	#8803		;#0x2263
    2300:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    2304:	21 52       	add	#4,	r1	;r2 As==10
    2306:	30 12 6e 22 	push	#8814		;#0x226e
    230a:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    230e:	08 43       	clr	r8		;
    2310:	49 43       	clr.b	r9		;
    2312:	0a 43       	clr	r10		;
    2314:	21 53       	incd	r1		;
    2316:	4f 49       	mov.b	r9,	r15	;
    2318:	59 53       	inc.b	r9		;
    231a:	4e 4f       	mov.b	r15,	r14	;
    231c:	0f 4a       	mov	r10,	r15	;
    231e:	b0 12 10 25 	call	#9488		;#0x2510
    2322:	1a 53       	inc	r10		;
    2324:	3a 90 08 01 	cmp	#264,	r10	;#0x0108
    2328:	f6 3b       	jl	$-18     	;abs 0x2316
    232a:	49 43       	clr.b	r9		;
    232c:	0a 43       	clr	r10		;
    232e:	4b 49       	mov.b	r9,	r11	;
    2330:	59 53       	inc.b	r9		;
    2332:	0f 4a       	mov	r10,	r15	;
    2334:	b0 12 92 25 	call	#9618		;#0x2592
    2338:	4b 9f       	cmp.b	r15,	r11	;
    233a:	01 24       	jz	$+4      	;abs 0x233e
    233c:	18 43       	mov	#1,	r8	;r3 As==01
    233e:	1a 53       	inc	r10		;
    2340:	3a 90 08 01 	cmp	#264,	r10	;#0x0108
    2344:	f4 3b       	jl	$-22     	;abs 0x232e
    2346:	30 12 74 22 	push	#8820		;#0x2274
    234a:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    234e:	21 53       	incd	r1		;
    2350:	18 93       	cmp	#1,	r8	;r3 As==01
    2352:	07 24       	jz	$+16     	;abs 0x2362
    2354:	30 12 5d 22 	push	#8797		;#0x225d
    2358:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    235c:	30 12 63 22 	push	#8803		;#0x2263
    2360:	0e 3c       	jmp	$+30     	;abs 0x237e
    2362:	30 12 97 22 	push	#8855		;#0x2297
    2366:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    236a:	30 12 9d 22 	push	#8861		;#0x229d
    236e:	07 3c       	jmp	$+16     	;abs 0x237e
    2370:	30 12 97 22 	push	#8855		;#0x2297
    2374:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    2378:	30 12 9d 22 	push	#8861		;#0x229d
    237c:	c1 3f       	jmp	$-124    	;abs 0x2300
    237e:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    2382:	21 52       	add	#4,	r1	;r2 As==10
    2384:	30 12 6e 22 	push	#8814		;#0x226e
    2388:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    238c:	21 53       	incd	r1		;
    238e:	0f 43       	clr	r15		;
    2390:	38 41       	pop	r8		;
    2392:	39 41       	pop	r9		;
    2394:	3a 41       	pop	r10		;
    2396:	3b 41       	pop	r11		;
    2398:	30 41       	ret			

0000239a <start_main_array_read>:
    239a:	0b 12       	push	r11		;
    239c:	0a 12       	push	r10		;
    239e:	0b 4f       	mov	r15,	r11	;
    23a0:	0a 4e       	mov	r14,	r10	;
    23a2:	f2 c2 1d 00 	bic.b	#8,	&0x001d	;r2 As==11
    23a6:	7f 40 e8 ff 	mov.b	#-24,	r15	;#0xffe8
    23aa:	b0 12 c8 14 	call	#5320		;#0x14c8
    23ae:	0f 4b       	mov	r11,	r15	;
    23b0:	12 c3       	clrc			
    23b2:	0f 10       	rrc	r15		;
    23b4:	0f 11       	rra	r15		;
    23b6:	0f 11       	rra	r15		;
    23b8:	0f 11       	rra	r15		;
    23ba:	0f 11       	rra	r15		;
    23bc:	0f 11       	rra	r15		;
    23be:	0f 11       	rra	r15		;
    23c0:	b0 12 c8 14 	call	#5320		;#0x14c8
    23c4:	4f 4b       	mov.b	r11,	r15	;
    23c6:	4f 5f       	rla.b	r15		;
    23c8:	3a 90 00 01 	cmp	#256,	r10	;#0x0100
    23cc:	01 28       	jnc	$+4      	;abs 0x23d0
    23ce:	5f d3       	bis.b	#1,	r15	;r3 As==01
    23d0:	b0 12 c8 14 	call	#5320		;#0x14c8
    23d4:	4f 4a       	mov.b	r10,	r15	;
    23d6:	b0 12 c8 14 	call	#5320		;#0x14c8
    23da:	4f 43       	clr.b	r15		;
    23dc:	b0 12 c8 14 	call	#5320		;#0x14c8
    23e0:	4f 43       	clr.b	r15		;
    23e2:	b0 12 c8 14 	call	#5320		;#0x14c8
    23e6:	4f 43       	clr.b	r15		;
    23e8:	b0 12 c8 14 	call	#5320		;#0x14c8
    23ec:	4f 43       	clr.b	r15		;
    23ee:	b0 12 c8 14 	call	#5320		;#0x14c8
    23f2:	3a 41       	pop	r10		;
    23f4:	3b 41       	pop	r11		;
    23f6:	30 41       	ret			

000023f8 <end_main_array_read>:
    23f8:	f2 d2 1d 00 	bis.b	#8,	&0x001d	;r2 As==11
    23fc:	30 41       	ret			

000023fe <page_to_buffer1_compare>:
    23fe:	0b 12       	push	r11		;
    2400:	0b 4f       	mov	r15,	r11	;
    2402:	f2 c2 1d 00 	bic.b	#8,	&0x001d	;r2 As==11
    2406:	7f 40 60 00 	mov.b	#96,	r15	;#0x0060
    240a:	b0 12 c8 14 	call	#5320		;#0x14c8
    240e:	0f 4b       	mov	r11,	r15	;
    2410:	12 c3       	clrc			
    2412:	0f 10       	rrc	r15		;
    2414:	0f 11       	rra	r15		;
    2416:	0f 11       	rra	r15		;
    2418:	0f 11       	rra	r15		;
    241a:	0f 11       	rra	r15		;
    241c:	0f 11       	rra	r15		;
    241e:	0f 11       	rra	r15		;
    2420:	b0 12 c8 14 	call	#5320		;#0x14c8
    2424:	4f 4b       	mov.b	r11,	r15	;
    2426:	4f 5f       	rla.b	r15		;
    2428:	b0 12 c8 14 	call	#5320		;#0x14c8
    242c:	4f 43       	clr.b	r15		;
    242e:	b0 12 c8 14 	call	#5320		;#0x14c8
    2432:	f2 d2 1d 00 	bis.b	#8,	&0x001d	;r2 As==11
    2436:	3b 41       	pop	r11		;
    2438:	30 41       	ret			

0000243a <buffer1_to_page_e>:
    243a:	0b 12       	push	r11		;
    243c:	0b 4f       	mov	r15,	r11	;
    243e:	f2 c2 1d 00 	bic.b	#8,	&0x001d	;r2 As==11
    2442:	7f 40 83 ff 	mov.b	#-125,	r15	;#0xff83
    2446:	b0 12 c8 14 	call	#5320		;#0x14c8
    244a:	0f 4b       	mov	r11,	r15	;
    244c:	12 c3       	clrc			
    244e:	0f 10       	rrc	r15		;
    2450:	0f 11       	rra	r15		;
    2452:	0f 11       	rra	r15		;
    2454:	0f 11       	rra	r15		;
    2456:	0f 11       	rra	r15		;
    2458:	0f 11       	rra	r15		;
    245a:	0f 11       	rra	r15		;
    245c:	b0 12 c8 14 	call	#5320		;#0x14c8
    2460:	4f 4b       	mov.b	r11,	r15	;
    2462:	4f 5f       	rla.b	r15		;
    2464:	b0 12 c8 14 	call	#5320		;#0x14c8
    2468:	4f 43       	clr.b	r15		;
    246a:	b0 12 c8 14 	call	#5320		;#0x14c8
    246e:	f2 d2 1d 00 	bis.b	#8,	&0x001d	;r2 As==11
    2472:	3b 41       	pop	r11		;
    2474:	30 41       	ret			

00002476 <buffer2_to_page_e>:
    2476:	0b 12       	push	r11		;
    2478:	0b 4f       	mov	r15,	r11	;
    247a:	f2 c2 1d 00 	bic.b	#8,	&0x001d	;r2 As==11
    247e:	7f 40 86 ff 	mov.b	#-122,	r15	;#0xff86
    2482:	b0 12 c8 14 	call	#5320		;#0x14c8
    2486:	0f 4b       	mov	r11,	r15	;
    2488:	12 c3       	clrc			
    248a:	0f 10       	rrc	r15		;
    248c:	0f 11       	rra	r15		;
    248e:	0f 11       	rra	r15		;
    2490:	0f 11       	rra	r15		;
    2492:	0f 11       	rra	r15		;
    2494:	0f 11       	rra	r15		;
    2496:	0f 11       	rra	r15		;
    2498:	b0 12 c8 14 	call	#5320		;#0x14c8
    249c:	4f 4b       	mov.b	r11,	r15	;
    249e:	4f 5f       	rla.b	r15		;
    24a0:	b0 12 c8 14 	call	#5320		;#0x14c8
    24a4:	4f 43       	clr.b	r15		;
    24a6:	b0 12 c8 14 	call	#5320		;#0x14c8
    24aa:	f2 d2 1d 00 	bis.b	#8,	&0x001d	;r2 As==11
    24ae:	3b 41       	pop	r11		;
    24b0:	30 41       	ret			

000024b2 <poll_status_register_blocking>:
    24b2:	f2 c2 1d 00 	bic.b	#8,	&0x001d	;r2 As==11
    24b6:	7f 40 d7 ff 	mov.b	#-41,	r15	;#0xffd7
    24ba:	b0 12 c8 14 	call	#5320		;#0x14c8
    24be:	4f 43       	clr.b	r15		;
    24c0:	b0 12 c8 14 	call	#5320		;#0x14c8
    24c4:	4f 93       	cmp.b	#0,	r15	;r3 As==00
    24c6:	fb 37       	jge	$-8      	;abs 0x24be
    24c8:	f2 d2 1d 00 	bis.b	#8,	&0x001d	;r2 As==11
    24cc:	7f f3       	and.b	#-1,	r15	;r3 As==11
    24ce:	30 41       	ret			

000024d0 <buffer1_write>:
    24d0:	0b 12       	push	r11		;
    24d2:	0a 12       	push	r10		;
    24d4:	0b 4f       	mov	r15,	r11	;
    24d6:	4a 4e       	mov.b	r14,	r10	;
    24d8:	f2 c2 1d 00 	bic.b	#8,	&0x001d	;r2 As==11
    24dc:	7f 40 84 ff 	mov.b	#-124,	r15	;#0xff84
    24e0:	b0 12 c8 14 	call	#5320		;#0x14c8
    24e4:	4f 43       	clr.b	r15		;
    24e6:	b0 12 c8 14 	call	#5320		;#0x14c8
    24ea:	3b 90 00 01 	cmp	#256,	r11	;#0x0100
    24ee:	02 28       	jnc	$+6      	;abs 0x24f4
    24f0:	5f 43       	mov.b	#1,	r15	;r3 As==01
    24f2:	01 3c       	jmp	$+4      	;abs 0x24f6
    24f4:	4f 43       	clr.b	r15		;
    24f6:	b0 12 c8 14 	call	#5320		;#0x14c8
    24fa:	4f 4b       	mov.b	r11,	r15	;
    24fc:	b0 12 c8 14 	call	#5320		;#0x14c8
    2500:	4f 4a       	mov.b	r10,	r15	;
    2502:	b0 12 c8 14 	call	#5320		;#0x14c8
    2506:	f2 d2 1d 00 	bis.b	#8,	&0x001d	;r2 As==11
    250a:	3a 41       	pop	r10		;
    250c:	3b 41       	pop	r11		;
    250e:	30 41       	ret			

00002510 <buffer2_write>:
    2510:	0b 12       	push	r11		;
    2512:	0a 12       	push	r10		;
    2514:	0b 4f       	mov	r15,	r11	;
    2516:	4a 4e       	mov.b	r14,	r10	;
    2518:	f2 c2 1d 00 	bic.b	#8,	&0x001d	;r2 As==11
    251c:	7f 40 87 ff 	mov.b	#-121,	r15	;#0xff87
    2520:	b0 12 c8 14 	call	#5320		;#0x14c8
    2524:	4f 43       	clr.b	r15		;
    2526:	b0 12 c8 14 	call	#5320		;#0x14c8
    252a:	3b 90 00 01 	cmp	#256,	r11	;#0x0100
    252e:	02 28       	jnc	$+6      	;abs 0x2534
    2530:	5f 43       	mov.b	#1,	r15	;r3 As==01
    2532:	01 3c       	jmp	$+4      	;abs 0x2536
    2534:	4f 43       	clr.b	r15		;
    2536:	b0 12 c8 14 	call	#5320		;#0x14c8
    253a:	4f 4b       	mov.b	r11,	r15	;
    253c:	b0 12 c8 14 	call	#5320		;#0x14c8
    2540:	4f 4a       	mov.b	r10,	r15	;
    2542:	b0 12 c8 14 	call	#5320		;#0x14c8
    2546:	f2 d2 1d 00 	bis.b	#8,	&0x001d	;r2 As==11
    254a:	3a 41       	pop	r10		;
    254c:	3b 41       	pop	r11		;
    254e:	30 41       	ret			

00002550 <buffer1_read>:
    2550:	0b 12       	push	r11		;
    2552:	0b 4f       	mov	r15,	r11	;
    2554:	f2 c2 1d 00 	bic.b	#8,	&0x001d	;r2 As==11
    2558:	7f 40 d4 ff 	mov.b	#-44,	r15	;#0xffd4
    255c:	b0 12 c8 14 	call	#5320		;#0x14c8
    2560:	4f 43       	clr.b	r15		;
    2562:	b0 12 c8 14 	call	#5320		;#0x14c8
    2566:	3b 90 00 01 	cmp	#256,	r11	;#0x0100
    256a:	02 28       	jnc	$+6      	;abs 0x2570
    256c:	5f 43       	mov.b	#1,	r15	;r3 As==01
    256e:	01 3c       	jmp	$+4      	;abs 0x2572
    2570:	4f 43       	clr.b	r15		;
    2572:	b0 12 c8 14 	call	#5320		;#0x14c8
    2576:	4f 4b       	mov.b	r11,	r15	;
    2578:	b0 12 c8 14 	call	#5320		;#0x14c8
    257c:	4f 43       	clr.b	r15		;
    257e:	b0 12 c8 14 	call	#5320		;#0x14c8
    2582:	4f 43       	clr.b	r15		;
    2584:	b0 12 c8 14 	call	#5320		;#0x14c8
    2588:	f2 d2 1d 00 	bis.b	#8,	&0x001d	;r2 As==11
    258c:	7f f3       	and.b	#-1,	r15	;r3 As==11
    258e:	3b 41       	pop	r11		;
    2590:	30 41       	ret			

00002592 <buffer2_read>:
    2592:	0b 12       	push	r11		;
    2594:	0b 4f       	mov	r15,	r11	;
    2596:	f2 c2 1d 00 	bic.b	#8,	&0x001d	;r2 As==11
    259a:	7f 40 d6 ff 	mov.b	#-42,	r15	;#0xffd6
    259e:	b0 12 c8 14 	call	#5320		;#0x14c8
    25a2:	4f 43       	clr.b	r15		;
    25a4:	b0 12 c8 14 	call	#5320		;#0x14c8
    25a8:	3b 90 00 01 	cmp	#256,	r11	;#0x0100
    25ac:	02 28       	jnc	$+6      	;abs 0x25b2
    25ae:	5f 43       	mov.b	#1,	r15	;r3 As==01
    25b0:	01 3c       	jmp	$+4      	;abs 0x25b4
    25b2:	4f 43       	clr.b	r15		;
    25b4:	b0 12 c8 14 	call	#5320		;#0x14c8
    25b8:	4f 4b       	mov.b	r11,	r15	;
    25ba:	b0 12 c8 14 	call	#5320		;#0x14c8
    25be:	4f 43       	clr.b	r15		;
    25c0:	b0 12 c8 14 	call	#5320		;#0x14c8
    25c4:	4f 43       	clr.b	r15		;
    25c6:	b0 12 c8 14 	call	#5320		;#0x14c8
    25ca:	f2 d2 1d 00 	bis.b	#8,	&0x001d	;r2 As==11
    25ce:	7f f3       	and.b	#-1,	r15	;r3 As==11
    25d0:	3b 41       	pop	r11		;
    25d2:	30 41       	ret			

000025d4 <dac_translation>:
    25d4:	70 01 71 01 72 01 72 01 73 01 74 01 74 01 75 01     p.q.r.r.s.t.t.u.
    25e4:	75 01 76 01 77 01 77 01 78 01 78 01 79 01 7a 01     u.v.w.w.x.x.y.z.
    25f4:	7a 01 7b 01 7c 01 7c 01 7d 01 7d 01 7e 01 7f 01     z.{.|.|.}.}.~...
    2604:	7f 01 80 01 80 01 81 01 82 01 82 01 83 01 84 01     ................
    2614:	84 01 85 01 85 01 86 01 87 01 87 01 88 01 88 01     ................
    2624:	89 01 8a 01 8a 01 8b 01 8c 01 8c 01 8d 01 8d 01     ................
    2634:	8e 01 8f 01 8f 01 90 01 90 01 91 01 92 01 92 01     ................
    2644:	93 01 94 01 94 01 95 01 95 01 96 01 97 01 97 01     ................
    2654:	98 01 99 01 99 01 9a 01 9a 01 9b 01 9c 01 9c 01     ................
    2664:	9d 01 9d 01 9e 01 9f 01 9f 01 a0 01 a1 01 a1 01     ................
    2674:	a2 01 a2 01 a3 01 a4 01 a4 01 a5 01 a5 01 a6 01     ................
    2684:	a7 01 a7 01 a8 01 a9 01 a9 01 aa 01 aa 01 ab 01     ................
    2694:	ac 01 ac 01 ad 01 ad 01 ae 01 af 01 af 01 b0 01     ................
    26a4:	b1 01 b1 01 b2 01 b2 01 b3 01 b4 01 b4 01 b5 01     ................
    26b4:	b5 01 b6 01 b7 01 b7 01 b8 01 b9 01 b9 01 ba 01     ................
    26c4:	ba 01 bb 01 bc 01 bc 01 bd 01 bd 01 be 01 bf 01     ................
    26d4:	bf 01 c0 01 c1 01 c1 01 c2 01 c2 01 c3 01 c4 01     ................
    26e4:	c4 01 c5 01 c6 01 c6 01 c7 01 c7 01 c8 01 c9 01     ................
    26f4:	c9 01 ca 01 ca 01 cb 01 cc 01 cc 01 cd 01 ce 01     ................
    2704:	ce 01 cf 01 cf 01 d0 01 d1 01 d1 01 d2 01 d2 01     ................
    2714:	d3 01 d4 01 d4 01 d5 01 d6 01 d6 01 d7 01 d7 01     ................
    2724:	d8 01 d9 01 d9 01 da 01 da 01 db 01 dc 01 dc 01     ................
    2734:	dd 01 de 01 de 01 df 01 df 01 e0 01 e1 01 e1 01     ................
    2744:	e2 01 e2 01 e3 01 e4 01 e4 01 e5 01 e6 01 e6 01     ................
    2754:	e7 01 e7 01 e8 01 e9 01 e9 01 ea 01 ea 01 eb 01     ................
    2764:	ec 01 ec 01 ed 01 ee 01 ee 01 ef 01 ef 01 f0 01     ................
    2774:	f1 01 f1 01 f2 01 f3 01 f3 01 f4 01 f4 01 f5 01     ................
    2784:	f6 01 f6 01 f7 01 f7 01 f8 01 f9 01 f9 01 fa 01     ................
    2794:	fb 01 fb 01 fc 01 fc 01 fd 01 fe 01 fe 01 ff 01     ................
    27a4:	ff 01 00 02 01 02 01 02 02 02 03 02 03 02 04 02     ................
    27b4:	04 02 05 02 06 02 06 02 07 02 07 02 08 02 09 02     ................
    27c4:	09 02 0a 02 0b 02 0b 02 0c 02 0c 02 0d 02 0e 02     ................
    27d4:	0e 02 0f 02 0f 02 10 02 11 02 11 02 12 02 13 02     ................
    27e4:	13 02 14 02 14 02 15 02 16 02 16 02 17 02 18 02     ................
    27f4:	18 02 19 02 19 02 1a 02 1b 02 1b 02 1c 02 1c 02     ................
    2804:	1d 02 1e 02 1e 02 1f 02 20 02 20 02 21 02 21 02     ........ . .!.!.
    2814:	22 02 23 02 23 02 24 02 24 02 25 02 26 02 26 02     ".#.#.$.$.%.&.&.
    2824:	27 02 28 02 28 02 29 02 29 02 2a 02 2b 02 2b 02     '.(.(.).).*.+.+.
    2834:	2c 02 2c 02 2d 02 2e 02 2e 02 2f 02 30 02 30 02     ,.,.-...../.0.0.
    2844:	31 02 31 02 32 02 33 02 33 02 34 02 34 02 35 02     1.1.2.3.3.4.4.5.
    2854:	36 02 36 02 37 02 38 02 38 02 39 02 39 02 3a 02     6.6.7.8.8.9.9.:.
    2864:	3b 02 3b 02 3c 02 3c 02 3d 02 3e 02 3e 02 3f 02     ;.;.<.<.=.>.>.?.
    2874:	40 02 40 02 41 02 41 02 42 02 43 02 43 02 44 02     @.@.A.A.B.C.C.D.
    2884:	45 02 45 02 46 02 46 02 47 02 48 02 48 02 49 02     E.E.F.F.G.H.H.I.
    2894:	49 02 4a 02 4b 02 4b 02 4c 02 4d 02 4d 02 4e 02     I.J.K.K.L.M.M.N.
    28a4:	4e 02 4f 02 50 02 50 02 51 02 51 02 52 02 53 02     N.O.P.P.Q.Q.R.S.
    28b4:	53 02 54 02 55 02 55 02 56 02 56 02 57 02 58 02     S.T.U.U.V.V.W.X.
    28c4:	58 02 59 02 59 02 5a 02 5b 02 5b 02 5c 02 5d 02     X.Y.Y.Z.[.[.\.].
    28d4:	5d 02 5e 02 5e 02 5f 02 60 02 60 02 61 02 61 02     ].^.^._.`.`.a.a.
    28e4:	62 02 63 02 63 02 64 02 65 02 65 02 66 02 66 02     b.c.c.d.e.e.f.f.
    28f4:	67 02 4e 4f 4b 0a 0d 00 30 2e 25 30 33 64 2c 00     g.NOK...0.%03d,.
    2904:	4f 4b 0a 0d 00 25 64 2e 25 30 32 64 2c 00 2d 25     OK...%d.%02d,.-%
    2914:	64 2c 00 25 64 2c 00 2d 25 64 2c 25 64 2c 00 2a     d,.%d,.-%d,%d,.*
    2924:	2c 2a 2c 00                                         ,*,.

00002928 <ueac_execute_instruction>:
    2928:	0b 12       	push	r11		;
    292a:	0a 12       	push	r10		;
    292c:	09 12       	push	r9		;
    292e:	0b 4f       	mov	r15,	r11	;
    2930:	09 43       	clr	r9		;
    2932:	df 93 00 00 	cmp.b	#1,	0(r15)	;r3 As==01
    2936:	06 24       	jz	$+14     	;abs 0x2944
        printf("*,*,");
      }
#ifndef LINUX
#else 
      printf("UEAC_LLA_REPORT ");
#endif
      break;
   case UEAC_CAL:
#ifndef LINUX
      current_output_calibration(&ueac_state);
#else 
      printf("UEAC_CAL ");
#endif
      break;

   case UEAC_DEBUG:
#ifndef LINUX
      channel_debug(&ueac_state);
#else 
      printf("UEAC_DEBUG ");
#endif
      break;

    case UEAC_RST:
#ifndef LINUX
      printf("OK\n\r");
      system_reset();
#else 
      printf("UEAC_RST ");
#endif
      break;
    case UEAC_LON:
#ifndef LINUX
      led_screen_enable=1;
#else 
      printf("UEAC_LON ");
#endif
      break;
    case UEAC_LOF:
#ifndef LINUX
      led_screen_enable=0;
      clear_led_screen();
#else 
      printf("UEAC_LOF ");
#endif
      break;
    }
#ifndef LINUX
    printf("OK\n\r");
#else 
    printf("OK\n");
#endif
  }
  else {
#ifndef LINUX
    printf("NOK\n\r");
    2938:	30 12 f6 28 	push	#10486		;#0x28f6
    293c:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
#else 
    printf("NOK\n");
#endif 
    return_val=1;
    2940:	19 43       	mov	#1,	r9	;r3 As==01
    2942:	58 3d       	jmp	$+690    	;abs 0x2bf4
    2944:	5f 4f 01 00 	mov.b	1(r15),	r15	;
    2948:	3f 90 0e 00 	cmp	#14,	r15	;#0x000e
    294c:	36 2c       	jc	$+110    	;abs 0x29ba
    294e:	0f 5f       	rla	r15		;
    2950:	10 4f 54 29 	br	10580(r15)		;
    2954:	70 29       	jnc	$+738    	;abs 0x2c36
    2956:	00 2a       	.word	0x2a00;	????
    2958:	5c 2a       	jnc	$-838    	;abs 0x2612
    295a:	f2 2a       	jnc	$-538    	;abs 0x2740
    295c:	54 2b       	jnc	$-342    	;abs 0x2806
    295e:	82 2b       	jnc	$-250    	;abs 0x2864
    2960:	8a 2b       	jnc	$-234    	;abs 0x2876
    2962:	92 2b       	jnc	$-218    	;abs 0x2888
    2964:	9a 2b       	jnc	$-202    	;abs 0x289a
    2966:	c2 2b       	jnc	$-122    	;abs 0x28ec
    2968:	d0 2b       	jnc	$-94     	;abs 0x290a
    296a:	da 2b       	jnc	$-74     	;abs 0x2920
    296c:	e0 2b       	jnc	$-62     	;abs 0x292e
    296e:	ea 2b       	jnc	$-42     	;abs 0x2944
    2970:	0a 43       	clr	r10		;
    2972:	0e 4b       	mov	r11,	r14	;
    2974:	4f 4a       	mov.b	r10,	r15	;
    2976:	b0 12 04 2c 	call	#11268		;#0x2c04
    297a:	0f 93       	cmp	#0,	r15	;r3 As==00
    297c:	23 24       	jz	$+72     	;abs 0x29c4
    297e:	0f 4a       	mov	r10,	r15	;
    2980:	0f 5f       	rla	r15		;
    2982:	0f 5f       	rla	r15		;
    2984:	0f 5f       	rla	r15		;
    2986:	0f 5f       	rla	r15		;
    2988:	0f 5f       	rla	r15		;
    298a:	0e 4a       	mov	r10,	r14	;
    298c:	0e 5e       	rla	r14		;
    298e:	0f 5e       	add	r14,	r15	;
    2990:	0f 5e       	add	r14,	r15	;
    2992:	0f 5e       	add	r14,	r15	;
    2994:	0c 4a       	mov	r10,	r12	;
    2996:	3d 40 ce 07 	mov	#1998,	r13	;#0x07ce
    299a:	1e 4f 90 02 	mov	656(r15),r14	;
    299e:	5f 43       	mov.b	#1,	r15	;r3 As==01
    29a0:	b0 12 38 55 	call	#21816		;#0x5538
    29a4:	12 12 ce 07 	push	&0x07ce		;
    29a8:	30 12 fc 28 	push	#10492		;#0x28fc
    29ac:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    29b0:	21 52       	add	#4,	r1	;r2 As==10
    29b2:	1a 53       	inc	r10		;
    29b4:	3a 90 19 00 	cmp	#25,	r10	;#0x0019
    29b8:	dc 3b       	jl	$-70     	;abs 0x2972
    29ba:	30 12 04 29 	push	#10500		;#0x2904
    29be:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    29c2:	18 3d       	jmp	$+562    	;abs 0x2bf4
    29c4:	0f 4a       	mov	r10,	r15	;
    29c6:	0f 5f       	rla	r15		;
    29c8:	0f 5f       	rla	r15		;
    29ca:	0f 5f       	rla	r15		;
    29cc:	0f 5f       	rla	r15		;
    29ce:	0f 5f       	rla	r15		;
    29d0:	0e 4a       	mov	r10,	r14	;
    29d2:	0e 5e       	rla	r14		;
    29d4:	0f 5e       	add	r14,	r15	;
    29d6:	0f 5e       	add	r14,	r15	;
    29d8:	0f 5e       	add	r14,	r15	;
    29da:	0c 4a       	mov	r10,	r12	;
    29dc:	3d 40 ce 07 	mov	#1998,	r13	;#0x07ce
    29e0:	1e 4f 90 02 	mov	656(r15),r14	;
    29e4:	4f 43       	clr.b	r15		;
    29e6:	b0 12 38 55 	call	#21816		;#0x5538
    29ea:	12 12 d0 07 	push	&0x07d0		;
    29ee:	12 12 ce 07 	push	&0x07ce		;
    29f2:	30 12 09 29 	push	#10505		;#0x2909
    29f6:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    29fa:	31 50 06 00 	add	#6,	r1	;#0x0006
    29fe:	d9 3f       	jmp	$-76     	;abs 0x29b2
    2a00:	0a 43       	clr	r10		;
    2a02:	0e 4b       	mov	r11,	r14	;
    2a04:	4f 4a       	mov.b	r10,	r15	;
    2a06:	b0 12 04 2c 	call	#11268		;#0x2c04
    2a0a:	0f 93       	cmp	#0,	r15	;r3 As==00
    2a0c:	1f 24       	jz	$+64     	;abs 0x2a4c
    2a0e:	0f 4a       	mov	r10,	r15	;
    2a10:	0f 5f       	rla	r15		;
    2a12:	0f 5f       	rla	r15		;
    2a14:	0f 5f       	rla	r15		;
    2a16:	0f 5f       	rla	r15		;
    2a18:	0f 5f       	rla	r15		;
    2a1a:	0e 4a       	mov	r10,	r14	;
    2a1c:	0e 5e       	rla	r14		;
    2a1e:	0f 5e       	add	r14,	r15	;
    2a20:	0f 5e       	add	r14,	r15	;
    2a22:	0f 5e       	add	r14,	r15	;
    2a24:	0c 4a       	mov	r10,	r12	;
    2a26:	3d 40 ce 07 	mov	#1998,	r13	;#0x07ce
    2a2a:	1e 4f 90 02 	mov	656(r15),r14	;
    2a2e:	5f 43       	mov.b	#1,	r15	;r3 As==01
    2a30:	b0 12 38 55 	call	#21816		;#0x5538
    2a34:	12 12 ce 07 	push	&0x07ce		;
    2a38:	30 12 12 29 	push	#10514		;#0x2912
    2a3c:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    2a40:	21 52       	add	#4,	r1	;r2 As==10
    2a42:	1a 53       	inc	r10		;
    2a44:	3a 90 19 00 	cmp	#25,	r10	;#0x0019
    2a48:	dc 3b       	jl	$-70     	;abs 0x2a02
    2a4a:	b7 3f       	jmp	$-144    	;abs 0x29ba
    2a4c:	0f 4a       	mov	r10,	r15	;
    2a4e:	0f 5f       	rla	r15		;
    2a50:	0f 5b       	add	r11,	r15	;
    2a52:	1f 12 10 00 	push	16(r15)		;
    2a56:	30 12 17 29 	push	#10519		;#0x2917
    2a5a:	f0 3f       	jmp	$-30     	;abs 0x2a3c
    2a5c:	5f 4b 04 00 	mov.b	4(r11),	r15	;
    2a60:	4a 4f       	mov.b	r15,	r10	;
    2a62:	0a 5a       	rla	r10		;
    2a64:	0a 5f       	add	r15,	r10	;
    2a66:	0a 5f       	add	r15,	r10	;
    2a68:	0a 5f       	add	r15,	r10	;
    2a6a:	5f 4b 03 00 	mov.b	3(r11),	r15	;
    2a6e:	0a 5f       	add	r15,	r10	;
    2a70:	3a 50 fa ff 	add	#-6,	r10	;#0xfffa
    2a74:	0e 4b       	mov	r11,	r14	;
    2a76:	4f 4a       	mov.b	r10,	r15	;
    2a78:	b0 12 04 2c 	call	#11268		;#0x2c04
    2a7c:	0f 93       	cmp	#0,	r15	;r3 As==00
    2a7e:	1b 24       	jz	$+56     	;abs 0x2ab6
    2a80:	0f 4a       	mov	r10,	r15	;
    2a82:	0f 5f       	rla	r15		;
    2a84:	0f 5f       	rla	r15		;
    2a86:	0f 5f       	rla	r15		;
    2a88:	0f 5f       	rla	r15		;
    2a8a:	0f 5f       	rla	r15		;
    2a8c:	0e 4a       	mov	r10,	r14	;
    2a8e:	0e 5e       	rla	r14		;
    2a90:	0f 5e       	add	r14,	r15	;
    2a92:	0f 5e       	add	r14,	r15	;
    2a94:	0f 5e       	add	r14,	r15	;
    2a96:	0c 4a       	mov	r10,	r12	;
    2a98:	3d 40 ce 07 	mov	#1998,	r13	;#0x07ce
    2a9c:	1e 4f 90 02 	mov	656(r15),r14	;
    2aa0:	5f 43       	mov.b	#1,	r15	;r3 As==01
    2aa2:	b0 12 38 55 	call	#21816		;#0x5538
    2aa6:	12 12 ce 07 	push	&0x07ce		;
    2aaa:	30 12 fc 28 	push	#10492		;#0x28fc
    2aae:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    2ab2:	21 52       	add	#4,	r1	;r2 As==10
    2ab4:	82 3f       	jmp	$-250    	;abs 0x29ba
    2ab6:	0f 4a       	mov	r10,	r15	;
    2ab8:	0f 5f       	rla	r15		;
    2aba:	0f 5f       	rla	r15		;
    2abc:	0f 5f       	rla	r15		;
    2abe:	0f 5f       	rla	r15		;
    2ac0:	0f 5f       	rla	r15		;
    2ac2:	0e 4a       	mov	r10,	r14	;
    2ac4:	0e 5e       	rla	r14		;
    2ac6:	0f 5e       	add	r14,	r15	;
    2ac8:	0f 5e       	add	r14,	r15	;
    2aca:	0f 5e       	add	r14,	r15	;
    2acc:	0c 4a       	mov	r10,	r12	;
    2ace:	3d 40 ce 07 	mov	#1998,	r13	;#0x07ce
    2ad2:	1e 4f 90 02 	mov	656(r15),r14	;
    2ad6:	4f 43       	clr.b	r15		;
    2ad8:	b0 12 38 55 	call	#21816		;#0x5538
    2adc:	12 12 d0 07 	push	&0x07d0		;
    2ae0:	12 12 ce 07 	push	&0x07ce		;
    2ae4:	30 12 09 29 	push	#10505		;#0x2909
    2ae8:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    2aec:	31 50 06 00 	add	#6,	r1	;#0x0006
    2af0:	64 3f       	jmp	$-310    	;abs 0x29ba
    2af2:	5f 4b 04 00 	mov.b	4(r11),	r15	;
    2af6:	4a 4f       	mov.b	r15,	r10	;
    2af8:	0a 5a       	rla	r10		;
    2afa:	0a 5f       	add	r15,	r10	;
    2afc:	0a 5f       	add	r15,	r10	;
    2afe:	0a 5f       	add	r15,	r10	;
    2b00:	5f 4b 03 00 	mov.b	3(r11),	r15	;
    2b04:	0a 5f       	add	r15,	r10	;
    2b06:	3a 50 fa ff 	add	#-6,	r10	;#0xfffa
    2b0a:	0e 4b       	mov	r11,	r14	;
    2b0c:	4f 4a       	mov.b	r10,	r15	;
    2b0e:	b0 12 04 2c 	call	#11268		;#0x2c04
    2b12:	0f 93       	cmp	#0,	r15	;r3 As==00
    2b14:	18 24       	jz	$+50     	;abs 0x2b46
    2b16:	0f 4a       	mov	r10,	r15	;
    2b18:	0f 5f       	rla	r15		;
    2b1a:	0f 5f       	rla	r15		;
    2b1c:	0f 5f       	rla	r15		;
    2b1e:	0f 5f       	rla	r15		;
    2b20:	0f 5f       	rla	r15		;
    2b22:	0e 4a       	mov	r10,	r14	;
    2b24:	0e 5e       	rla	r14		;
    2b26:	0f 5e       	add	r14,	r15	;
    2b28:	0f 5e       	add	r14,	r15	;
    2b2a:	0f 5e       	add	r14,	r15	;
    2b2c:	0c 4a       	mov	r10,	r12	;
    2b2e:	3d 40 ce 07 	mov	#1998,	r13	;#0x07ce
    2b32:	1e 4f 90 02 	mov	656(r15),r14	;
    2b36:	5f 43       	mov.b	#1,	r15	;r3 As==01
    2b38:	b0 12 38 55 	call	#21816		;#0x5538
    2b3c:	12 12 ce 07 	push	&0x07ce		;
    2b40:	30 12 12 29 	push	#10514		;#0x2912
    2b44:	b4 3f       	jmp	$-150    	;abs 0x2aae
    2b46:	0a 5a       	rla	r10		;
    2b48:	0a 5b       	add	r11,	r10	;
    2b4a:	1a 12 10 00 	push	16(r10)		;
    2b4e:	30 12 17 29 	push	#10519		;#0x2917
    2b52:	ad 3f       	jmp	$-164    	;abs 0x2aae
    2b54:	5f 4b 04 00 	mov.b	4(r11),	r15	;
    2b58:	4a 4f       	mov.b	r15,	r10	;
    2b5a:	0a 5a       	rla	r10		;
    2b5c:	0a 5f       	add	r15,	r10	;
    2b5e:	0a 5f       	add	r15,	r10	;
    2b60:	0a 5f       	add	r15,	r10	;
    2b62:	5f 4b 03 00 	mov.b	3(r11),	r15	;
    2b66:	0a 5f       	add	r15,	r10	;
    2b68:	3a 50 fa ff 	add	#-6,	r10	;#0xfffa
    2b6c:	1e 4b 08 00 	mov	8(r11),	r14	;
    2b70:	0f 4a       	mov	r10,	r15	;
    2b72:	b0 12 06 16 	call	#5638		;#0x1606
    2b76:	0a 5a       	rla	r10		;
    2b78:	0a 5b       	add	r11,	r10	;
    2b7a:	9a 4b 08 00 	mov	8(r11),	16(r10)	;
    2b7e:	10 00 
    2b80:	1c 3f       	jmp	$-454    	;abs 0x29ba
    2b82:	0f 4b       	mov	r11,	r15	;
    2b84:	b0 12 28 58 	call	#22568		;#0x5828
    2b88:	18 3f       	jmp	$-462    	;abs 0x29ba
    2b8a:	0f 4b       	mov	r11,	r15	;
    2b8c:	b0 12 d0 59 	call	#22992		;#0x59d0
    2b90:	14 3f       	jmp	$-470    	;abs 0x29ba
    2b92:	0f 4b       	mov	r11,	r15	;
    2b94:	b0 12 30 5a 	call	#23088		;#0x5a30
    2b98:	10 3f       	jmp	$-478    	;abs 0x29ba
    2b9a:	3e 40 68 02 	mov	#616,	r14	;#0x0268
    2b9e:	0f 4b       	mov	r11,	r15	;
    2ba0:	b0 12 fe 57 	call	#22526		;#0x57fe
    2ba4:	0f 93       	cmp	#0,	r15	;r3 As==00
    2ba6:	07 20       	jnz	$+16     	;abs 0x2bb6
    2ba8:	12 12 6a 02 	push	&0x026a		;
    2bac:	12 12 68 02 	push	&0x0268		;
    2bb0:	30 12 1b 29 	push	#10523		;#0x291b
    2bb4:	99 3f       	jmp	$-204    	;abs 0x2ae8
    2bb6:	30 12 23 29 	push	#10531		;#0x2923
    2bba:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    2bbe:	21 53       	incd	r1		;
    2bc0:	fc 3e       	jmp	$-518    	;abs 0x29ba
    2bc2:	30 12 04 29 	push	#10500		;#0x2904
    2bc6:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    2bca:	b0 12 1e 14 	call	#5150		;#0x141e
    2bce:	f7 3f       	jmp	$-16     	;abs 0x2bbe
    2bd0:	3f 40 86 06 	mov	#1670,	r15	;#0x0686
    2bd4:	b0 12 96 1d 	call	#7574		;#0x1d96
    2bd8:	f0 3e       	jmp	$-542    	;abs 0x29ba
    2bda:	d2 43 10 02 	mov.b	#1,	&0x0210	;r3 As==01
    2bde:	ed 3e       	jmp	$-548    	;abs 0x29ba
    2be0:	c2 43 10 02 	mov.b	#0,	&0x0210	;r3 As==00
    2be4:	b0 12 2c 18 	call	#6188		;#0x182c
    2be8:	e8 3e       	jmp	$-558    	;abs 0x29ba
    2bea:	3f 40 86 06 	mov	#1670,	r15	;#0x0686
    2bee:	b0 12 e8 20 	call	#8424		;#0x20e8
    2bf2:	e3 3e       	jmp	$-568    	;abs 0x29ba
    2bf4:	21 53       	incd	r1		;
  }
  system_state->instruction.command_reg=UEAC_READY;
    2bf6:	cb 43 00 00 	mov.b	#0,	0(r11)	;r3 As==00
  return(return_val);
}
    2bfa:	0f 49       	mov	r9,	r15	;
    2bfc:	39 41       	pop	r9		;
    2bfe:	3a 41       	pop	r10		;
    2c00:	3b 41       	pop	r11		;
    2c02:	30 41       	ret			

00002c04 <lla_input_check>:

int lla_input_check(char chan,ueac_t *system_state) {
    2c04:	4d 4f       	mov.b	r15,	r13	;
  int return_val=0;
    2c06:	0c 43       	clr	r12		;
  if (system_state->lla_input&(((unsigned long)0x00000001)<<chan)) {
    2c08:	1f 4e 0e 00 	mov	14(r14),r15	;
    2c0c:	1e 4e 0c 00 	mov	12(r14),r14	;
    2c10:	8d 11       	sxt	r13		;
    2c12:	0d 93       	cmp	#0,	r13	;r3 As==00
    2c14:	05 24       	jz	$+12     	;abs 0x2c20
    2c16:	12 c3       	clrc			
    2c18:	0f 10       	rrc	r15		;
    2c1a:	0e 10       	rrc	r14		;
    2c1c:	1d 83       	dec	r13		;
    2c1e:	fb 23       	jnz	$-8      	;abs 0x2c16
    2c20:	1e b3       	bit	#1,	r14	;r3 As==01
    2c22:	01 24       	jz	$+4      	;abs 0x2c26
    return_val=1;
    2c24:	1c 43       	mov	#1,	r12	;r3 As==01
  }
  return (return_val);
}
    2c26:	0f 4c       	mov	r12,	r15	;
    2c28:	30 41       	ret			
    2c2a:	78 69       	addc.b	@r9+,	r8	;
    2c2c:	6e 3d       	jmp	$+734    	;abs 0x2f0a
    2c2e:	25 64       	addc	@r4,	r5	;
    2c30:	20 00       	.word	0x0020;	????
    2c32:	79 69       	addc.b	@r9+,	r9	;
    2c34:	6e 3d       	jmp	$+734    	;abs 0x2f12
    2c36:	25 64       	addc	@r4,	r5	;
    2c38:	20 00       	.word	0x0020;	????
    2c3a:	78 6f       	addc.b	@r15+,	r8	;
    2c3c:	75 74       	subc.b	@r4+,	r5	;
    2c3e:	3d 25       	jz	$+636    	;abs 0x2eba
    2c40:	64 20       	jnz	$+202    	;abs 0x2d0a
    2c42:	00 79       	subc	r9,	r0	;
    2c44:	6f 75       	subc.b	@r5,	r15	;
    2c46:	74 3d       	jmp	$+746    	;abs 0x2f30
    2c48:	25 64       	addc	@r4,	r5	;
    2c4a:	0a 00       	.word	0x000a;	????
    2c4c:	64 65       	addc.b	@r5,	r4	;
    2c4e:	73 63       	.word	0x6373;	????
    2c50:	72 69       	addc.b	@r9+,	r2	;
    2c52:	70 74       	subc.b	@r4+,	r0	;
    2c54:	6f 72       	subc.b	#4,	r15	;r2 As==10
    2c56:	3d 25       	jz	$+636    	;abs 0x2ed2
    2c58:	64 20       	jnz	$+202    	;abs 0x2d22
    2c5a:	00 66       	addc	r6,	r0	;
    2c5c:	75 6e       	addc.b	@r14+,	r5	;
    2c5e:	63 74       	.word	0x7463;	????
    2c60:	69 6f       	addc.b	@r15,	r9	;
    2c62:	6e 3d       	jmp	$+734    	;abs 0x2f40
    2c64:	25 64       	addc	@r4,	r5	;
    2c66:	20 00       	.word	0x0020;	????
    2c68:	70 65       	addc.b	@r5+,	r0	;
    2c6a:	72 69       	addc.b	@r9+,	r2	;
    2c6c:	6f 64       	addc.b	@r4,	r15	;
    2c6e:	3d 25       	jz	$+636    	;abs 0x2eea
    2c70:	64 0a       	.word	0x0a64;	????
	...

00002c74 <report_instruction>:

void report_instruction(ueac_t *system_state) {
    2c74:	0b 12       	push	r11		;
    2c76:	0b 4f       	mov	r15,	r11	;
  
  printf("xin=%d ",system_state->instruction.pin_x);
    2c78:	5f 4f 03 00 	mov.b	3(r15),	r15	;
    2c7c:	0f 12       	push	r15		;
    2c7e:	30 12 2a 2c 	push	#11306		;#0x2c2a
    2c82:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  printf("yin=%d ",system_state->instruction.pin_y);
    2c86:	5f 4b 04 00 	mov.b	4(r11),	r15	;
    2c8a:	0f 12       	push	r15		;
    2c8c:	30 12 32 2c 	push	#11314		;#0x2c32
    2c90:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  printf("xout=%d ",system_state->instruction.pin_x_alt);
    2c94:	5f 4b 05 00 	mov.b	5(r11),	r15	;
    2c98:	0f 12       	push	r15		;
    2c9a:	30 12 3a 2c 	push	#11322		;#0x2c3a
    2c9e:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  printf("yout=%d\n",system_state->instruction.pin_y_alt);
    2ca2:	5f 4b 06 00 	mov.b	6(r11),	r15	;
    2ca6:	0f 12       	push	r15		;
    2ca8:	30 12 43 2c 	push	#11331		;#0x2c43
    2cac:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  printf("descriptor=%d ",system_state->instruction.lla_descriptor);
    2cb0:	5f 4b 02 00 	mov.b	2(r11),	r15	;
    2cb4:	0f 12       	push	r15		;
    2cb6:	30 12 4c 2c 	push	#11340		;#0x2c4c
    2cba:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  printf("function=%d ",system_state->instruction.lla_function);
    2cbe:	5f 4b 0a 00 	mov.b	10(r11),r15	;
    2cc2:	0f 12       	push	r15		;
    2cc4:	30 12 5b 2c 	push	#11355		;#0x2c5b
    2cc8:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  printf("period=%d\n",system_state->instruction.lla_period);
    2ccc:	5f 4b 0b 00 	mov.b	11(r11),r15	;
    2cd0:	0f 12       	push	r15		;
    2cd2:	30 12 68 2c 	push	#11368		;#0x2c68
    2cd6:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    2cda:	31 50 1c 00 	add	#28,	r1	;#0x001c
}
    2cde:	3b 41       	pop	r11		;
    2ce0:	30 41       	ret			

00002ce2 <DELIMITER>:
    2ce2:	2c 00                                               ,.

00002ce4 <TERMINATOR>:
    2ce4:	0a 00                                               ..

00002ce6 <RST>:
    2ce6:	52 53 54 0a 00                                      RST..

00002ceb <CAL>:
    2ceb:	43 41 4c 0a 00                                      CAL..

00002cf0 <DEBUG>:
    2cf0:	44 45 42 55 47 0a 00                                DEBUG..

00002cf7 <LON>:
    2cf7:	4c 4f 4e 0a 00                                      LON..

00002cfc <LOF>:
    2cfc:	4c 4f 46 0a 00                                      LOF..

00002d01 <GRID_NUM_MIN>:
    2d01:	31 00                                               1.

00002d03 <GRID_NUM_MAX>:
    2d03:	35 00 00                                            5..

00002d06 <delspace>:
    2d06:	0b 12       	push	r11		;
    2d08:	0c 4f       	mov	r15,	r12	;
    2d0a:	0b 43       	clr	r11		;
    2d0c:	6d 4f       	mov.b	@r15,	r13	;
    2d0e:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    2d10:	0c 24       	jz	$+26     	;abs 0x2d2a
    2d12:	7d 90 20 00 	cmp.b	#32,	r13	;#0x0020
    2d16:	04 24       	jz	$+10     	;abs 0x2d20
    2d18:	ce 4d 00 00 	mov.b	r13,	0(r14)	;
    2d1c:	1e 53       	inc	r14		;
    2d1e:	1b 53       	inc	r11		;
    2d20:	1c 53       	inc	r12		;
    2d22:	6f 4c       	mov.b	@r12,	r15	;
    2d24:	4d 4f       	mov.b	r15,	r13	;
    2d26:	4f 93       	cmp.b	#0,	r15	;r3 As==00
    2d28:	f4 23       	jnz	$-22     	;abs 0x2d12
    2d2a:	ce 43 00 00 	mov.b	#0,	0(r14)	;r3 As==00
    2d2e:	0f 4b       	mov	r11,	r15	;
    2d30:	3b 41       	pop	r11		;
    2d32:	30 41       	ret			
    2d34:	52 00       	.word	0x0052;	????
    2d36:	4e 4f       	mov.b	r15,	r14	;
    2d38:	4b 0a       	.word	0x0a4b;	????
    2d3a:	0d 00       	.word	0x000d;	????
    2d3c:	57 00       	.word	0x0057;	????
    2d3e:	50 00       	.word	0x0050;	????
    2d40:	4c 00       	.word	0x004c;	????
    2d42:	41 00       	.word	0x0041;	????
    2d44:	44 00       	.word	0x0044;	????
    2d46:	45 00       	.word	0x0045;	????
    2d48:	56 00       	.word	0x0056;	????
    2d4a:	49 00       	.word	0x0049;	????
    2d4c:	46 6f       	addc.b	r15,	r6	;
    2d4e:	75 6e       	addc.b	@r14+,	r5	;
    2d50:	64 20       	jnz	$+202    	;abs 0x2e1a
    2d52:	54 65 72 6d 	addc.b	28018(r5),r4	;
    2d56:	69 6e       	addc.b	@r14,	r9	;
    2d58:	61 74       	subc.b	@r4,	r1	;
    2d5a:	6f 72       	subc.b	#4,	r15	;r2 As==10
    2d5c:	00 46       	br	r6		;
    2d5e:	31 30       	jn	$+100    	;abs 0x2dc2
    2d60:	20 25       	jz	$+578    	;abs 0x2fa2
    2d62:	73 0a       	.word	0x0a73;	????
	...

00002d66 <interpreter>:
    2d66:	0b 12       	push	r11		;
    2d68:	0a 12       	push	r10		;
    2d6a:	09 12       	push	r9		;
    2d6c:	08 12       	push	r8		;
    2d6e:	07 12       	push	r7		;
    2d70:	06 12       	push	r6		;
    2d72:	04 12       	push	r4		;
    2d74:	31 80 16 00 	sub	#22,	r1	;#0x0016
    2d78:	04 41       	mov	r1,	r4	;
    2d7a:	08 4e       	mov	r14,	r8	;
    2d7c:	47 43       	clr.b	r7		;
    2d7e:	09 43       	clr	r9		;
    2d80:	06 43       	clr	r6		;
    2d82:	0a 43       	clr	r10		;
    2d84:	6e 4e       	mov.b	@r14,	r14	;
    2d86:	5e 93       	cmp.b	#1,	r14	;r3 As==01
    2d88:	fe 27       	jz	$-2      	;abs 0x2d86
    2d8a:	3e 40 e2 2c 	mov	#11490,	r14	;#0x2ce2
    2d8e:	b0 12 16 92 	call	#-28138	;#0x9216
    2d92:	0f 93       	cmp	#0,	r15	;r3 As==00
    2d94:	26 24       	jz	$+78     	;abs 0x2de2
    2d96:	0e 44       	mov	r4,	r14	;
    2d98:	b0 12 06 2d 	call	#11526		;#0x2d06
    2d9c:	39 90 0a 00 	cmp	#10,	r9	;#0x000a
    2da0:	17 2c       	jc	$+48     	;abs 0x2dd0
    2da2:	0f 49       	mov	r9,	r15	;
    2da4:	0f 5f       	rla	r15		;
    2da6:	10 4f aa 2d 	br	11690(r15)		;
    2daa:	be 2d       	jc	$+894    	;abs 0x3128
    2dac:	b6 2e       	jc	$-658    	;abs 0x2b1a
    2dae:	ba 2f       	jc	$-138    	;abs 0x2d24
    2db0:	08 30       	jn	$+18     	;abs 0x2dc2
    2db2:	54 30       	jn	$+170    	;abs 0x2e5c
    2db4:	ee 30       	jn	$+478    	;abs 0x2f92
    2db6:	28 31       	jn	$+594    	;abs 0x3008
    2db8:	66 31       	jn	$+718    	;abs 0x3086
    2dba:	a4 31       	jn	$+842    	;abs 0x3104
    2dbc:	f4 31       	jn	$+1002   	;abs 0x31a6
    2dbe:	3e 40 34 2d 	mov	#11572,	r14	;#0x2d34
    2dc2:	0f 44       	mov	r4,	r15	;
    2dc4:	b0 12 b0 90 	call	#-28496	;#0x90b0
    2dc8:	0f 93       	cmp	#0,	r15	;r3 As==00
    2dca:	1e 20       	jnz	$+62     	;abs 0x2e08
    2dcc:	06 43       	clr	r6		;
    2dce:	19 43       	mov	#1,	r9	;r3 As==01
            command_complete=FAILED;
            error_code=9;
          }
        }
        break;
      }
      break;
    case F7:
      switch (type) {
      case LLA:
        // For LLA commands this is the numeric descriptor for the LLA
        result_temp=strtol(tokbuf,&tokend,10);
        if (*tokend!=0) {
          command_complete=FAILED;
          error_code=6;
        }
        else {
          if ((result_temp>0)&&(result_temp<=10)) {
            system_state->instruction.lla_descriptor=(unsigned char) result_temp;
            field=F8;
          }
          else {
            command_complete=FAILED;
            error_code=6;
          }
        }
        break;
      }
      break;
    case F8:
      switch (type) {
      case LLA:
        // For LLA commands this is the lla_function
        result_temp=strtol(tokbuf,&tokend,10);
        if (*tokend!=0) {
          command_complete=FAILED;
          error_code=6;
        }
        else {
          if ((result_temp>0)&&(result_temp<=52)) {
            system_state->instruction.lla_function=(unsigned char) result_temp;
            field=F9;
          }
          else {
            command_complete=FAILED;
            error_code=6;
          }
        }
        break;
      }
      break;
    case F9:
        // For LLA commands this is the lla_period
      switch (type) {
      case LLA:
        // For LLA 
        if ((strptr=strchr(tokbuf,'\n'))==NULL) {
          command_complete=FAILED; // lack of newline is an error in this field. 
          error_code=10;
          break;
        }
        else {
          *strptr=0; // since newline found, strip it from tokbuf for V/I match
        }
        result_temp=strtol(tokbuf,&tokend,10);
        if (*tokend!=0) {
          command_complete=FAILED;
          error_code=6;
        }
        else {
          if ((result_temp>0)&&(result_temp<=255)) {
            system_state->instruction.lla_period=(unsigned char) result_temp;
            command_complete=DONE;
          }
          else {
            command_complete=FAILED;
            error_code=6;
          }
        }
        break;
      }
      break;
    case F10:
      if (!strncasecmp(tokbuf,TERMINATOR,sizeof(TERMINATOR))) {
        printf("Found Terminator\n");
      }
      else {
        printf("F10 %s\n",tokbuf);
      }
      break;
    }
    token = strtok(NULL,DELIMITER);  // get the next token 
    2dd0:	3e 40 e2 2c 	mov	#11490,	r14	;#0x2ce2
    2dd4:	0f 43       	clr	r15		;
    2dd6:	b0 12 16 92 	call	#-28138	;#0x9216
    2dda:	0f 93       	cmp	#0,	r15	;r3 As==00
    2ddc:	02 24       	jz	$+6      	;abs 0x2de2
    2dde:	2a 93       	cmp	#2,	r10	;r3 As==10
    2de0:	da 23       	jnz	$-74     	;abs 0x2d96
  }
  if (command_complete==DONE) {
    2de2:	1a 93       	cmp	#1,	r10	;r3 As==01
    2de4:	07 24       	jz	$+16     	;abs 0x2df4
    system_state->instruction.command_reg=UEAC_EXECUTE;
    ueac_execute_instruction(system_state);
    while (system_state->instruction.command_reg==UEAC_EXECUTE); // wait while the last command completes
  }
  else {
#ifndef LINUX 
    printf("NOK\n\r");
    2de6:	30 12 36 2d 	push	#11574		;#0x2d36
    2dea:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    2dee:	21 53       	incd	r1		;
    2df0:	30 40 20 32 	br	#0x3220		;
    2df4:	d8 43 00 00 	mov.b	#1,	0(r8)	;r3 As==01
    2df8:	0f 48       	mov	r8,	r15	;
    2dfa:	b0 12 28 29 	call	#10536		;#0x2928
    2dfe:	6e 48       	mov.b	@r8,	r14	;
    2e00:	5e 93       	cmp.b	#1,	r14	;r3 As==01
    2e02:	fe 27       	jz	$-2      	;abs 0x2e00
    2e04:	30 40 20 32 	br	#0x3220		;
    2e08:	3e 40 3c 2d 	mov	#11580,	r14	;#0x2d3c
    2e0c:	0f 44       	mov	r4,	r15	;
    2e0e:	b0 12 b0 90 	call	#-28496	;#0x90b0
    2e12:	0f 93       	cmp	#0,	r15	;r3 As==00
    2e14:	02 20       	jnz	$+6      	;abs 0x2e1a
    2e16:	16 43       	mov	#1,	r6	;r3 As==01
    2e18:	da 3f       	jmp	$-74     	;abs 0x2dce
    2e1a:	3e 40 3e 2d 	mov	#11582,	r14	;#0x2d3e
    2e1e:	0f 44       	mov	r4,	r15	;
    2e20:	b0 12 b0 90 	call	#-28496	;#0x90b0
    2e24:	0f 93       	cmp	#0,	r15	;r3 As==00
    2e26:	02 20       	jnz	$+6      	;abs 0x2e2c
    2e28:	26 43       	mov	#2,	r6	;r3 As==10
    2e2a:	d1 3f       	jmp	$-92     	;abs 0x2dce
    2e2c:	3e 40 40 2d 	mov	#11584,	r14	;#0x2d40
    2e30:	0f 44       	mov	r4,	r15	;
    2e32:	b0 12 b0 90 	call	#-28496	;#0x90b0
    2e36:	0f 93       	cmp	#0,	r15	;r3 As==00
    2e38:	03 20       	jnz	$+8      	;abs 0x2e40
    2e3a:	36 40 03 00 	mov	#3,	r6	;#0x0003
    2e3e:	c7 3f       	jmp	$-112    	;abs 0x2dce
    2e40:	3e 40 e6 2c 	mov	#11494,	r14	;#0x2ce6
    2e44:	0f 44       	mov	r4,	r15	;
    2e46:	b0 12 b0 90 	call	#-28496	;#0x90b0
    2e4a:	0f 93       	cmp	#0,	r15	;r3 As==00
    2e4c:	05 20       	jnz	$+12     	;abs 0x2e58
    2e4e:	f8 40 09 00 	mov.b	#9,	1(r8)	;#0x0009
    2e52:	01 00 
    2e54:	1a 43       	mov	#1,	r10	;r3 As==01
    2e56:	bb 3f       	jmp	$-136    	;abs 0x2dce
    2e58:	3e 40 eb 2c 	mov	#11499,	r14	;#0x2ceb
    2e5c:	0f 44       	mov	r4,	r15	;
    2e5e:	b0 12 b0 90 	call	#-28496	;#0x90b0
    2e62:	0f 93       	cmp	#0,	r15	;r3 As==00
    2e64:	04 20       	jnz	$+10     	;abs 0x2e6e
    2e66:	f8 40 0a 00 	mov.b	#10,	1(r8)	;#0x000a
    2e6a:	01 00 
    2e6c:	f3 3f       	jmp	$-24     	;abs 0x2e54
    2e6e:	3e 40 f0 2c 	mov	#11504,	r14	;#0x2cf0
    2e72:	0f 44       	mov	r4,	r15	;
    2e74:	b0 12 b0 90 	call	#-28496	;#0x90b0
    2e78:	0f 93       	cmp	#0,	r15	;r3 As==00
    2e7a:	04 20       	jnz	$+10     	;abs 0x2e84
    2e7c:	f8 40 0d 00 	mov.b	#13,	1(r8)	;#0x000d
    2e80:	01 00 
    2e82:	e8 3f       	jmp	$-46     	;abs 0x2e54
    2e84:	3e 40 f7 2c 	mov	#11511,	r14	;#0x2cf7
    2e88:	0f 44       	mov	r4,	r15	;
    2e8a:	b0 12 b0 90 	call	#-28496	;#0x90b0
    2e8e:	0f 93       	cmp	#0,	r15	;r3 As==00
    2e90:	04 20       	jnz	$+10     	;abs 0x2e9a
    2e92:	f8 40 0b 00 	mov.b	#11,	1(r8)	;#0x000b
    2e96:	01 00 
    2e98:	dd 3f       	jmp	$-68     	;abs 0x2e54
    2e9a:	3e 40 fc 2c 	mov	#11516,	r14	;#0x2cfc
    2e9e:	0f 44       	mov	r4,	r15	;
    2ea0:	b0 12 b0 90 	call	#-28496	;#0x90b0
    2ea4:	0f 93       	cmp	#0,	r15	;r3 As==00
    2ea6:	04 20       	jnz	$+10     	;abs 0x2eb0
    2ea8:	f8 40 0c 00 	mov.b	#12,	1(r8)	;#0x000c
    2eac:	01 00 
    2eae:	d2 3f       	jmp	$-90     	;abs 0x2e54
    2eb0:	2a 43       	mov	#2,	r10	;r3 As==10
    2eb2:	57 43       	mov.b	#1,	r7	;r3 As==01
    2eb4:	8c 3f       	jmp	$-230    	;abs 0x2dce
    2eb6:	16 93       	cmp	#1,	r6	;r3 As==01
    2eb8:	72 24       	jz	$+230    	;abs 0x2f9e
    2eba:	26 93       	cmp	#2,	r6	;r3 As==10
    2ebc:	56 38       	jl	$+174    	;abs 0x2f6a
    2ebe:	26 93       	cmp	#2,	r6	;r3 As==10
    2ec0:	33 24       	jz	$+104    	;abs 0x2f28
    2ec2:	36 90 03 00 	cmp	#3,	r6	;#0x0003
    2ec6:	84 23       	jnz	$-246    	;abs 0x2dd0
    2ec8:	3e 40 42 2d 	mov	#11586,	r14	;#0x2d42
    2ecc:	0f 44       	mov	r4,	r15	;
    2ece:	b0 12 b0 90 	call	#-28496	;#0x90b0
    2ed2:	0f 93       	cmp	#0,	r15	;r3 As==00
    2ed4:	05 20       	jnz	$+12     	;abs 0x2ee0
    2ed6:	f8 40 05 00 	mov.b	#5,	1(r8)	;#0x0005
    2eda:	01 00 
    2edc:	29 43       	mov	#2,	r9	;r3 As==10
    2ede:	78 3f       	jmp	$-270    	;abs 0x2dd0
    2ee0:	3e 40 44 2d 	mov	#11588,	r14	;#0x2d44
    2ee4:	0f 44       	mov	r4,	r15	;
    2ee6:	b0 12 b0 90 	call	#-28496	;#0x90b0
    2eea:	0f 93       	cmp	#0,	r15	;r3 As==00
    2eec:	04 20       	jnz	$+10     	;abs 0x2ef6
    2eee:	f8 40 06 00 	mov.b	#6,	1(r8)	;#0x0006
    2ef2:	01 00 
    2ef4:	f3 3f       	jmp	$-24     	;abs 0x2edc
    2ef6:	3e 40 46 2d 	mov	#11590,	r14	;#0x2d46
    2efa:	0f 44       	mov	r4,	r15	;
    2efc:	b0 12 b0 90 	call	#-28496	;#0x90b0
    2f00:	0f 93       	cmp	#0,	r15	;r3 As==00
    2f02:	04 20       	jnz	$+10     	;abs 0x2f0c
    2f04:	f8 40 07 00 	mov.b	#7,	1(r8)	;#0x0007
    2f08:	01 00 
    2f0a:	e8 3f       	jmp	$-46     	;abs 0x2edc
    2f0c:	3e 40 34 2d 	mov	#11572,	r14	;#0x2d34
    2f10:	0f 44       	mov	r4,	r15	;
    2f12:	b0 12 b0 90 	call	#-28496	;#0x90b0
    2f16:	0f 93       	cmp	#0,	r15	;r3 As==00
    2f18:	03 20       	jnz	$+8      	;abs 0x2f20
    2f1a:	f8 42 01 00 	mov.b	#8,	1(r8)	;r2 As==11
    2f1e:	de 3f       	jmp	$-66     	;abs 0x2edc
    2f20:	2a 43       	mov	#2,	r10	;r3 As==10
    2f22:	77 40 05 00 	mov.b	#5,	r7	;#0x0005
    2f26:	54 3f       	jmp	$-342    	;abs 0x2dd0
    2f28:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    2f2c:	0f 44       	mov	r4,	r15	;
    2f2e:	b0 12 72 90 	call	#-28558	;#0x9072
    2f32:	0f 93       	cmp	#0,	r15	;r3 As==00
    2f34:	17 24       	jz	$+48     	;abs 0x2f64
    2f36:	cf 43 00 00 	mov.b	#0,	0(r15)	;r3 As==00
    2f3a:	3e 40 48 2d 	mov	#11592,	r14	;#0x2d48
    2f3e:	0f 44       	mov	r4,	r15	;
    2f40:	b0 12 b0 90 	call	#-28496	;#0x90b0
    2f44:	0f 93       	cmp	#0,	r15	;r3 As==00
    2f46:	04 20       	jnz	$+10     	;abs 0x2f50
    2f48:	c8 43 01 00 	mov.b	#0,	1(r8)	;r3 As==00
    2f4c:	1a 43       	mov	#1,	r10	;r3 As==01
    2f4e:	40 3f       	jmp	$-382    	;abs 0x2dd0
    2f50:	3e 40 4a 2d 	mov	#11594,	r14	;#0x2d4a
    2f54:	0f 44       	mov	r4,	r15	;
    2f56:	b0 12 b0 90 	call	#-28496	;#0x90b0
    2f5a:	0f 93       	cmp	#0,	r15	;r3 As==00
    2f5c:	e1 23       	jnz	$-60     	;abs 0x2f20
    2f5e:	d8 43 01 00 	mov.b	#1,	1(r8)	;r3 As==01
    2f62:	f4 3f       	jmp	$-22     	;abs 0x2f4c
    2f64:	2a 43       	mov	#2,	r10	;r3 As==10
    2f66:	67 42       	mov.b	#4,	r7	;r2 As==10
    2f68:	33 3f       	jmp	$-408    	;abs 0x2dd0
    2f6a:	06 93       	cmp	#0,	r6	;r3 As==00
    2f6c:	31 23       	jnz	$-412    	;abs 0x2dd0
    2f6e:	3e 40 48 2d 	mov	#11592,	r14	;#0x2d48
    2f72:	0f 44       	mov	r4,	r15	;
    2f74:	b0 12 b0 90 	call	#-28496	;#0x90b0
    2f78:	0f 93       	cmp	#0,	r15	;r3 As==00
    2f7a:	03 20       	jnz	$+8      	;abs 0x2f82
    2f7c:	e8 43 01 00 	mov.b	#2,	1(r8)	;r3 As==10
    2f80:	ad 3f       	jmp	$-164    	;abs 0x2edc
    2f82:	3e 40 4a 2d 	mov	#11594,	r14	;#0x2d4a
    2f86:	0f 44       	mov	r4,	r15	;
    2f88:	b0 12 b0 90 	call	#-28496	;#0x90b0
    2f8c:	0f 93       	cmp	#0,	r15	;r3 As==00
    2f8e:	04 20       	jnz	$+10     	;abs 0x2f98
    2f90:	f8 40 03 00 	mov.b	#3,	1(r8)	;#0x0003
    2f94:	01 00 
    2f96:	a2 3f       	jmp	$-186    	;abs 0x2edc
    2f98:	2a 43       	mov	#2,	r10	;r3 As==10
    2f9a:	67 43       	mov.b	#2,	r7	;r3 As==10
    2f9c:	19 3f       	jmp	$-460    	;abs 0x2dd0
    2f9e:	3e 40 4a 2d 	mov	#11594,	r14	;#0x2d4a
    2fa2:	0f 44       	mov	r4,	r15	;
    2fa4:	b0 12 b0 90 	call	#-28496	;#0x90b0
    2fa8:	0f 93       	cmp	#0,	r15	;r3 As==00
    2faa:	03 20       	jnz	$+8      	;abs 0x2fb2
    2fac:	e8 42 01 00 	mov.b	#4,	1(r8)	;r2 As==10
    2fb0:	95 3f       	jmp	$-212    	;abs 0x2edc
    2fb2:	2a 43       	mov	#2,	r10	;r3 As==10
    2fb4:	77 40 03 00 	mov.b	#3,	r7	;#0x0003
    2fb8:	0b 3f       	jmp	$-488    	;abs 0x2dd0
    2fba:	06 93       	cmp	#0,	r6	;r3 As==00
    2fbc:	09 3b       	jl	$-492    	;abs 0x2dd0
    2fbe:	26 93       	cmp	#2,	r6	;r3 As==10
    2fc0:	03 38       	jl	$+8      	;abs 0x2fc8
    2fc2:	36 90 03 00 	cmp	#3,	r6	;#0x0003
    2fc6:	04 23       	jnz	$-502    	;abs 0x2dd0
    2fc8:	3d 40 0a 00 	mov	#10,	r13	;#0x000a
    2fcc:	0e 44       	mov	r4,	r14	;
    2fce:	3e 50 14 00 	add	#20,	r14	;#0x0014
    2fd2:	0f 44       	mov	r4,	r15	;
    2fd4:	b0 12 f2 87 	call	#-30734	;#0x87f2
    2fd8:	0d 4e       	mov	r14,	r13	;
    2fda:	0e 4f       	mov	r15,	r14	;
    2fdc:	1f 44 14 00 	mov	20(r4),	r15	;
    2fe0:	cf 93 00 00 	cmp.b	#0,	0(r15)	;r3 As==00
    2fe4:	0d 20       	jnz	$+28     	;abs 0x3000
    2fe6:	0b 4d       	mov	r13,	r11	;
    2fe8:	0c 4e       	mov	r14,	r12	;
    2fea:	3b 53       	add	#-1,	r11	;r3 As==11
    2fec:	3c 63       	addc	#-1,	r12	;r3 As==11
    2fee:	3b 80 05 00 	sub	#5,	r11	;#0x0005
    2ff2:	0c 73       	sbc	r12		;
    2ff4:	05 2c       	jc	$+12     	;abs 0x3000
    2ff6:	c8 4d 03 00 	mov.b	r13,	3(r8)	;
    2ffa:	39 40 03 00 	mov	#3,	r9	;#0x0003
    2ffe:	e8 3e       	jmp	$-558    	;abs 0x2dd0
    3000:	2a 43       	mov	#2,	r10	;r3 As==10
    3002:	77 40 06 00 	mov.b	#6,	r7	;#0x0006
    3006:	e4 3e       	jmp	$-566    	;abs 0x2dd0
    3008:	06 93       	cmp	#0,	r6	;r3 As==00
    300a:	e2 3a       	jl	$-570    	;abs 0x2dd0
    300c:	26 93       	cmp	#2,	r6	;r3 As==10
    300e:	03 38       	jl	$+8      	;abs 0x3016
    3010:	36 90 03 00 	cmp	#3,	r6	;#0x0003
    3014:	dd 22       	jnz	$-580    	;abs 0x2dd0
    3016:	3d 40 0a 00 	mov	#10,	r13	;#0x000a
    301a:	0e 44       	mov	r4,	r14	;
    301c:	3e 50 14 00 	add	#20,	r14	;#0x0014
    3020:	0f 44       	mov	r4,	r15	;
    3022:	b0 12 f2 87 	call	#-30734	;#0x87f2
    3026:	0d 4e       	mov	r14,	r13	;
    3028:	0e 4f       	mov	r15,	r14	;
    302a:	1f 44 14 00 	mov	20(r4),	r15	;
    302e:	cf 93 00 00 	cmp.b	#0,	0(r15)	;r3 As==00
    3032:	e6 23       	jnz	$-50     	;abs 0x3000
    3034:	0b 4d       	mov	r13,	r11	;
    3036:	0c 4e       	mov	r14,	r12	;
    3038:	3b 53       	add	#-1,	r11	;r3 As==11
    303a:	3c 63       	addc	#-1,	r12	;r3 As==11
    303c:	3b 80 05 00 	sub	#5,	r11	;#0x0005
    3040:	0c 73       	sbc	r12		;
    3042:	04 2c       	jc	$+10     	;abs 0x304c
    3044:	c8 4d 04 00 	mov.b	r13,	4(r8)	;
    3048:	29 42       	mov	#4,	r9	;r2 As==10
    304a:	c2 3e       	jmp	$-634    	;abs 0x2dd0
    304c:	2a 43       	mov	#2,	r10	;r3 As==10
    304e:	77 40 09 00 	mov.b	#9,	r7	;#0x0009
    3052:	be 3e       	jmp	$-642    	;abs 0x2dd0
    3054:	06 93       	cmp	#0,	r6	;r3 As==00
    3056:	bc 3a       	jl	$-646    	;abs 0x2dd0
    3058:	26 93       	cmp	#2,	r6	;r3 As==10
    305a:	1d 38       	jl	$+60     	;abs 0x3096
    305c:	36 90 03 00 	cmp	#3,	r6	;#0x0003
    3060:	b7 22       	jnz	$-656    	;abs 0x2dd0
    3062:	3d 40 0a 00 	mov	#10,	r13	;#0x000a
    3066:	0e 44       	mov	r4,	r14	;
    3068:	3e 50 14 00 	add	#20,	r14	;#0x0014
    306c:	0f 44       	mov	r4,	r15	;
    306e:	b0 12 f2 87 	call	#-30734	;#0x87f2
    3072:	0d 4e       	mov	r14,	r13	;
    3074:	0e 4f       	mov	r15,	r14	;
    3076:	1f 44 14 00 	mov	20(r4),	r15	;
    307a:	cf 93 00 00 	cmp.b	#0,	0(r15)	;r3 As==00
    307e:	c0 23       	jnz	$-126    	;abs 0x3000
    3080:	0b 4d       	mov	r13,	r11	;
    3082:	0c 4e       	mov	r14,	r12	;
    3084:	3b 80 06 00 	sub	#6,	r11	;#0x0006
    3088:	0c 73       	sbc	r12		;
    308a:	e0 2f       	jc	$-62     	;abs 0x304c
    308c:	c8 4d 05 00 	mov.b	r13,	5(r8)	;
    3090:	39 40 05 00 	mov	#5,	r9	;#0x0005
    3094:	9d 3e       	jmp	$-708    	;abs 0x2dd0
    3096:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    309a:	0f 44       	mov	r4,	r15	;
    309c:	b0 12 72 90 	call	#-28558	;#0x9072
    30a0:	0f 93       	cmp	#0,	r15	;r3 As==00
    30a2:	21 24       	jz	$+68     	;abs 0x30e6
    30a4:	cf 43 00 00 	mov.b	#0,	0(r15)	;r3 As==00
    30a8:	3d 40 0a 00 	mov	#10,	r13	;#0x000a
    30ac:	0e 44       	mov	r4,	r14	;
    30ae:	3e 50 14 00 	add	#20,	r14	;#0x0014
    30b2:	0f 44       	mov	r4,	r15	;
    30b4:	b0 12 f2 87 	call	#-30734	;#0x87f2
    30b8:	0d 4e       	mov	r14,	r13	;
    30ba:	0e 4f       	mov	r15,	r14	;
    30bc:	1f 44 14 00 	mov	20(r4),	r15	;
    30c0:	cf 93 00 00 	cmp.b	#0,	0(r15)	;r3 As==00
    30c4:	9d 23       	jnz	$-196    	;abs 0x3000
    30c6:	0b 4d       	mov	r13,	r11	;
    30c8:	0c 4e       	mov	r14,	r12	;
    30ca:	3b 50 c8 00 	add	#200,	r11	;#0x00c8
    30ce:	0c 63       	adc	r12		;
    30d0:	3b 80 91 01 	sub	#401,	r11	;#0x0191
    30d4:	0c 73       	sbc	r12		;
    30d6:	03 2c       	jc	$+8      	;abs 0x30de
    30d8:	88 4d 08 00 	mov	r13,	8(r8)	;
    30dc:	37 3f       	jmp	$-400    	;abs 0x2f4c
    30de:	2a 43       	mov	#2,	r10	;r3 As==10
    30e0:	77 40 0c 00 	mov.b	#12,	r7	;#0x000c
    30e4:	75 3e       	jmp	$-788    	;abs 0x2dd0
    30e6:	2a 43       	mov	#2,	r10	;r3 As==10
    30e8:	77 40 0a 00 	mov.b	#10,	r7	;#0x000a
    30ec:	71 3e       	jmp	$-796    	;abs 0x2dd0
    30ee:	36 90 03 00 	cmp	#3,	r6	;#0x0003
    30f2:	6e 22       	jnz	$-802    	;abs 0x2dd0
    30f4:	3d 40 0a 00 	mov	#10,	r13	;#0x000a
    30f8:	0e 44       	mov	r4,	r14	;
    30fa:	3e 50 14 00 	add	#20,	r14	;#0x0014
    30fe:	0f 44       	mov	r4,	r15	;
    3100:	b0 12 f2 87 	call	#-30734	;#0x87f2
    3104:	0d 4e       	mov	r14,	r13	;
    3106:	0e 4f       	mov	r15,	r14	;
    3108:	1f 44 14 00 	mov	20(r4),	r15	;
    310c:	cf 93 00 00 	cmp.b	#0,	0(r15)	;r3 As==00
    3110:	77 23       	jnz	$-272    	;abs 0x3000
    3112:	0b 4d       	mov	r13,	r11	;
    3114:	0c 4e       	mov	r14,	r12	;
    3116:	3b 80 06 00 	sub	#6,	r11	;#0x0006
    311a:	0c 73       	sbc	r12		;
    311c:	97 2f       	jc	$-208    	;abs 0x304c
    311e:	c8 4d 06 00 	mov.b	r13,	6(r8)	;
    3122:	39 40 06 00 	mov	#6,	r9	;#0x0006
    3126:	54 3e       	jmp	$-854    	;abs 0x2dd0
    3128:	36 90 03 00 	cmp	#3,	r6	;#0x0003
    312c:	51 22       	jnz	$-860    	;abs 0x2dd0
    312e:	3d 40 0a 00 	mov	#10,	r13	;#0x000a
    3132:	0e 44       	mov	r4,	r14	;
    3134:	3e 50 14 00 	add	#20,	r14	;#0x0014
    3138:	0f 44       	mov	r4,	r15	;
    313a:	b0 12 f2 87 	call	#-30734	;#0x87f2
    313e:	0d 4e       	mov	r14,	r13	;
    3140:	0e 4f       	mov	r15,	r14	;
    3142:	1f 44 14 00 	mov	20(r4),	r15	;
    3146:	cf 93 00 00 	cmp.b	#0,	0(r15)	;r3 As==00
    314a:	5a 23       	jnz	$-330    	;abs 0x3000
    314c:	0b 4d       	mov	r13,	r11	;
    314e:	0c 4e       	mov	r14,	r12	;
    3150:	3b 53       	add	#-1,	r11	;r3 As==11
    3152:	3c 63       	addc	#-1,	r12	;r3 As==11
    3154:	3b 80 0a 00 	sub	#10,	r11	;#0x000a
    3158:	0c 73       	sbc	r12		;
    315a:	52 2f       	jc	$-346    	;abs 0x3000
    315c:	c8 4d 02 00 	mov.b	r13,	2(r8)	;
    3160:	39 40 07 00 	mov	#7,	r9	;#0x0007
    3164:	35 3e       	jmp	$-916    	;abs 0x2dd0
    3166:	36 90 03 00 	cmp	#3,	r6	;#0x0003
    316a:	32 22       	jnz	$-922    	;abs 0x2dd0
    316c:	3d 40 0a 00 	mov	#10,	r13	;#0x000a
    3170:	0e 44       	mov	r4,	r14	;
    3172:	3e 50 14 00 	add	#20,	r14	;#0x0014
    3176:	0f 44       	mov	r4,	r15	;
    3178:	b0 12 f2 87 	call	#-30734	;#0x87f2
    317c:	0d 4e       	mov	r14,	r13	;
    317e:	0e 4f       	mov	r15,	r14	;
    3180:	1f 44 14 00 	mov	20(r4),	r15	;
    3184:	cf 93 00 00 	cmp.b	#0,	0(r15)	;r3 As==00
    3188:	3b 23       	jnz	$-392    	;abs 0x3000
    318a:	0b 4d       	mov	r13,	r11	;
    318c:	0c 4e       	mov	r14,	r12	;
    318e:	3b 53       	add	#-1,	r11	;r3 As==11
    3190:	3c 63       	addc	#-1,	r12	;r3 As==11
    3192:	3b 80 34 00 	sub	#52,	r11	;#0x0034
    3196:	0c 73       	sbc	r12		;
    3198:	33 2f       	jc	$-408    	;abs 0x3000
    319a:	c8 4d 0a 00 	mov.b	r13,	10(r8)	;
    319e:	39 42       	mov	#8,	r9	;r2 As==11
    31a0:	30 40 d0 2d 	br	#0x2dd0		;
    31a4:	36 90 03 00 	cmp	#3,	r6	;#0x0003
    31a8:	02 24       	jz	$+6      	;abs 0x31ae
    31aa:	30 40 d0 2d 	br	#0x2dd0		;
    31ae:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    31b2:	0f 44       	mov	r4,	r15	;
    31b4:	b0 12 72 90 	call	#-28558	;#0x9072
    31b8:	0f 93       	cmp	#0,	r15	;r3 As==00
    31ba:	95 27       	jz	$-212    	;abs 0x30e6
    31bc:	cf 43 00 00 	mov.b	#0,	0(r15)	;r3 As==00
    31c0:	3d 40 0a 00 	mov	#10,	r13	;#0x000a
    31c4:	0e 44       	mov	r4,	r14	;
    31c6:	3e 50 14 00 	add	#20,	r14	;#0x0014
    31ca:	0f 44       	mov	r4,	r15	;
    31cc:	b0 12 f2 87 	call	#-30734	;#0x87f2
    31d0:	0d 4e       	mov	r14,	r13	;
    31d2:	0e 4f       	mov	r15,	r14	;
    31d4:	1f 44 14 00 	mov	20(r4),	r15	;
    31d8:	cf 93 00 00 	cmp.b	#0,	0(r15)	;r3 As==00
    31dc:	11 23       	jnz	$-476    	;abs 0x3000
    31de:	0b 4d       	mov	r13,	r11	;
    31e0:	0c 4e       	mov	r14,	r12	;
    31e2:	3b 53       	add	#-1,	r11	;r3 As==11
    31e4:	3c 63       	addc	#-1,	r12	;r3 As==11
    31e6:	3b 80 ff 00 	sub	#255,	r11	;#0x00ff
    31ea:	0c 73       	sbc	r12		;
    31ec:	09 2f       	jc	$-492    	;abs 0x3000
    31ee:	c8 4d 0b 00 	mov.b	r13,	11(r8)	;
    31f2:	ac 3e       	jmp	$-678    	;abs 0x2f4c
    31f4:	2d 43       	mov	#2,	r13	;r3 As==10
    31f6:	3e 40 e4 2c 	mov	#11492,	r14	;#0x2ce4
    31fa:	0f 44       	mov	r4,	r15	;
    31fc:	b0 12 1e 91 	call	#-28386	;#0x911e
    3200:	0f 93       	cmp	#0,	r15	;r3 As==00
    3202:	06 20       	jnz	$+14     	;abs 0x3210
    3204:	3f 40 4c 2d 	mov	#11596,	r15	;#0x2d4c
    3208:	b0 12 44 90 	call	#-28604	;#0x9044
    320c:	30 40 d0 2d 	br	#0x2dd0		;
    3210:	04 12       	push	r4		;
    3212:	30 12 5d 2d 	push	#11613		;#0x2d5d
    3216:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    321a:	21 52       	add	#4,	r1	;r2 As==10
    321c:	30 40 d0 2d 	br	#0x2dd0		;
#else
    printf("NOK\n");
#endif 
  }
  return error_code;
    3220:	4f 47       	mov.b	r7,	r15	;
}
    3222:	31 50 16 00 	add	#22,	r1	;#0x0016
    3226:	34 41       	pop	r4		;
    3228:	36 41       	pop	r6		;
    322a:	37 41       	pop	r7		;
    322c:	38 41       	pop	r8		;
    322e:	39 41       	pop	r9		;
    3230:	3a 41       	pop	r10		;
    3232:	3b 41       	pop	r11		;
    3234:	30 41       	ret			

00003236 <update_a2d_data>:
    3236:	0b 12       	push	r11		;
    3238:	0a 12       	push	r10		;
    323a:	0a 4f       	mov	r15,	r10	;
    323c:	0b 43       	clr	r11		;
    323e:	0c 43       	clr	r12		;
    3240:	8f 4e 22 00 	mov	r14,	34(r15)	;
    3244:	6f 4f       	mov.b	@r15,	r15	;
    3246:	0f 5f       	rla	r15		;
    3248:	0f 5a       	add	r10,	r15	;
    324a:	8f 4e 02 00 	mov	r14,	2(r15)	;
    324e:	da 53 00 00 	inc.b	0(r10)		;
    3252:	fa 90 10 00 	cmp.b	#16,	0(r10)	;#0x0010
    3256:	00 00 
    3258:	02 28       	jnc	$+6      	;abs 0x325e
    325a:	ca 43 00 00 	mov.b	#0,	0(r10)	;r3 As==00
    325e:	0d 43       	clr	r13		;
    3260:	0f 4d       	mov	r13,	r15	;
    3262:	0f 5f       	rla	r15		;
    3264:	0f 5a       	add	r10,	r15	;
    3266:	1e 4f 02 00 	mov	2(r15),	r14	;
    326a:	0f 43       	clr	r15		;
    326c:	0b 5e       	add	r14,	r11	;
    326e:	0c 6f       	addc	r15,	r12	;
    3270:	1d 53       	inc	r13		;
    3272:	3d 90 10 00 	cmp	#16,	r13	;#0x0010
    3276:	f4 3b       	jl	$-22     	;abs 0x3260
    3278:	0e 4b       	mov	r11,	r14	;
    327a:	0f 4c       	mov	r12,	r15	;
    327c:	0c 93       	cmp	#0,	r12	;r3 As==00
    327e:	03 34       	jge	$+8      	;abs 0x3286
    3280:	3e 50 0f 00 	add	#15,	r14	;#0x000f
    3284:	0f 63       	adc	r15		;
    3286:	0b 4e       	mov	r14,	r11	;
    3288:	0c 4f       	mov	r15,	r12	;
    328a:	0c 11       	rra	r12		;
    328c:	0b 10       	rrc	r11		;
    328e:	0c 11       	rra	r12		;
    3290:	0b 10       	rrc	r11		;
    3292:	0c 11       	rra	r12		;
    3294:	0b 10       	rrc	r11		;
    3296:	0c 11       	rra	r12		;
    3298:	0b 10       	rrc	r11		;
    329a:	8a 4b 24 00 	mov	r11,	36(r10)	;
    329e:	0f 4b       	mov	r11,	r15	;
    32a0:	3a 41       	pop	r10		;
    32a2:	3b 41       	pop	r11		;
    32a4:	30 41       	ret			
    32a6:	69 6e       	addc.b	@r14,	r9	;
    32a8:	73 65       	.word	0x6573;	????
    32aa:	72 74       	subc.b	@r4+,	r2	;
    32ac:	69 6f       	addc.b	@r15,	r9	;
    32ae:	6e 5f       	add.b	@r15,	r14	;
    32b0:	70 6f       	addc.b	@r15+,	r0	;
    32b2:	69 6e       	addc.b	@r14,	r9	;
    32b4:	74 3d       	jmp	$+746    	;abs 0x359e
    32b6:	25 64       	addc	@r4,	r5	;
    32b8:	0a 00       	.word	0x000a;	????
    32ba:	72 61       	addc.b	@r1+,	r2	;
    32bc:	77 5f       	add.b	@r15+,	r7	;
    32be:	72 65       	addc.b	@r5+,	r2	;
    32c0:	73 75       	.word	0x7573;	????
    32c2:	6c 74       	subc.b	@r4,	r12	;
    32c4:	3d 25       	jz	$+636    	;abs 0x3540
    32c6:	64 0a       	.word	0x0a64;	????
    32c8:	00 66       	addc	r6,	r0	;
    32ca:	69 6c       	addc.b	@r12,	r9	;
    32cc:	74 65       	addc.b	@r5+,	r4	;
    32ce:	72 65       	addc.b	@r5+,	r2	;
    32d0:	64 5f       	add.b	@r15,	r4	;
    32d2:	72 65       	addc.b	@r5+,	r2	;
    32d4:	73 75       	.word	0x7573;	????
    32d6:	6c 74       	subc.b	@r4,	r12	;
    32d8:	73 3d       	jmp	$+744    	;abs 0x35c0
    32da:	25 64       	addc	@r4,	r5	;
    32dc:	0a 00       	.word	0x000a;	????
    32de:	25 35       	jge	$+588    	;abs 0x352a
    32e0:	64 20       	jnz	$+202    	;abs 0x33aa
	...

000032e4 <report_channel_structure>:
    32e4:	0b 12       	push	r11		;
    32e6:	0a 12       	push	r10		;
    32e8:	09 12       	push	r9		;
    32ea:	08 12       	push	r8		;
    32ec:	09 4f       	mov	r15,	r9	;
    32ee:	6f 4f       	mov.b	@r15,	r15	;
    32f0:	0f 12       	push	r15		;
    32f2:	30 12 a6 32 	push	#12966		;#0x32a6
    32f6:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    32fa:	19 12 22 00 	push	34(r9)		;
    32fe:	30 12 ba 32 	push	#12986		;#0x32ba
    3302:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    3306:	19 12 24 00 	push	36(r9)		;
    330a:	30 12 c9 32 	push	#13001		;#0x32c9
    330e:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    3312:	08 43       	clr	r8		;
    3314:	31 50 0c 00 	add	#12,	r1	;#0x000c
    3318:	0b 43       	clr	r11		;
    331a:	0a 48       	mov	r8,	r10	;
    331c:	0a 5a       	rla	r10		;
    331e:	0a 5a       	rla	r10		;
    3320:	0f 4a       	mov	r10,	r15	;
    3322:	0f 5b       	add	r11,	r15	;
    3324:	0f 5f       	rla	r15		;
    3326:	0f 59       	add	r9,	r15	;
    3328:	1f 12 02 00 	push	2(r15)		;
    332c:	30 12 de 32 	push	#13022		;#0x32de
    3330:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    3334:	21 52       	add	#4,	r1	;r2 As==10
    3336:	1b 53       	inc	r11		;
    3338:	2b 92       	cmp	#4,	r11	;r2 As==10
    333a:	f2 3b       	jl	$-26     	;abs 0x3320
    333c:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    3340:	b0 12 0a 15 	call	#5386		;#0x150a
    3344:	18 53       	inc	r8		;
    3346:	28 92       	cmp	#4,	r8	;r2 As==10
    3348:	e7 3b       	jl	$-48     	;abs 0x3318
    334a:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    334e:	b0 12 0a 15 	call	#5386		;#0x150a
    3352:	0f 43       	clr	r15		;
    3354:	38 41       	pop	r8		;
    3356:	39 41       	pop	r9		;
    3358:	3a 41       	pop	r10		;
    335a:	3b 41       	pop	r11		;
    335c:	30 41       	ret			

0000335e <initialize_channel_structure>:
    335e:	0d 4f       	mov	r15,	r13	;
    3360:	cf 43 00 00 	mov.b	#0,	0(r15)	;r3 As==00
    3364:	0e 43       	clr	r14		;
    3366:	0f 4e       	mov	r14,	r15	;
    3368:	0f 5f       	rla	r15		;
    336a:	0f 5d       	add	r13,	r15	;
    336c:	8f 43 02 00 	mov	#0,	2(r15)	;r3 As==00
    3370:	1e 53       	inc	r14		;
    3372:	3e 90 10 00 	cmp	#16,	r14	;#0x0010
    3376:	f7 3b       	jl	$-16     	;abs 0x3366
    3378:	8d 43 22 00 	mov	#0,	34(r13)	;r3 As==00
    337c:	8d 43 24 00 	mov	#0,	36(r13)	;r3 As==00
    3380:	0f 43       	clr	r15		;
    3382:	30 41       	ret			

00003384 <timer_a0_irq>:
    3384:	0f 12       	push	r15		;
    3386:	0e 12       	push	r14		;
    3388:	0d 12       	push	r13		;
    338a:	0c 12       	push	r12		;
    338c:	0b 12       	push	r11		;
    338e:	b2 50 00 09 	add	#2304,	&0x0172	;#0x0900
    3392:	72 01 
    3394:	5f 42 0e 02 	mov.b	&0x020e,r15	;0x020e
    3398:	7f 90 0a 00 	cmp.b	#10,	r15	;#0x000a
    339c:	b3 38       	jl	$+360    	;abs 0x3504
    339e:	c2 43 0e 02 	mov.b	#0,	&0x020e	;r3 As==00
    33a2:	1f 42 0c 02 	mov	&0x020c,r15	;0x020c
    33a6:	0e 4f       	mov	r15,	r14	;
    33a8:	3e f0 07 00 	and	#7,	r14	;#0x0007
    33ac:	82 4e 0a 02 	mov	r14,	&0x020a	;
    33b0:	1f 53       	inc	r15		;
    33b2:	82 4f 0c 02 	mov	r15,	&0x020c	;
    33b6:	5f 42 0c 02 	mov.b	&0x020c,r15	;0x020c
    33ba:	b0 12 ee 15 	call	#5614		;#0x15ee
    33be:	1e 42 0a 02 	mov	&0x020a,r14	;0x020a
    33c2:	0f 4e       	mov	r14,	r15	;
    33c4:	0f 5f       	rla	r15		;
    33c6:	0f 5f       	rla	r15		;
    33c8:	0f 5f       	rla	r15		;
    33ca:	0f 5f       	rla	r15		;
    33cc:	0f 5f       	rla	r15		;
    33ce:	0e 5e       	rla	r14		;
    33d0:	0f 5e       	add	r14,	r15	;
    33d2:	0f 5e       	add	r14,	r15	;
    33d4:	0f 5e       	add	r14,	r15	;
    33d6:	3f 50 6c 02 	add	#620,	r15	;#0x026c
    33da:	1e 42 40 01 	mov	&0x0140,r14	;0x0140
    33de:	b0 12 36 32 	call	#12854		;#0x3236
    33e2:	1e 42 0a 02 	mov	&0x020a,r14	;0x020a
    33e6:	0f 4e       	mov	r14,	r15	;
    33e8:	0f 5f       	rla	r15		;
    33ea:	0f 5f       	rla	r15		;
    33ec:	0f 5f       	rla	r15		;
    33ee:	0f 5f       	rla	r15		;
    33f0:	0f 5f       	rla	r15		;
    33f2:	0e 5e       	rla	r14		;
    33f4:	0f 5e       	add	r14,	r15	;
    33f6:	0f 5e       	add	r14,	r15	;
    33f8:	0f 5e       	add	r14,	r15	;
    33fa:	3f 50 9c 03 	add	#924,	r15	;#0x039c
    33fe:	1e 42 42 01 	mov	&0x0142,r14	;0x0142
    3402:	b0 12 36 32 	call	#12854		;#0x3236
    3406:	1e 42 0a 02 	mov	&0x020a,r14	;0x020a
    340a:	0f 4e       	mov	r14,	r15	;
    340c:	0f 5f       	rla	r15		;
    340e:	0f 5f       	rla	r15		;
    3410:	0f 5f       	rla	r15		;
    3412:	0f 5f       	rla	r15		;
    3414:	0f 5f       	rla	r15		;
    3416:	0e 5e       	rla	r14		;
    3418:	0f 5e       	add	r14,	r15	;
    341a:	0f 5e       	add	r14,	r15	;
    341c:	0f 5e       	add	r14,	r15	;
    341e:	3f 50 cc 04 	add	#1228,	r15	;#0x04cc
    3422:	1e 42 44 01 	mov	&0x0144,r14	;0x0144
    3426:	b0 12 36 32 	call	#12854		;#0x3236
    342a:	82 93 0a 02 	cmp	#0,	&0x020a	;r3 As==00
    342e:	63 24       	jz	$+200    	;abs 0x34f6
    3430:	3e 40 86 06 	mov	#1670,	r14	;#0x0686
    3434:	5f 42 0a 02 	mov.b	&0x020a,r15	;0x020a
    3438:	b0 12 04 2c 	call	#11268		;#0x2c04
    343c:	0f 93       	cmp	#0,	r15	;r3 As==00
    343e:	50 24       	jz	$+162    	;abs 0x34e0
    3440:	3b 40 11 02 	mov	#529,	r11	;#0x0211
    3444:	1f 42 0a 02 	mov	&0x020a,r15	;0x020a
    3448:	0f 5b       	add	r11,	r15	;
    344a:	cf 43 00 00 	mov.b	#0,	0(r15)	;r3 As==00
    344e:	5f 42 0a 02 	mov.b	&0x020a,r15	;0x020a
    3452:	7f 52       	add.b	#8,	r15	;r2 As==11
    3454:	3e 40 86 06 	mov	#1670,	r14	;#0x0686
    3458:	b0 12 04 2c 	call	#11268		;#0x2c04
    345c:	0f 93       	cmp	#0,	r15	;r3 As==00
    345e:	37 24       	jz	$+112    	;abs 0x34ce
    3460:	1f 42 0a 02 	mov	&0x020a,r15	;0x020a
    3464:	0f 5b       	add	r11,	r15	;
    3466:	cf 43 08 00 	mov.b	#0,	8(r15)	;r3 As==00
    346a:	5f 42 0a 02 	mov.b	&0x020a,r15	;0x020a
    346e:	7f 50 10 00 	add.b	#16,	r15	;#0x0010
    3472:	3e 40 86 06 	mov	#1670,	r14	;#0x0686
    3476:	b0 12 04 2c 	call	#11268		;#0x2c04
    347a:	0f 93       	cmp	#0,	r15	;r3 As==00
    347c:	1f 24       	jz	$+64     	;abs 0x34bc
    347e:	1f 42 0a 02 	mov	&0x020a,r15	;0x020a
    3482:	0f 5b       	add	r11,	r15	;
    3484:	cf 43 10 00 	mov.b	#0,	16(r15)	;r3 As==00
    3488:	3e 40 86 06 	mov	#1670,	r14	;#0x0686
    348c:	7f 40 18 00 	mov.b	#24,	r15	;#0x0018
    3490:	b0 12 04 2c 	call	#11268		;#0x2c04
    3494:	0f 93       	cmp	#0,	r15	;r3 As==00
    3496:	0b 24       	jz	$+24     	;abs 0x34ae
    3498:	d2 43 29 02 	mov.b	#1,	&0x0229	;r3 As==01
    349c:	3f 40 86 06 	mov	#1670,	r15	;#0x0686
    34a0:	b0 12 98 5a 	call	#23192		;#0x5a98
    34a4:	b0 12 cc 15 	call	#5580		;#0x15cc
    34a8:	5f 42 0e 02 	mov.b	&0x020e,r15	;0x020e
    34ac:	2b 3c       	jmp	$+88     	;abs 0x3504
    34ae:	1f 42 46 01 	mov	&0x0146,r15	;0x0146
    34b2:	8f 10       	swpb	r15		;
    34b4:	5f 53       	inc.b	r15		;
    34b6:	c2 4f 29 02 	mov.b	r15,	&0x0229	;
    34ba:	f0 3f       	jmp	$-30     	;abs 0x349c
    34bc:	1e 42 0a 02 	mov	&0x020a,r14	;0x020a
    34c0:	0e 5b       	add	r11,	r14	;
    34c2:	1f 42 44 01 	mov	&0x0144,r15	;0x0144
    34c6:	8f 10       	swpb	r15		;
    34c8:	ce 4f 10 00 	mov.b	r15,	16(r14)	;
    34cc:	dd 3f       	jmp	$-68     	;abs 0x3488
    34ce:	1e 42 0a 02 	mov	&0x020a,r14	;0x020a
    34d2:	0e 5b       	add	r11,	r14	;
    34d4:	1f 42 42 01 	mov	&0x0142,r15	;0x0142
    34d8:	8f 10       	swpb	r15		;
    34da:	ce 4f 08 00 	mov.b	r15,	8(r14)	;
    34de:	c5 3f       	jmp	$-116    	;abs 0x346a
    34e0:	3b 40 11 02 	mov	#529,	r11	;#0x0211
    34e4:	1e 42 0a 02 	mov	&0x020a,r14	;0x020a
    34e8:	0e 5b       	add	r11,	r14	;
    34ea:	1f 42 40 01 	mov	&0x0140,r15	;0x0140
    34ee:	8f 10       	swpb	r15		;
    34f0:	ce 4f 00 00 	mov.b	r15,	0(r14)	;
    34f4:	ac 3f       	jmp	$-166    	;abs 0x344e
    34f6:	1e 42 46 01 	mov	&0x0146,r14	;0x0146
    34fa:	3f 40 fc 05 	mov	#1532,	r15	;#0x05fc
    34fe:	b0 12 36 32 	call	#12854		;#0x3236
    3502:	96 3f       	jmp	$-210    	;abs 0x3430
    3504:	92 53 cc 07 	inc	&0x07cc		;
    3508:	5f 53       	inc.b	r15		;
    350a:	c2 4f 0e 02 	mov.b	r15,	&0x020e	;
    350e:	5f 42 10 02 	mov.b	&0x0210,r15	;0x0210
    3512:	b0 12 ce 16 	call	#5838		;#0x16ce
    3516:	3b 41       	pop	r11		;
    3518:	3c 41       	pop	r12		;
    351a:	3d 41       	pop	r13		;
    351c:	3e 41       	pop	r14		;
    351e:	3f 41       	pop	r15		;
    3520:	00 13       	reti			

00003522 <delay_1_25mS>:
    3522:	1f 93       	cmp	#1,	r15	;r3 As==01
    3524:	08 38       	jl	$+18     	;abs 0x3536
    3526:	a2 93 cc 07 	cmp	#2,	&0x07cc	;r3 As==10
    352a:	03 38       	jl	$+8      	;abs 0x3532
    352c:	3f 53       	add	#-1,	r15	;r3 As==11
    352e:	82 43 cc 07 	mov	#0,	&0x07cc	;r3 As==00
    3532:	0f 93       	cmp	#0,	r15	;r3 As==00
    3534:	f8 23       	jnz	$-14     	;abs 0x3526
    3536:	30 41       	ret			

00003538 <a2d_i_conversion>:
	...
    3540:	00 00 01 00 01 00 01 00 01 00 02 00 02 00 02 00     ................
    3550:	02 00 02 00 03 00 03 00 03 00 03 00 04 00 04 00     ................
    3560:	04 00 04 00 04 00 05 00 05 00 05 00 05 00 06 00     ................
    3570:	06 00 06 00 06 00 07 00 07 00 07 00 07 00 07 00     ................
    3580:	08 00 08 00 08 00 08 00 09 00 09 00 09 00 09 00     ................
    3590:	09 00 0a 00 0a 00 0a 00 0a 00 0b 00 0b 00 0b 00     ................
    35a0:	0b 00 0c 00 0c 00 0c 00 0c 00 0c 00 0d 00 0d 00     ................
    35b0:	0d 00 0d 00 0e 00 0e 00 0e 00 0e 00 0e 00 0f 00     ................
    35c0:	0f 00 0f 00 0f 00 10 00 10 00 10 00 10 00 11 00     ................
    35d0:	11 00 11 00 11 00 11 00 12 00 12 00 12 00 12 00     ................
    35e0:	13 00 13 00 13 00 13 00 13 00 14 00 14 00 14 00     ................
    35f0:	14 00 15 00 15 00 15 00 15 00 16 00 16 00 16 00     ................
    3600:	16 00 16 00 17 00 17 00 17 00 17 00 18 00 18 00     ................
    3610:	18 00 18 00 18 00 19 00 19 00 19 00 19 00 1a 00     ................
    3620:	1a 00 1a 00 1a 00 1b 00 1b 00 1b 00 1b 00 1b 00     ................
    3630:	1c 00 1c 00 1c 00 1c 00 1d 00 1d 00 1d 00 1d 00     ................
    3640:	1d 00 1e 00 1e 00 1e 00 1e 00 1f 00 1f 00 1f 00     ................
    3650:	1f 00 1f 00 20 00 20 00 20 00 20 00 21 00 21 00     .... . . . .!.!.
    3660:	21 00 21 00 22 00 22 00 22 00 22 00 22 00 23 00     !.!.".".".".".#.
    3670:	23 00 23 00 23 00 24 00 24 00 24 00 24 00 24 00     #.#.#.$.$.$.$.$.
    3680:	25 00 25 00 25 00 25 00 26 00 26 00 26 00 26 00     %.%.%.%.&.&.&.&.
    3690:	27 00 27 00 27 00 27 00 27 00 28 00 28 00 28 00     '.'.'.'.'.(.(.(.
    36a0:	28 00 29 00 29 00 29 00 29 00 29 00 2a 00 2a 00     (.).).).).).*.*.
    36b0:	2a 00 2a 00 2b 00 2b 00 2b 00 2b 00 2c 00 2c 00     *.*.+.+.+.+.,.,.
    36c0:	2c 00 2c 00 2c 00 2d 00 2d 00 2d 00 2d 00 2e 00     ,.,.,.-.-.-.-...
    36d0:	2e 00 2e 00 2e 00 2e 00 2f 00 2f 00 2f 00 2f 00     .......././././.
    36e0:	30 00 30 00 30 00 30 00 31 00 31 00 31 00 31 00     0.0.0.0.1.1.1.1.
    36f0:	31 00 32 00 32 00 32 00 32 00 33 00 33 00 33 00     1.2.2.2.2.3.3.3.
    3700:	33 00 33 00 34 00 34 00 34 00 34 00 35 00 35 00     3.3.4.4.4.4.5.5.
    3710:	35 00 35 00 36 00 36 00 36 00 36 00 36 00 37 00     5.5.6.6.6.6.6.7.
    3720:	37 00 37 00 37 00 38 00 38 00 38 00 38 00 38 00     7.7.7.8.8.8.8.8.
    3730:	39 00 39 00 39 00 39 00 3a 00 3a 00 3a 00 3a 00     9.9.9.9.:.:.:.:.
    3740:	3a 00 3b 00 3b 00 3b 00 3b 00 3c 00 3c 00 3c 00     :.;.;.;.;.<.<.<.
    3750:	3c 00 3d 00 3d 00 3d 00 3d 00 3d 00 3e 00 3e 00     <.=.=.=.=.=.>.>.
    3760:	3e 00 3e 00 3f 00 3f 00 3f 00 3f 00 3f 00 40 00     >.>.?.?.?.?.?.@.
    3770:	40 00 40 00 40 00 41 00 41 00 41 00 41 00 42 00     @.@.@.A.A.A.A.B.
    3780:	42 00 42 00 42 00 42 00 43 00 43 00 43 00 43 00     B.B.B.B.C.C.C.C.
    3790:	44 00 44 00 44 00 44 00 44 00 45 00 45 00 45 00     D.D.D.D.D.E.E.E.
    37a0:	45 00 46 00 46 00 46 00 46 00 47 00 47 00 47 00     E.F.F.F.F.G.G.G.
    37b0:	47 00 47 00 48 00 48 00 48 00 48 00 49 00 49 00     G.G.H.H.H.H.I.I.
    37c0:	49 00 49 00 49 00 4a 00 4a 00 4a 00 4a 00 4b 00     I.I.I.J.J.J.J.K.
    37d0:	4b 00 4b 00 4b 00 4c 00 4c 00 4c 00 4c 00 4c 00     K.K.K.L.L.L.L.L.
    37e0:	4d 00 4d 00 4d 00 4d 00 4e 00 4e 00 4e 00 4e 00     M.M.M.M.N.N.N.N.
    37f0:	4e 00 4f 00 4f 00 4f 00 4f 00 50 00 50 00 50 00     N.O.O.O.O.P.P.P.
    3800:	50 00 51 00 51 00 51 00 51 00 51 00 52 00 52 00     P.Q.Q.Q.Q.Q.R.R.
    3810:	52 00 52 00 53 00 53 00 53 00 53 00 53 00 54 00     R.R.S.S.S.S.S.T.
    3820:	54 00 54 00 54 00 55 00 55 00 55 00 55 00 55 00     T.T.T.U.U.U.U.U.
    3830:	56 00 56 00 56 00 56 00 57 00 57 00 57 00 57 00     V.V.V.V.W.W.W.W.
    3840:	58 00 58 00 58 00 58 00 58 00 59 00 59 00 59 00     X.X.X.X.X.Y.Y.Y.
    3850:	59 00 5a 00 5a 00 5a 00 5a 00 5a 00 5b 00 5b 00     Y.Z.Z.Z.Z.Z.[.[.
    3860:	5b 00 5b 00 5c 00 5c 00 5c 00 5c 00 5d 00 5d 00     [.[.\.\.\.\.].].
    3870:	5d 00 5d 00 5d 00 5e 00 5e 00 5e 00 5e 00 5f 00     ].].].^.^.^.^._.
    3880:	5f 00 5f 00 5f 00 5f 00 60 00 60 00 60 00 60 00     _._._._.`.`.`.`.
    3890:	61 00 61 00 61 00 61 00 62 00 62 00 62 00 62 00     a.a.a.a.b.b.b.b.
    38a0:	62 00 63 00 63 00 63 00 63 00 64 00 64 00 64 00     b.c.c.c.c.d.d.d.
    38b0:	64 00 64 00 65 00 65 00 65 00 65 00 66 00 66 00     d.d.e.e.e.e.f.f.
    38c0:	66 00 66 00 67 00 67 00 67 00 67 00 67 00 68 00     f.f.g.g.g.g.g.h.
    38d0:	68 00 68 00 68 00 69 00 69 00 69 00 69 00 69 00     h.h.h.i.i.i.i.i.
    38e0:	6a 00 6a 00 6a 00 6a 00 6b 00 6b 00 6b 00 6b 00     j.j.j.j.k.k.k.k.
    38f0:	6c 00 6c 00 6c 00 6c 00 6c 00 6d 00 6d 00 6d 00     l.l.l.l.l.m.m.m.
    3900:	6d 00 6e 00 6e 00 6e 00 6e 00 6e 00 6f 00 6f 00     m.n.n.n.n.n.o.o.
    3910:	6f 00 6f 00 70 00 70 00 70 00 70 00 70 00 71 00     o.o.p.p.p.p.p.q.
    3920:	71 00 71 00 71 00 72 00 72 00 72 00 72 00 73 00     q.q.q.r.r.r.r.s.
    3930:	73 00 73 00 73 00 73 00 74 00 74 00 74 00 74 00     s.s.s.s.t.t.t.t.
    3940:	75 00 75 00 75 00 75 00 75 00 76 00 76 00 76 00     u.u.u.u.u.v.v.v.
    3950:	76 00 77 00 77 00 77 00 77 00 78 00 78 00 78 00     v.w.w.w.w.x.x.x.
    3960:	78 00 78 00 79 00 79 00 79 00 79 00 7a 00 7a 00     x.x.y.y.y.y.z.z.
    3970:	7a 00 7a 00 7a 00 7b 00 7b 00 7b 00 7b 00 7c 00     z.z.z.{.{.{.{.|.
    3980:	7c 00 7c 00 7c 00 7d 00 7d 00 7d 00 7d 00 7d 00     |.|.|.}.}.}.}.}.
    3990:	7e 00 7e 00 7e 00 7e 00 7f 00 7f 00 7f 00 7f 00     ~.~.~.~.........
    39a0:	7f 00 80 00 80 00 80 00 80 00 81 00 81 00 81 00     ................
    39b0:	81 00 82 00 82 00 82 00 82 00 82 00 83 00 83 00     ................
    39c0:	83 00 83 00 84 00 84 00 84 00 84 00 84 00 85 00     ................
    39d0:	85 00 85 00 85 00 86 00 86 00 86 00 86 00 87 00     ................
    39e0:	87 00 87 00 87 00 87 00 88 00 88 00 88 00 88 00     ................
    39f0:	89 00 89 00 89 00 89 00 89 00 8a 00 8a 00 8a 00     ................
    3a00:	8a 00 8b 00 8b 00 8b 00 8b 00 8b 00 8c 00 8c 00     ................
    3a10:	8c 00 8c 00 8d 00 8d 00 8d 00 8d 00 8e 00 8e 00     ................
    3a20:	8e 00 8e 00 8e 00 8f 00 8f 00 8f 00 8f 00 90 00     ................
    3a30:	90 00 90 00 90 00 90 00 91 00 91 00 91 00 91 00     ................
    3a40:	92 00 92 00 92 00 92 00 93 00 93 00 93 00 93 00     ................
    3a50:	93 00 94 00 94 00 94 00 94 00 95 00 95 00 95 00     ................
    3a60:	95 00 95 00 96 00 96 00 96 00 96 00 97 00 97 00     ................
    3a70:	97 00 97 00 98 00 98 00 98 00 98 00 98 00 99 00     ................
    3a80:	99 00 99 00 99 00 9a 00 9a 00 9a 00 9a 00 9a 00     ................
    3a90:	9b 00 9b 00 9b 00 9b 00 9c 00 9c 00 9c 00 9c 00     ................
    3aa0:	9d 00 9d 00 9d 00 9d 00 9d 00 9e 00 9e 00 9e 00     ................
    3ab0:	9e 00 9f 00 9f 00 9f 00 9f 00 9f 00 a0 00 a0 00     ................
    3ac0:	a0 00 a0 00 a1 00 a1 00 a1 00 a1 00 a2 00 a2 00     ................
    3ad0:	a2 00 a2 00 a2 00 a3 00 a3 00 a3 00 a3 00 a4 00     ................
    3ae0:	a4 00 a4 00 a4 00 a4 00 a5 00 a5 00 a5 00 a5 00     ................
    3af0:	a6 00 a6 00 a6 00 a6 00 a6 00 a7 00 a7 00 a7 00     ................
    3b00:	a7 00 a8 00 a8 00 a8 00 a8 00 a9 00 a9 00 a9 00     ................
    3b10:	a9 00 a9 00 aa 00 aa 00 aa 00 aa 00 ab 00 ab 00     ................
    3b20:	ab 00 ab 00 ab 00 ac 00 ac 00 ac 00 ac 00 ad 00     ................
    3b30:	ad 00 ad 00 ad 00 ae 00 ae 00 ae 00 ae 00 ae 00     ................
    3b40:	af 00 af 00 af 00 af 00 b0 00 b0 00 b0 00 b0 00     ................
    3b50:	b0 00 b1 00 b1 00 b1 00 b1 00 b2 00 b2 00 b2 00     ................
    3b60:	b2 00 b3 00 b3 00 b3 00 b3 00 b3 00 b4 00 b4 00     ................
    3b70:	b4 00 b4 00 b5 00 b5 00 b5 00 b5 00 b5 00 b6 00     ................
    3b80:	b6 00 b6 00 b6 00 b7 00 b7 00 b7 00 b7 00 b8 00     ................
    3b90:	b8 00 b8 00 b8 00 b8 00 b9 00 b9 00 b9 00 b9 00     ................
    3ba0:	ba 00 ba 00 ba 00 ba 00 ba 00 bb 00 bb 00 bb 00     ................
    3bb0:	bb 00 bc 00 bc 00 bc 00 bc 00 bd 00 bd 00 bd 00     ................
    3bc0:	bd 00 bd 00 be 00 be 00 be 00 be 00 bf 00 bf 00     ................
    3bd0:	bf 00 bf 00 bf 00 c0 00 c0 00 c0 00 c0 00 c1 00     ................
    3be0:	c1 00 c1 00 c1 00 c1 00 c2 00 c2 00 c2 00 c2 00     ................
    3bf0:	c3 00 c3 00 c3 00 c3 00 c4 00 c4 00 c4 00 c4 00     ................
    3c00:	c4 00 c5 00 c5 00 c5 00 c5 00 c6 00 c6 00 c6 00     ................
    3c10:	c6 00 c6 00 c7 00 c7 00 c7 00 c7 00 c8 00 c8 00     ................
    3c20:	c8 00 c8 00 c9 00 c9 00 c9 00 c9 00 c9 00 ca 00     ................
    3c30:	ca 00 ca 00 ca 00 cb 00 cb 00 cb 00 cb 00 cb 00     ................
    3c40:	cc 00 cc 00 cc 00 cc 00 cd 00 cd 00 cd 00 cd 00     ................
    3c50:	ce 00 ce 00 ce 00 ce 00 ce 00 cf 00 cf 00 cf 00     ................
    3c60:	cf 00 d0 00 d0 00 d0 00 d0 00 d0 00 d1 00 d1 00     ................
    3c70:	d1 00 d1 00 d2 00 d2 00 d2 00 d2 00 d3 00 d3 00     ................
    3c80:	d3 00 d3 00 d3 00 d4 00 d4 00 d4 00 d4 00 d5 00     ................
    3c90:	d5 00 d5 00 d5 00 d5 00 d6 00 d6 00 d6 00 d6 00     ................
    3ca0:	d7 00 d7 00 d7 00 d7 00 d8 00 d8 00 d8 00 d8 00     ................
    3cb0:	d8 00 d9 00 d9 00 d9 00 d9 00 da 00 da 00 da 00     ................
    3cc0:	da 00 da 00 db 00 db 00 db 00 db 00 dc 00 dc 00     ................
    3cd0:	dc 00 dc 00 dc 00 dd 00 dd 00 dd 00 dd 00 de 00     ................
    3ce0:	de 00 de 00 de 00 df 00 df 00 df 00 df 00 df 00     ................
    3cf0:	e0 00 e0 00 e0 00 e0 00 e1 00 e1 00 e1 00 e1 00     ................
    3d00:	e1 00 e2 00 e2 00 e2 00 e2 00 e3 00 e3 00 e3 00     ................
    3d10:	e3 00 e4 00 e4 00 e4 00 e4 00 e4 00 e5 00 e5 00     ................
    3d20:	e5 00 e5 00 e6 00 e6 00 e6 00 e6 00 e6 00 e7 00     ................
    3d30:	e7 00 e7 00 e7 00 e8 00 e8 00 e8 00 e8 00 e9 00     ................
    3d40:	e9 00 e9 00 e9 00 e9 00 ea 00 ea 00 ea 00 ea 00     ................
    3d50:	eb 00 eb 00 eb 00 eb 00 eb 00 ec 00 ec 00 ec 00     ................
    3d60:	ec 00 ed 00 ed 00 ed 00 ed 00 ee 00 ee 00 ee 00     ................
    3d70:	ee 00 ee 00 ef 00 ef 00 ef 00 ef 00 f0 00 f0 00     ................
    3d80:	f0 00 f0 00 f0 00 f1 00 f1 00 f1 00 f1 00 f2 00     ................
    3d90:	f2 00 f2 00 f2 00 f3 00 f3 00 f3 00 f3 00 f3 00     ................
    3da0:	f4 00 f4 00 f4 00 f4 00 f5 00 f5 00 f5 00 f5 00     ................
    3db0:	f5 00 f6 00 f6 00 f6 00 f6 00 f7 00 f7 00 f7 00     ................
    3dc0:	f7 00 f7 00 f8 00 f8 00 f8 00 f8 00 f9 00 f9 00     ................
    3dd0:	f9 00 f9 00 fa 00 fa 00 fa 00 fa 00 fa 00 fb 00     ................
    3de0:	fb 00 fb 00 fb 00 fc 00 fc 00 fc 00 fc 00 fc 00     ................
    3df0:	fd 00 fd 00 fd 00 fd 00 fe 00 fe 00 fe 00 fe 00     ................
    3e00:	ff 00 ff 00 ff 00 ff 00 ff 00 00 01 00 01 00 01     ................
    3e10:	00 01 01 01 01 01 01 01 01 01 01 01 02 01 02 01     ................
    3e20:	02 01 02 01 03 01 03 01 03 01 03 01 04 01 04 01     ................
    3e30:	04 01 04 01 04 01 05 01 05 01 05 01 05 01 06 01     ................
    3e40:	06 01 06 01 06 01 06 01 07 01 07 01 07 01 07 01     ................
    3e50:	08 01 08 01 08 01 08 01 09 01 09 01 09 01 09 01     ................
    3e60:	09 01 0a 01 0a 01 0a 01 0a 01 0b 01 0b 01 0b 01     ................
    3e70:	0b 01 0b 01 0c 01 0c 01 0c 01 0c 01 0d 01 0d 01     ................
    3e80:	0d 01 0d 01 0e 01 0e 01 0e 01 0e 01 0e 01 0f 01     ................
    3e90:	0f 01 0f 01 0f 01 10 01 10 01 10 01 10 01 10 01     ................
    3ea0:	11 01 11 01 11 01 11 01 12 01 12 01 12 01 12 01     ................
    3eb0:	12 01 13 01 13 01 13 01 13 01 14 01 14 01 14 01     ................
    3ec0:	14 01 15 01 15 01 15 01 15 01 15 01 16 01 16 01     ................
    3ed0:	16 01 16 01 17 01 17 01 17 01 17 01 17 01 18 01     ................
    3ee0:	18 01 18 01 18 01 19 01 19 01 19 01 19 01 1a 01     ................
    3ef0:	1a 01 1a 01 1a 01 1a 01 1b 01 1b 01 1b 01 1b 01     ................
    3f00:	1c 01 1c 01 1c 01 1c 01 1c 01 1d 01 1d 01 1d 01     ................
    3f10:	1d 01 1e 01 1e 01 1e 01 1e 01 1f 01 1f 01 1f 01     ................
    3f20:	1f 01 1f 01 20 01 20 01 20 01 20 01 21 01 21 01     .... . . . .!.!.
    3f30:	21 01 21 01 21 01 22 01 22 01 22 01 22 01 23 01     !.!.!.".".".".#.
    3f40:	23 01 23 01 23 01 24 01 24 01 24 01 24 01 24 01     #.#.#.$.$.$.$.$.
    3f50:	25 01 25 01 25 01 25 01 26 01 26 01 26 01 26 01     %.%.%.%.&.&.&.&.
    3f60:	26 01 27 01 27 01 27 01 27 01 28 01 28 01 28 01     &.'.'.'.'.(.(.(.
    3f70:	28 01 29 01 29 01 29 01 29 01 29 01 2a 01 2a 01     (.).).).).).*.*.
    3f80:	2a 01 2a 01 2b 01 2b 01 2b 01 2b 01 2b 01 2c 01     *.*.+.+.+.+.+.,.
    3f90:	2c 01 2c 01 2c 01 2d 01 2d 01 2d 01 2d 01 2e 01     ,.,.,.-.-.-.-...
    3fa0:	2e 01 2e 01 2e 01 2e 01 2f 01 2f 01 2f 01 2f 01     .......././././.
    3fb0:	30 01 30 01 30 01 30 01 30 01 31 01 31 01 31 01     0.0.0.0.0.1.1.1.
    3fc0:	31 01 32 01 32 01 32 01 32 01 32 01 33 01 33 01     1.2.2.2.2.2.3.3.
    3fd0:	33 01 33 01 34 01 34 01 34 01 34 01 35 01 35 01     3.3.4.4.4.4.5.5.
    3fe0:	35 01 35 01 35 01 36 01 36 01 36 01 36 01 37 01     5.5.5.6.6.6.6.7.
    3ff0:	37 01 37 01 37 01 37 01 38 01 38 01 38 01 38 01     7.7.7.7.8.8.8.8.
    4000:	39 01 39 01 39 01 39 01 3a 01 3a 01 3a 01 3a 01     9.9.9.9.:.:.:.:.
    4010:	3a 01 3b 01 3b 01 3b 01 3b 01 3c 01 3c 01 3c 01     :.;.;.;.;.<.<.<.
    4020:	3c 01 3c 01 3d 01 3d 01 3d 01 3d 01 3e 01 3e 01     <.<.=.=.=.=.>.>.
    4030:	3e 01 3e 01 3f 01 3f 01 3f 01 3f 01 3f 01 40 01     >.>.?.?.?.?.?.@.
    4040:	40 01 40 01 40 01 41 01 41 01 41 01 41 01 41 01     @.@.@.A.A.A.A.A.
    4050:	42 01 42 01 42 01 42 01 43 01 43 01 43 01 43 01     B.B.B.B.C.C.C.C.
    4060:	44 01 44 01 44 01 44 01 44 01 45 01 45 01 45 01     D.D.D.D.D.E.E.E.
    4070:	45 01 46 01 46 01 46 01 46 01 46 01 47 01 47 01     E.F.F.F.F.F.G.G.
    4080:	47 01 47 01 48 01 48 01 48 01 48 01 49 01 49 01     G.G.H.H.H.H.I.I.
    4090:	49 01 49 01 49 01 4a 01 4a 01 4a 01 4a 01 4b 01     I.I.I.J.J.J.J.K.
    40a0:	4b 01 4b 01 4b 01 4b 01 4c 01 4c 01 4c 01 4c 01     K.K.K.K.L.L.L.L.
    40b0:	4d 01 4d 01 4d 01 4d 01 4d 01 4e 01 4e 01 4e 01     M.M.M.M.M.N.N.N.
    40c0:	4e 01 4f 01 4f 01 4f 01 4f 01 50 01 50 01 50 01     N.O.O.O.O.P.P.P.
    40d0:	50 01 50 01 51 01 51 01 51 01 51 01 52 01 52 01     P.P.Q.Q.Q.Q.R.R.
    40e0:	52 01 52 01 52 01 53 01 53 01 53 01 53 01 54 01     R.R.R.S.S.S.S.T.
    40f0:	54 01 54 01 54 01 55 01 55 01 55 01 55 01 55 01     T.T.T.U.U.U.U.U.
    4100:	56 01 56 01 56 01 56 01 57 01 57 01 57 01 57 01     V.V.V.V.W.W.W.W.
    4110:	57 01 58 01 58 01 58 01 58 01 59 01 59 01 59 01     W.X.X.X.X.Y.Y.Y.
    4120:	59 01 5a 01 5a 01 5a 01 5a 01 5a 01 5b 01 5b 01     Y.Z.Z.Z.Z.Z.[.[.
    4130:	5b 01 5b 01 5c 01 5c 01 5c 01 5c 01 5c 01 5d 01     [.[.\.\.\.\.\.].
    4140:	5d 01 5d 01 5d 01 5e 01 5e 01 5e 01 5e 01 5f 01     ].].].^.^.^.^._.
    4150:	5f 01 5f 01 5f 01 5f 01 60 01 60 01 60 01 60 01     _._._._.`.`.`.`.
    4160:	61 01 61 01 61 01 61 01 61 01 62 01 62 01 62 01     a.a.a.a.a.b.b.b.
    4170:	62 01 63 01 63 01 63 01 63 01 64 01 64 01 64 01     b.c.c.c.c.d.d.d.
    4180:	64 01 64 01 65 01 65 01 65 01 65 01 66 01 66 01     d.d.e.e.e.e.f.f.
    4190:	66 01 66 01 66 01 67 01 67 01 67 01 67 01 68 01     f.f.f.g.g.g.g.h.
    41a0:	68 01 68 01 68 01 68 01 69 01 69 01 69 01 69 01     h.h.h.h.i.i.i.i.
    41b0:	6a 01 6a 01 6a 01 6a 01 6b 01 6b 01 6b 01 6b 01     j.j.j.j.k.k.k.k.
    41c0:	6b 01 6c 01 6c 01 6c 01 6c 01 6d 01 6d 01 6d 01     k.l.l.l.l.m.m.m.
    41d0:	6d 01 6d 01 6e 01 6e 01 6e 01 6e 01 6f 01 6f 01     m.m.n.n.n.n.o.o.
    41e0:	6f 01 6f 01 70 01 70 01 70 01 70 01 70 01 71 01     o.o.p.p.p.p.p.q.
    41f0:	71 01 71 01 71 01 72 01 72 01 72 01 72 01 72 01     q.q.q.r.r.r.r.r.
    4200:	73 01 73 01 73 01 73 01 74 01 74 01 74 01 74 01     s.s.s.s.t.t.t.t.
    4210:	75 01 75 01 75 01 75 01 75 01 76 01 76 01 76 01     u.u.u.u.u.v.v.v.
    4220:	76 01 77 01 77 01 77 01 77 01 77 01 78 01 78 01     v.w.w.w.w.w.x.x.
    4230:	78 01 78 01 79 01 79 01 79 01 79 01 7a 01 7a 01     x.x.y.y.y.y.z.z.
    4240:	7a 01 7a 01 7a 01 7b 01 7b 01 7b 01 7b 01 7c 01     z.z.z.{.{.{.{.|.
    4250:	7c 01 7c 01 7c 01 7c 01 7d 01 7d 01 7d 01 7d 01     |.|.|.|.}.}.}.}.
    4260:	7e 01 7e 01 7e 01 7e 01 7f 01 7f 01 7f 01 7f 01     ~.~.~.~.........
    4270:	7f 01 80 01 80 01 80 01 80 01 81 01 81 01 81 01     ................
    4280:	81 01 81 01 82 01 82 01 82 01 82 01 83 01 83 01     ................
    4290:	83 01 83 01 83 01 84 01 84 01 84 01 84 01 85 01     ................
    42a0:	85 01 85 01 85 01 86 01 86 01 86 01 86 01 86 01     ................
    42b0:	87 01 87 01 87 01 87 01 88 01 88 01 88 01 88 01     ................
    42c0:	88 01 89 01 89 01 89 01 89 01 8a 01 8a 01 8a 01     ................
    42d0:	8a 01 8b 01 8b 01 8b 01 8b 01 8b 01 8c 01 8c 01     ................
    42e0:	8c 01 8c 01 8d 01 8d 01 8d 01 8d 01 8d 01 8e 01     ................
    42f0:	8e 01 8e 01 8e 01 8f 01 8f 01 8f 01 8f 01 90 01     ................
    4300:	90 01 90 01 90 01 90 01 91 01 91 01 91 01 91 01     ................
    4310:	92 01 92 01 92 01 92 01 92 01 93 01 93 01 93 01     ................
    4320:	93 01 94 01 94 01 94 01 94 01 95 01 95 01 95 01     ................
    4330:	95 01 95 01 96 01 96 01 96 01 96 01 97 01 97 01     ................
    4340:	97 01 97 01 97 01 98 01 98 01 98 01 98 01 99 01     ................
    4350:	99 01 99 01 99 01 9a 01 9a 01 9a 01 9a 01 9a 01     ................
    4360:	9b 01 9b 01 9b 01 9b 01 9c 01 9c 01 9c 01 9c 01     ................
    4370:	9c 01 9d 01 9d 01 9d 01 9d 01 9e 01 9e 01 9e 01     ................
    4380:	9e 01 9e 01 9f 01 9f 01 9f 01 9f 01 a0 01 a0 01     ................
    4390:	a0 01 a0 01 a1 01 a1 01 a1 01 a1 01 a1 01 a2 01     ................
    43a0:	a2 01 a2 01 a2 01 a3 01 a3 01 a3 01 a3 01 a3 01     ................
    43b0:	a4 01 a4 01 a4 01 a4 01 a5 01 a5 01 a5 01 a5 01     ................
    43c0:	a6 01 a6 01 a6 01 a6 01 a6 01 a7 01 a7 01 a7 01     ................
    43d0:	a7 01 a8 01 a8 01 a8 01 a8 01 a8 01 a9 01 a9 01     ................
    43e0:	a9 01 a9 01 aa 01 aa 01 aa 01 aa 01 ab 01 ab 01     ................
    43f0:	ab 01 ab 01 ab 01 ac 01 ac 01 ac 01 ac 01 ad 01     ................
    4400:	ad 01 ad 01 ad 01 ad 01 ae 01 ae 01 ae 01 ae 01     ................
    4410:	af 01 af 01 af 01 af 01 b0 01 b0 01 b0 01 b0 01     ................
    4420:	b0 01 b1 01 b1 01 b1 01 b1 01 b2 01 b2 01 b2 01     ................
    4430:	b2 01 b2 01 b3 01 b3 01 b3 01 b3 01 b4 01 b4 01     ................
    4440:	b4 01 b4 01 b5 01 b5 01 b5 01 b5 01 b5 01 b6 01     ................
    4450:	b6 01 b6 01 b6 01 b7 01 b7 01 b7 01 b7 01 b7 01     ................
    4460:	b8 01 b8 01 b8 01 b8 01 b9 01 b9 01 b9 01 b9 01     ................
    4470:	b9 01 ba 01 ba 01 ba 01 ba 01 bb 01 bb 01 bb 01     ................
    4480:	bb 01 bc 01 bc 01 bc 01 bc 01 bc 01 bd 01 bd 01     ................
    4490:	bd 01 bd 01 be 01 be 01 be 01 be 01 be 01 bf 01     ................
    44a0:	bf 01 bf 01 bf 01 c0 01 c0 01 c0 01 c0 01 c1 01     ................
    44b0:	c1 01 c1 01 c1 01 c1 01 c2 01 c2 01 c2 01 c2 01     ................
    44c0:	c3 01 c3 01 c3 01 c3 01 c3 01 c4 01 c4 01 c4 01     ................
    44d0:	c4 01 c5 01 c5 01 c5 01 c5 01 c6 01 c6 01 c6 01     ................
    44e0:	c6 01 c6 01 c7 01 c7 01 c7 01 c7 01 c8 01 c8 01     ................
    44f0:	c8 01 c8 01 c8 01 c9 01 c9 01 c9 01 c9 01 ca 01     ................
    4500:	ca 01 ca 01 ca 01 cb 01 cb 01 cb 01 cb 01 cb 01     ................
    4510:	cc 01 cc 01 cc 01 cc 01 cd 01 cd 01 cd 01 cd 01     ................
    4520:	cd 01 ce 01 ce 01 ce 01 ce 01 cf 01 cf 01 cf 01     ................
    4530:	cf 01 d0 01 d0 01 d0 01 d0 01 d0 01 d1 01 d1 01     ................
    4540:	d1 01 d1 01 d2 01 d2 01 d2 01 d2 01 d2 01 d3 01     ................
    4550:	d3 01 d3 01 d3 01 d4 01 d4 01 d4 01 d4 01 d4 01     ................
    4560:	d5 01 d5 01 d5 01 d5 01 d6 01 d6 01 d6 01 d6 01     ................
    4570:	d7 01 d7 01 d7 01 d7 01 d7 01 d8 01 d8 01 d8 01     ................
    4580:	d8 01 d9 01 d9 01 d9 01 d9 01 d9 01 da 01 da 01     ................
    4590:	da 01 da 01 db 01 db 01 db 01 db 01 dc 01 dc 01     ................
    45a0:	dc 01 dc 01 dc 01 dd 01 dd 01 dd 01 dd 01 de 01     ................
    45b0:	de 01 de 01 de 01 de 01 df 01 df 01 df 01 df 01     ................
    45c0:	e0 01 e0 01 e0 01 e0 01 e1 01 e1 01 e1 01 e1 01     ................
    45d0:	e1 01 e2 01 e2 01 e2 01 e2 01 e3 01 e3 01 e3 01     ................
    45e0:	e3 01 e3 01 e4 01 e4 01 e4 01 e4 01 e5 01 e5 01     ................
    45f0:	e5 01 e5 01 e6 01 e6 01 e6 01 e6 01 e6 01 e7 01     ................
    4600:	e7 01 e7 01 e7 01 e8 01 e8 01 e8 01 e8 01 e8 01     ................
    4610:	e9 01 e9 01 e9 01 e9 01 ea 01 ea 01 ea 01 ea 01     ................
    4620:	eb 01 eb 01 eb 01 eb 01 eb 01 ec 01 ec 01 ec 01     ................
    4630:	ec 01 ed 01 ed 01 ed 01 ed 01 ed 01 ee 01 ee 01     ................
    4640:	ee 01 ee 01 ef 01 ef 01 ef 01 ef 01 ef 01 f0 01     ................
    4650:	f0 01 f0 01 f0 01 f1 01 f1 01 f1 01 f1 01 f2 01     ................
    4660:	f2 01 f2 01 f2 01 f2 01 f3 01 f3 01 f3 01 f3 01     ................
    4670:	f4 01 f4 01 f4 01 f4 01 f4 01 f5 01 f5 01 f5 01     ................
    4680:	f5 01 f6 01 f6 01 f6 01 f6 01 f7 01 f7 01 f7 01     ................
    4690:	f7 01 f7 01 f8 01 f8 01 f8 01 f8 01 f9 01 f9 01     ................
    46a0:	f9 01 f9 01 f9 01 fa 01 fa 01 fa 01 fa 01 fb 01     ................
    46b0:	fb 01 fb 01 fb 01 fc 01 fc 01 fc 01 fc 01 fc 01     ................
    46c0:	fd 01 fd 01 fd 01 fd 01 fe 01 fe 01 fe 01 fe 01     ................
    46d0:	fe 01 ff 01 ff 01 ff 01 ff 01 00 02 00 02 00 02     ................
    46e0:	00 02 01 02 01 02 01 02 01 02 01 02 02 02 02 02     ................
    46f0:	02 02 02 02 03 02 03 02 03 02 03 02 03 02 04 02     ................
    4700:	04 02 04 02 04 02 05 02 05 02 05 02 05 02 06 02     ................
    4710:	06 02 06 02 06 02 06 02 07 02 07 02 07 02 07 02     ................
    4720:	08 02 08 02 08 02 08 02 08 02 09 02 09 02 09 02     ................
    4730:	09 02 0a 02 0a 02 0a 02 0a 02 0a 02 0b 02 0b 02     ................
    4740:	0b 02 0b 02 0c 02 0c 02 0c 02 0c 02 0d 02 0d 02     ................
    4750:	0d 02 0d 02 0d 02 0e 02 0e 02 0e 02 0e 02 0f 02     ................
    4760:	0f 02 0f 02 0f 02 0f 02 10 02 10 02 10 02 10 02     ................
    4770:	11 02 11 02 11 02 11 02 12 02 12 02 12 02 12 02     ................
    4780:	12 02 13 02 13 02 13 02 13 02 14 02 14 02 14 02     ................
    4790:	14 02 14 02 15 02 15 02 15 02 15 02 16 02 16 02     ................
    47a0:	16 02 16 02 17 02 17 02 17 02 17 02 17 02 18 02     ................
    47b0:	18 02 18 02 18 02 19 02 19 02 19 02 19 02 19 02     ................
    47c0:	1a 02 1a 02 1a 02 1a 02 1b 02 1b 02 1b 02 1b 02     ................
    47d0:	1c 02 1c 02 1c 02 1c 02 1c 02 1d 02 1d 02 1d 02     ................
    47e0:	1d 02 1e 02 1e 02 1e 02 1e 02 1e 02 1f 02 1f 02     ................
    47f0:	1f 02 1f 02 20 02 20 02 20 02 20 02 21 02 21 02     .... . . . .!.!.
    4800:	21 02 21 02 21 02 22 02 22 02 22 02 22 02 23 02     !.!.!.".".".".#.
    4810:	23 02 23 02 23 02 23 02 24 02 24 02 24 02 24 02     #.#.#.#.$.$.$.$.
    4820:	25 02 25 02 25 02 25 02 25 02 26 02 26 02 26 02     %.%.%.%.%.&.&.&.
    4830:	26 02 27 02 27 02 27 02 27 02 28 02 28 02 28 02     &.'.'.'.'.(.(.(.
    4840:	28 02 28 02 29 02 29 02 29 02 29 02 2a 02 2a 02     (.(.).).).).*.*.
    4850:	2a 02 2a 02 2a 02 2b 02 2b 02 2b 02 2b 02 2c 02     *.*.*.+.+.+.+.,.
    4860:	2c 02 2c 02 2c 02 2d 02 2d 02 2d 02 2d 02 2d 02     ,.,.,.-.-.-.-.-.
    4870:	2e 02 2e 02 2e 02 2e 02 2f 02 2f 02 2f 02 2f 02     .......././././.
    4880:	2f 02 30 02 30 02 30 02 30 02 31 02 31 02 31 02     /.0.0.0.0.1.1.1.
    4890:	31 02 32 02 32 02 32 02 32 02 32 02 33 02 33 02     1.2.2.2.2.2.3.3.
    48a0:	33 02 33 02 34 02 34 02 34 02 34 02 34 02 35 02     3.3.4.4.4.4.4.5.
    48b0:	35 02 35 02 35 02 36 02 36 02 36 02 36 02 37 02     5.5.5.6.6.6.6.7.
    48c0:	37 02 37 02 37 02 37 02 38 02 38 02 38 02 38 02     7.7.7.7.8.8.8.8.
    48d0:	39 02 39 02 39 02 39 02 39 02 3a 02 3a 02 3a 02     9.9.9.9.9.:.:.:.
    48e0:	3a 02 3b 02 3b 02 3b 02 3b 02 3c 02 3c 02 3c 02     :.;.;.;.;.<.<.<.
    48f0:	3c 02 3c 02 3d 02 3d 02 3d 02 3d 02 3e 02 3e 02     <.<.=.=.=.=.>.>.
    4900:	3e 02 3e 02 3e 02 3f 02 3f 02 3f 02 3f 02 40 02     >.>.>.?.?.?.?.@.
    4910:	40 02 40 02 40 02 40 02 41 02 41 02 41 02 41 02     @.@.@.@.A.A.A.A.
    4920:	42 02 42 02 42 02 42 02 43 02 43 02 43 02 43 02     B.B.B.B.C.C.C.C.
    4930:	43 02 44 02 44 02 44 02 44 02 45 02 45 02 45 02     C.D.D.D.D.E.E.E.
    4940:	45 02 45 02 46 02 46 02 46 02 46 02 47 02 47 02     E.E.F.F.F.F.G.G.
    4950:	47 02 47 02 48 02 48 02 48 02 48 02 48 02 49 02     G.G.H.H.H.H.H.I.
    4960:	49 02 49 02 49 02 4a 02 4a 02 4a 02 4a 02 4a 02     I.I.I.J.J.J.J.J.
    4970:	4b 02 4b 02 4b 02 4b 02 4c 02 4c 02 4c 02 4c 02     K.K.K.K.L.L.L.L.
    4980:	4d 02 4d 02 4d 02 4d 02 4d 02 4e 02 4e 02 4e 02     M.M.M.M.M.N.N.N.
    4990:	4e 02 4f 02 4f 02 4f 02 4f 02 4f 02 50 02 50 02     N.O.O.O.O.O.P.P.
    49a0:	50 02 50 02 51 02 51 02 51 02 51 02 52 02 52 02     P.P.Q.Q.Q.Q.R.R.
    49b0:	52 02 52 02 52 02 53 02 53 02 53 02 53 02 54 02     R.R.R.S.S.S.S.T.
    49c0:	54 02 54 02 54 02 54 02 55 02 55 02 55 02 55 02     T.T.T.T.U.U.U.U.
    49d0:	56 02 56 02 56 02 56 02 57 02 57 02 57 02 57 02     V.V.V.V.W.W.W.W.
    49e0:	57 02 58 02 58 02 58 02 58 02 59 02 59 02 59 02     W.X.X.X.X.Y.Y.Y.
    49f0:	59 02 59 02 5a 02 5a 02 5a 02 5a 02 5b 02 5b 02     Y.Y.Z.Z.Z.Z.[.[.
    4a00:	5b 02 5b 02 5c 02 5c 02 5c 02 5c 02 5c 02 5d 02     [.[.\.\.\.\.\.].
    4a10:	5d 02 5d 02 5d 02 5e 02 5e 02 5e 02 5e 02 5e 02     ].].].^.^.^.^.^.
    4a20:	5f 02 5f 02 5f 02 5f 02 60 02 60 02 60 02 60 02     _._._._.`.`.`.`.
    4a30:	60 02 61 02 61 02 61 02 61 02 62 02 62 02 62 02     `.a.a.a.a.b.b.b.
    4a40:	62 02 63 02 63 02 63 02 63 02 63 02 64 02 64 02     b.c.c.c.c.c.d.d.
    4a50:	64 02 64 02 65 02 65 02 65 02 65 02 65 02 66 02     d.d.e.e.e.e.e.f.
    4a60:	66 02 66 02 66 02 67 02 67 02 67 02 67 02 68 02     f.f.f.g.g.g.g.h.
    4a70:	68 02 68 02 68 02 68 02 69 02 69 02 69 02 69 02     h.h.h.h.i.i.i.i.
    4a80:	6a 02 6a 02 6a 02 6a 02 6a 02 6b 02 6b 02 6b 02     j.j.j.j.j.k.k.k.
    4a90:	6b 02 6c 02 6c 02 6c 02 6c 02 6d 02 6d 02 6d 02     k.l.l.l.l.m.m.m.
    4aa0:	6d 02 6d 02 6e 02 6e 02 6e 02 6e 02 6f 02 6f 02     m.m.n.n.n.n.o.o.
    4ab0:	6f 02 6f 02 6f 02 70 02 70 02 70 02 70 02 71 02     o.o.o.p.p.p.p.q.
    4ac0:	71 02 71 02 71 02 72 02 72 02 72 02 72 02 72 02     q.q.q.r.r.r.r.r.
    4ad0:	73 02 73 02 73 02 73 02 74 02 74 02 74 02 74 02     s.s.s.s.t.t.t.t.
    4ae0:	74 02 75 02 75 02 75 02 75 02 76 02 76 02 76 02     t.u.u.u.u.v.v.v.
    4af0:	76 02 77 02 77 02 77 02 77 02 77 02 78 02 78 02     v.w.w.w.w.w.x.x.
    4b00:	78 02 78 02 79 02 79 02 79 02 79 02 79 02 7a 02     x.x.y.y.y.y.y.z.
    4b10:	7a 02 7a 02 7a 02 7b 02 7b 02 7b 02 7b 02 7b 02     z.z.z.{.{.{.{.{.
    4b20:	7c 02 7c 02 7c 02 7c 02 7d 02 7d 02 7d 02 7d 02     |.|.|.|.}.}.}.}.
    4b30:	7e 02 7e 02 7e 02 7e 02 7e 02 7f 02 7f 02 7f 02     ~.~.~.~.~.......
    4b40:	7f 02 80 02 80 02 80 02 80 02 80 02 81 02 81 02     ................
    4b50:	81 02 81 02 82 02 82 02 82 02 82 02 83 02 83 02     ................
    4b60:	83 02 83 02 83 02 84 02 84 02 84 02 84 02 85 02     ................
    4b70:	85 02 85 02 85 02 85 02 86 02 86 02 86 02 86 02     ................
    4b80:	87 02 87 02 87 02 87 02 88 02 88 02 88 02 88 02     ................
    4b90:	88 02 89 02 89 02 89 02 89 02 8a 02 8a 02 8a 02     ................
    4ba0:	8a 02 8a 02 8b 02 8b 02 8b 02 8b 02 8c 02 8c 02     ................
    4bb0:	8c 02 8c 02 8d 02 8d 02 8d 02 8d 02 8d 02 8e 02     ................
    4bc0:	8e 02 8e 02 8e 02 8f 02 8f 02 8f 02 8f 02 8f 02     ................
    4bd0:	90 02 90 02 90 02 90 02 91 02 91 02 91 02 91 02     ................
    4be0:	92 02 92 02 92 02 92 02 92 02 93 02 93 02 93 02     ................
    4bf0:	93 02 94 02 94 02 94 02 94 02 94 02 95 02 95 02     ................
    4c00:	95 02 95 02 96 02 96 02 96 02 96 02 96 02 97 02     ................
    4c10:	97 02 97 02 97 02 98 02 98 02 98 02 98 02 99 02     ................
    4c20:	99 02 99 02 99 02 99 02 9a 02 9a 02 9a 02 9a 02     ................
    4c30:	9b 02 9b 02 9b 02 9b 02 9b 02 9c 02 9c 02 9c 02     ................
    4c40:	9c 02 9d 02 9d 02 9d 02 9d 02 9e 02 9e 02 9e 02     ................
    4c50:	9e 02 9e 02 9f 02 9f 02 9f 02 9f 02 a0 02 a0 02     ................
    4c60:	a0 02 a0 02 a0 02 a1 02 a1 02 a1 02 a1 02 a2 02     ................
    4c70:	a2 02 a2 02 a2 02 a3 02 a3 02 a3 02 a3 02 a3 02     ................
    4c80:	a4 02 a4 02 a4 02 a4 02 a5 02 a5 02 a5 02 a5 02     ................
    4c90:	a5 02 a6 02 a6 02 a6 02 a6 02 a7 02 a7 02 a7 02     ................
    4ca0:	a7 02 a8 02 a8 02 a8 02 a8 02 a8 02 a9 02 a9 02     ................
    4cb0:	a9 02 a9 02 aa 02 aa 02 aa 02 aa 02 aa 02 ab 02     ................
    4cc0:	ab 02 ab 02 ab 02 ac 02 ac 02 ac 02 ac 02 ad 02     ................
    4cd0:	ad 02 ad 02 ad 02 ad 02 ae 02 ae 02 ae 02 ae 02     ................
    4ce0:	af 02 af 02 af 02 af 02 af 02 b0 02 b0 02 b0 02     ................
    4cf0:	b0 02 b1 02 b1 02 b1 02 b1 02 b1 02 b2 02 b2 02     ................
    4d00:	b2 02 b2 02 b3 02 b3 02 b3 02 b3 02 b4 02 b4 02     ................
    4d10:	b4 02 b4 02 b4 02 b5 02 b5 02 b5 02 b5 02 b6 02     ................
    4d20:	b6 02 b6 02 b6 02 b6 02 b7 02 b7 02 b7 02 b7 02     ................
    4d30:	b8 02 b8 02 b8 02 b8 02 b9 02 b9 02 b9 02 b9 02     ................
    4d40:	b9 02 ba 02 ba 02 ba 02 ba 02 bb 02 bb 02 bb 02     ................
    4d50:	bb 02 bb 02 bc 02 bc 02 bc 02 bc 02 bd 02 bd 02     ................
    4d60:	bd 02 bd 02 be 02 be 02 be 02 be 02 be 02 bf 02     ................
    4d70:	bf 02 bf 02 bf 02 c0 02 c0 02 c0 02 c0 02 c0 02     ................
    4d80:	c1 02 c1 02 c1 02 c1 02 c2 02 c2 02 c2 02 c2 02     ................
    4d90:	c3 02 c3 02 c3 02 c3 02 c3 02 c4 02 c4 02 c4 02     ................
    4da0:	c4 02 c5 02 c5 02 c5 02 c5 02 c5 02 c6 02 c6 02     ................
    4db0:	c6 02 c6 02 c7 02 c7 02 c7 02 c7 02 c8 02 c8 02     ................
    4dc0:	c8 02 c8 02 c8 02 c9 02 c9 02 c9 02 c9 02 ca 02     ................
    4dd0:	ca 02 ca 02 ca 02 ca 02 cb 02 cb 02 cb 02 cb 02     ................
    4de0:	cc 02 cc 02 cc 02 cc 02 cc 02 cd 02 cd 02 cd 02     ................
    4df0:	cd 02 ce 02 ce 02 ce 02 ce 02 cf 02 cf 02 cf 02     ................
    4e00:	cf 02 cf 02 d0 02 d0 02 d0 02 d0 02 d1 02 d1 02     ................
    4e10:	d1 02 d1 02 d1 02 d2 02 d2 02 d2 02 d2 02 d3 02     ................
    4e20:	d3 02 d3 02 d3 02 d4 02 d4 02 d4 02 d4 02 d4 02     ................
    4e30:	d5 02 d5 02 d5 02 d5 02 d6 02 d6 02 d6 02 d6 02     ................
    4e40:	d6 02 d7 02 d7 02 d7 02 d7 02 d8 02 d8 02 d8 02     ................
    4e50:	d8 02 d9 02 d9 02 d9 02 d9 02 d9 02 da 02 da 02     ................
    4e60:	da 02 da 02 db 02 db 02 db 02 db 02 db 02 dc 02     ................
    4e70:	dc 02 dc 02 dc 02 dd 02 dd 02 dd 02 dd 02 de 02     ................
    4e80:	de 02 de 02 de 02 de 02 df 02 df 02 df 02 df 02     ................
    4e90:	e0 02 e0 02 e0 02 e0 02 e0 02 e1 02 e1 02 e1 02     ................
    4ea0:	e1 02 e2 02 e2 02 e2 02 e2 02 e3 02 e3 02 e3 02     ................
    4eb0:	e3 02 e3 02 e4 02 e4 02 e4 02 e4 02 e5 02 e5 02     ................
    4ec0:	e5 02 e5 02 e5 02 e6 02 e6 02 e6 02 e6 02 e7 02     ................
    4ed0:	e7 02 e7 02 e7 02 e7 02 e8 02 e8 02 e8 02 e8 02     ................
    4ee0:	e9 02 e9 02 e9 02 e9 02 ea 02 ea 02 ea 02 ea 02     ................
    4ef0:	ea 02 eb 02 eb 02 eb 02 eb 02 ec 02 ec 02 ec 02     ................
    4f00:	ec 02 ec 02 ed 02 ed 02 ed 02 ed 02 ee 02 ee 02     ................
    4f10:	ee 02 ee 02 ef 02 ef 02 ef 02 ef 02 ef 02 f0 02     ................
    4f20:	f0 02 f0 02 f0 02 f1 02 f1 02 f1 02 f1 02 f1 02     ................
    4f30:	f2 02 f2 02 f2 02 f2 02 f3 02 f3 02 f3 02 f3 02     ................
    4f40:	f4 02 f4 02 f4 02 f4 02 f4 02 f5 02 f5 02 f5 02     ................
    4f50:	f5 02 f6 02 f6 02 f6 02 f6 02 f6 02 f7 02 f7 02     ................
    4f60:	f7 02 f7 02 f8 02 f8 02 f8 02 f8 02 f9 02 f9 02     ................
    4f70:	f9 02 f9 02 f9 02 fa 02 fa 02 fa 02 fa 02 fb 02     ................
    4f80:	fb 02 fb 02 fb 02 fb 02 fc 02 fc 02 fc 02 fc 02     ................
    4f90:	fd 02 fd 02 fd 02 fd 02 fe 02 fe 02 fe 02 fe 02     ................
    4fa0:	fe 02 ff 02 ff 02 ff 02 ff 02 00 03 00 03 00 03     ................
    4fb0:	00 03 00 03 01 03 01 03 01 03 01 03 02 03 02 03     ................
    4fc0:	02 03 02 03 02 03 03 03 03 03 03 03 03 03 04 03     ................
    4fd0:	04 03 04 03 04 03 05 03 05 03 05 03 05 03 05 03     ................
    4fe0:	06 03 06 03 06 03 06 03 07 03 07 03 07 03 07 03     ................
    4ff0:	07 03 08 03 08 03 08 03 08 03 09 03 09 03 09 03     ................
    5000:	09 03 0a 03 0a 03 0a 03 0a 03 0a 03 0b 03 0b 03     ................
    5010:	0b 03 0b 03 0c 03 0c 03 0c 03 0c 03 0c 03 0d 03     ................
    5020:	0d 03 0d 03 0d 03 0e 03 0e 03 0e 03 0e 03 0f 03     ................
    5030:	0f 03 0f 03 0f 03 0f 03 10 03 10 03 10 03 10 03     ................
    5040:	11 03 11 03 11 03 11 03 11 03 12 03 12 03 12 03     ................
    5050:	12 03 13 03 13 03 13 03 13 03 14 03 14 03 14 03     ................
    5060:	14 03 14 03 15 03 15 03 15 03 15 03 16 03 16 03     ................
    5070:	16 03 16 03 16 03 17 03 17 03 17 03 17 03 18 03     ................
    5080:	18 03 18 03 18 03 19 03 19 03 19 03 19 03 19 03     ................
    5090:	1a 03 1a 03 1a 03 1a 03 1b 03 1b 03 1b 03 1b 03     ................
    50a0:	1b 03 1c 03 1c 03 1c 03 1c 03 1d 03 1d 03 1d 03     ................
    50b0:	1d 03 1d 03 1e 03 1e 03 1e 03 1e 03 1f 03 1f 03     ................
    50c0:	1f 03 1f 03 20 03 20 03 20 03 20 03 20 03 21 03     .... . . . . .!.
    50d0:	21 03 21 03 21 03 22 03 22 03 22 03 22 03 22 03     !.!.!.".".".".".
    50e0:	23 03 23 03 23 03 23 03 24 03 24 03 24 03 24 03     #.#.#.#.$.$.$.$.
    50f0:	25 03 25 03 25 03 25 03 25 03 26 03 26 03 26 03     %.%.%.%.%.&.&.&.
    5100:	26 03 27 03 27 03 27 03 27 03 27 03 28 03 28 03     &.'.'.'.'.'.(.(.
    5110:	28 03 28 03 29 03 29 03 29 03 29 03 2a 03 2a 03     (.(.).).).).*.*.
    5120:	2a 03 2a 03 2a 03 2b 03 2b 03 2b 03 2b 03 2c 03     *.*.*.+.+.+.+.,.
    5130:	2c 03 2c 03 2c 03 2c 03 2d 03 2d 03 2d 03 2d 03     ,.,.,.,.-.-.-.-.
    5140:	2e 03 2e 03 2e 03 2e 03 2f 03 2f 03 2f 03 2f 03     .......././././.
    5150:	2f 03 30 03 30 03 30 03 30 03 31 03 31 03 31 03     /.0.0.0.0.1.1.1.
    5160:	31 03 31 03 32 03 32 03 32 03 32 03 33 03 33 03     1.1.2.2.2.2.3.3.
    5170:	33 03 33 03 34 03 34 03 34 03 34 03 34 03 35 03     3.3.4.4.4.4.4.5.
    5180:	35 03 35 03 35 03 36 03 36 03 36 03 36 03 36 03     5.5.5.6.6.6.6.6.
    5190:	37 03 37 03 37 03 37 03 38 03 38 03 38 03 38 03     7.7.7.7.8.8.8.8.
    51a0:	38 03 39 03 39 03 39 03 39 03 3a 03 3a 03 3a 03     8.9.9.9.9.:.:.:.
    51b0:	3a 03 3b 03 3b 03 3b 03 3b 03 3b 03 3c 03 3c 03     :.;.;.;.;.;.<.<.
    51c0:	3c 03 3c 03 3d 03 3d 03 3d 03 3d 03 3d 03 3e 03     <.<.=.=.=.=.=.>.
    51d0:	3e 03 3e 03 3e 03 3f 03 3f 03 3f 03 3f 03 40 03     >.>.>.?.?.?.?.@.
    51e0:	40 03 40 03 40 03 40 03 41 03 41 03 41 03 41 03     @.@.@.@.A.A.A.A.
    51f0:	42 03 42 03 42 03 42 03 42 03 43 03 43 03 43 03     B.B.B.B.B.C.C.C.
    5200:	43 03 44 03 44 03 44 03 44 03 45 03 45 03 45 03     C.D.D.D.D.E.E.E.
    5210:	45 03 45 03 46 03 46 03 46 03 46 03 47 03 47 03     E.E.F.F.F.F.G.G.
    5220:	47 03 47 03 47 03 48 03 48 03 48 03 48 03 49 03     G.G.G.H.H.H.H.I.
    5230:	49 03 49 03 49 03 4a 03 4a 03 4a 03 4a 03 4a 03     I.I.I.J.J.J.J.J.
    5240:	4b 03 4b 03 4b 03 4b 03 4c 03 4c 03 4c 03 4c 03     K.K.K.K.L.L.L.L.
    5250:	4c 03 4d 03 4d 03 4d 03 4d 03 4e 03 4e 03 4e 03     L.M.M.M.M.N.N.N.
    5260:	4e 03 4f 03 4f 03 4f 03 4f 03 4f 03 50 03 50 03     N.O.O.O.O.O.P.P.
    5270:	50 03 50 03 51 03 51 03 51 03 51 03 51 03 52 03     P.P.Q.Q.Q.Q.Q.R.
    5280:	52 03 52 03 52 03 53 03 53 03 53 03 53 03 53 03     R.R.R.S.S.S.S.S.
    5290:	54 03 54 03 54 03 54 03 55 03 55 03 55 03 55 03     T.T.T.T.U.U.U.U.
    52a0:	56 03 56 03 56 03 56 03 56 03 57 03 57 03 57 03     V.V.V.V.V.W.W.W.
    52b0:	57 03 58 03 58 03 58 03 58 03 58 03 59 03 59 03     W.X.X.X.X.X.Y.Y.
    52c0:	59 03 59 03 5a 03 5a 03 5a 03 5a 03 5b 03 5b 03     Y.Y.Z.Z.Z.Z.[.[.
    52d0:	5b 03 5b 03 5b 03 5c 03 5c 03 5c 03 5c 03 5d 03     [.[.[.\.\.\.\.].
    52e0:	5d 03 5d 03 5d 03 5d 03 5e 03 5e 03 5e 03 5e 03     ].].].].^.^.^.^.
    52f0:	5f 03 5f 03 5f 03 5f 03 60 03 60 03 60 03 60 03     _._._._.`.`.`.`.
    5300:	60 03 61 03 61 03 61 03 61 03 62 03 62 03 62 03     `.a.a.a.a.b.b.b.
    5310:	62 03 62 03 63 03 63 03 63 03 63 03 64 03 64 03     b.b.c.c.c.c.d.d.
    5320:	64 03 64 03 65 03 65 03 65 03 65 03 65 03 66 03     d.d.e.e.e.e.e.f.
    5330:	66 03 66 03 66 03 67 03 67 03 67 03 67 03 67 03     f.f.f.g.g.g.g.g.
    5340:	68 03 68 03 68 03 68 03 69 03 69 03 69 03 69 03     h.h.h.h.i.i.i.i.
    5350:	6a 03 6a 03 6a 03 6a 03 6a 03 6b 03 6b 03 6b 03     j.j.j.j.j.k.k.k.
    5360:	6b 03 6c 03 6c 03 6c 03 6c 03 6c 03 6d 03 6d 03     k.l.l.l.l.l.m.m.
    5370:	6d 03 6d 03 6e 03 6e 03 6e 03 6e 03 6e 03 6f 03     m.m.n.n.n.n.n.o.
    5380:	6f 03 6f 03 6f 03 70 03 70 03 70 03 70 03 71 03     o.o.o.p.p.p.p.q.
    5390:	71 03 71 03 71 03 71 03 72 03 72 03 72 03 72 03     q.q.q.q.r.r.r.r.
    53a0:	73 03 73 03 73 03 73 03 73 03 74 03 74 03 74 03     s.s.s.s.s.t.t.t.
    53b0:	74 03 75 03 75 03 75 03 75 03 76 03 76 03 76 03     t.u.u.u.u.v.v.v.
    53c0:	76 03 76 03 77 03 77 03 77 03 77 03 78 03 78 03     v.v.w.w.w.w.x.x.
    53d0:	78 03 78 03 78 03 79 03 79 03 79 03 79 03 7a 03     x.x.x.y.y.y.y.z.
    53e0:	7a 03 7a 03 7a 03 7b 03 7b 03 7b 03 7b 03 7b 03     z.z.z.{.{.{.{.{.
    53f0:	7c 03 7c 03 7c 03 7c 03 7d 03 7d 03 7d 03 7d 03     |.|.|.|.}.}.}.}.
    5400:	7d 03 7e 03 7e 03 7e 03 7e 03 7f 03 7f 03 7f 03     }.~.~.~.~.......
    5410:	7f 03 80 03 80 03 80 03 80 03 80 03 81 03 81 03     ................
    5420:	81 03 81 03 82 03 82 03 82 03 82 03 82 03 83 03     ................
    5430:	83 03 83 03 83 03 84 03 84 03 84 03 84 03 85 03     ................
    5440:	85 03 85 03 85 03 85 03 86 03 86 03 86 03 86 03     ................
    5450:	87 03 87 03 87 03 87 03 87 03 88 03 88 03 88 03     ................
    5460:	88 03 89 03 89 03 89 03 89 03 8a 03 8a 03 8a 03     ................
    5470:	8a 03 8a 03 8b 03 8b 03 8b 03 8b 03 8c 03 8c 03     ................
    5480:	8c 03 8c 03 8c 03 8d 03 8d 03 8d 03 8d 03 8e 03     ................
    5490:	8e 03 8e 03 8e 03 8e 03 8f 03 8f 03 8f 03 8f 03     ................
    54a0:	90 03 90 03 90 03 90 03 91 03 91 03 91 03 91 03     ................
    54b0:	91 03 92 03 92 03 92 03 92 03 93 03 93 03 93 03     ................
    54c0:	93 03 93 03 94 03 94 03 94 03 94 03 95 03 95 03     ................
    54d0:	95 03 95 03 96 03 96 03 96 03 96 03 96 03 97 03     ................
    54e0:	97 03 97 03 97 03 98 03 98 03 98 03 98 03 98 03     ................
    54f0:	99 03 99 03 99 03 99 03 9a 03 9a 03 9a 03 9a 03     ................
    5500:	9b 03 9b 03 9b 03 9b 03 9b 03 9c 03 9c 03 9c 03     ................
    5510:	9c 03 9d 03 9d 03 9d 03 9d 03 9d 03 9e 03 9e 03     ................
    5520:	9e 03 9e 03 9f 03 9f 03 9f 03 9f 03 a0 03 a0 03     ................
    5530:	a0 03 a0 03 a0 03 a1 03                             ........

00005538 <convert_a2d>:
    5538:	4f 93       	cmp.b	#0,	r15	;r3 As==00
    553a:	5f 20       	jnz	$+192    	;abs 0x55fa
    553c:	3e 90 90 01 	cmp	#400,	r14	;#0x0190
    5540:	09 2c       	jc	$+20     	;abs 0x5554
    5542:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    5546:	12 c3       	clrc			
    5548:	0e 10       	rrc	r14		;
    554a:	12 c3       	clrc			
    554c:	0e 10       	rrc	r14		;
    554e:	8d 4e 02 00 	mov	r14,	2(r13)	;
    5552:	30 41       	ret			
    5554:	3e 90 20 03 	cmp	#800,	r14	;#0x0320
    5558:	05 2c       	jc	$+12     	;abs 0x5564
    555a:	9d 43 00 00 	mov	#1,	0(r13)	;r3 As==01
    555e:	3e 50 70 fe 	add	#-400,	r14	;#0xfe70
    5562:	f1 3f       	jmp	$-28     	;abs 0x5546
    5564:	3e 90 b0 04 	cmp	#1200,	r14	;#0x04b0
    5568:	05 2c       	jc	$+12     	;abs 0x5574
    556a:	ad 43 00 00 	mov	#2,	0(r13)	;r3 As==10
    556e:	3e 50 e0 fc 	add	#-800,	r14	;#0xfce0
    5572:	e9 3f       	jmp	$-44     	;abs 0x5546
    5574:	3e 90 40 06 	cmp	#1600,	r14	;#0x0640
    5578:	06 2c       	jc	$+14     	;abs 0x5586
    557a:	bd 40 03 00 	mov	#3,	0(r13)	;#0x0003
    557e:	00 00 
    5580:	3e 50 50 fb 	add	#-1200,	r14	;#0xfb50
    5584:	e0 3f       	jmp	$-62     	;abs 0x5546
    5586:	3e 90 d0 07 	cmp	#2000,	r14	;#0x07d0
    558a:	05 2c       	jc	$+12     	;abs 0x5596
    558c:	ad 42 00 00 	mov	#4,	0(r13)	;r2 As==10
    5590:	3e 50 c0 f9 	add	#-1600,	r14	;#0xf9c0
    5594:	d8 3f       	jmp	$-78     	;abs 0x5546
    5596:	3e 90 60 09 	cmp	#2400,	r14	;#0x0960
    559a:	06 2c       	jc	$+14     	;abs 0x55a8
    559c:	bd 40 05 00 	mov	#5,	0(r13)	;#0x0005
    55a0:	00 00 
    55a2:	3e 50 30 f8 	add	#-2000,	r14	;#0xf830
    55a6:	cf 3f       	jmp	$-96     	;abs 0x5546
    55a8:	3e 90 f0 0a 	cmp	#2800,	r14	;#0x0af0
    55ac:	06 2c       	jc	$+14     	;abs 0x55ba
    55ae:	bd 40 06 00 	mov	#6,	0(r13)	;#0x0006
    55b2:	00 00 
    55b4:	3e 50 a0 f6 	add	#-2400,	r14	;#0xf6a0
    55b8:	c6 3f       	jmp	$-114    	;abs 0x5546
    55ba:	3e 90 80 0c 	cmp	#3200,	r14	;#0x0c80
    55be:	06 2c       	jc	$+14     	;abs 0x55cc
    55c0:	bd 40 07 00 	mov	#7,	0(r13)	;#0x0007
    55c4:	00 00 
    55c6:	3e 50 10 f5 	add	#-2800,	r14	;#0xf510
    55ca:	bd 3f       	jmp	$-132    	;abs 0x5546
    55cc:	3e 90 10 0e 	cmp	#3600,	r14	;#0x0e10
    55d0:	05 2c       	jc	$+12     	;abs 0x55dc
    55d2:	bd 42 00 00 	mov	#8,	0(r13)	;r2 As==11
    55d6:	3e 50 80 f3 	add	#-3200,	r14	;#0xf380
    55da:	b5 3f       	jmp	$-148    	;abs 0x5546
    55dc:	3e 90 a0 0f 	cmp	#4000,	r14	;#0x0fa0
    55e0:	06 2c       	jc	$+14     	;abs 0x55ee
    55e2:	bd 40 09 00 	mov	#9,	0(r13)	;#0x0009
    55e6:	00 00 
    55e8:	3e 50 f0 f1 	add	#-3600,	r14	;#0xf1f0
    55ec:	ac 3f       	jmp	$-166    	;abs 0x5546
    55ee:	bd 40 0a 00 	mov	#10,	0(r13)	;#0x000a
    55f2:	00 00 
    55f4:	3e 50 60 f0 	add	#-4000,	r14	;#0xf060
    55f8:	a6 3f       	jmp	$-178    	;abs 0x5546
    55fa:	0e 5e       	rla	r14		;
    55fc:	3e 50 38 35 	add	#13624,	r14	;#0x3538
    5600:	ad 4e 00 00 	mov	@r14,	0(r13)	;
    5604:	3c 90 19 00 	cmp	#25,	r12	;#0x0019
    5608:	0e 34       	jge	$+30     	;abs 0x5626
    560a:	0f 4c       	mov	r12,	r15	;
    560c:	0f 5f       	rla	r15		;
    560e:	0f 5f       	rla	r15		;
    5610:	0c 4f       	mov	r15,	r12	;
    5612:	3c 50 ca 06 	add	#1738,	r12	;#0x06ca
    5616:	5f 4f ca 06 	mov.b	1738(r15),r15	;
    561a:	8f 11       	sxt	r15		;
    561c:	2e 4e       	mov	@r14,	r14	;
    561e:	0f 9e       	cmp	r14,	r15	;
    5620:	05 28       	jnc	$+12     	;abs 0x562c
    5622:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    5626:	8d 43 02 00 	mov	#0,	2(r13)	;r3 As==00
    562a:	30 41       	ret			
    562c:	5f 4c 01 00 	mov.b	1(r12),	r15	;
    5630:	8f 11       	sxt	r15		;
    5632:	0e 5f       	add	r15,	r14	;
    5634:	8d 4e 00 00 	mov	r14,	0(r13)	;
    5638:	f6 3f       	jmp	$-18     	;abs 0x5626

0000563a <init_pin_data_structure>:
    563a:	0b 12       	push	r11		;
    563c:	0b 43       	clr	r11		;
    563e:	0f 4b       	mov	r11,	r15	;
    5640:	0f 5f       	rla	r15		;
    5642:	0f 5f       	rla	r15		;
    5644:	0f 5f       	rla	r15		;
    5646:	0f 5f       	rla	r15		;
    5648:	0f 5f       	rla	r15		;
    564a:	0e 4b       	mov	r11,	r14	;
    564c:	0e 5e       	rla	r14		;
    564e:	0f 5e       	add	r14,	r15	;
    5650:	0f 5e       	add	r14,	r15	;
    5652:	0f 5e       	add	r14,	r15	;
    5654:	3f 50 6c 02 	add	#620,	r15	;#0x026c
    5658:	b0 12 5e 33 	call	#13150		;#0x335e
    565c:	1b 53       	inc	r11		;
    565e:	3b 90 19 00 	cmp	#25,	r11	;#0x0019
    5662:	ed 3b       	jl	$-36     	;abs 0x563e
    5664:	3b 41       	pop	r11		;
    5666:	30 41       	ret			
    5668:	43 61       	.word	0x6143;	????
    566a:	6c 20       	jnz	$+218    	;abs 0x5744
    566c:	49 6e       	addc.b	r14,	r9	;
    566e:	76 61       	addc.b	@r1+,	r6	;
    5670:	6c 69       	addc.b	@r9,	r12	;
    5672:	64 20       	jnz	$+202    	;abs 0x573c
    5674:	2d 20       	jnz	$+92     	;abs 0x56d0
    5676:	55 73       	subc.b	#1,	r5	;r3 As==01
    5678:	69 6e       	addc.b	@r14,	r9	;
    567a:	67 20       	jnz	$+208    	;abs 0x574a
    567c:	64 65       	addc.b	@r5,	r4	;
    567e:	66 61       	addc.b	@r1,	r6	;
    5680:	75 6c       	addc.b	@r12+,	r5	;
    5682:	74 73       	subc.b	#-1,	r4	;r3 As==11
    5684:	0a 0d       	.word	0x0d0a;	????
    5686:	00 25       	jz	$+514    	;abs 0x5888
    5688:	64 20       	jnz	$+202    	;abs 0x5752
    568a:	25 64       	addc	@r4,	r5	;
    568c:	20 00       	.word	0x0020;	????
    568e:	25 64       	addc	@r4,	r5	;
    5690:	20 00       	.word	0x0020;	????
    5692:	25 64       	addc	@r4,	r5	;
    5694:	0a 0d       	.word	0x0d0a;	????
	...

00005698 <init_ueac_state_structure>:
    5698:	0b 12       	push	r11		;
    569a:	0a 12       	push	r10		;
    569c:	09 12       	push	r9		;
    569e:	82 43 92 06 	mov	#0,	&0x0692	;r3 As==00
    56a2:	82 43 94 06 	mov	#0,	&0x0694	;r3 As==00
    56a6:	09 43       	clr	r9		;
    56a8:	3d 40 86 06 	mov	#1670,	r13	;#0x0686
    56ac:	0e 49       	mov	r9,	r14	;
    56ae:	0e 5e       	rla	r14		;
    56b0:	0f 4e       	mov	r14,	r15	;
    56b2:	0f 5d       	add	r13,	r15	;
    56b4:	8f 43 10 00 	mov	#0,	16(r15)	;r3 As==00
    56b8:	0f 4e       	mov	r14,	r15	;
    56ba:	0f 5f       	rla	r15		;
    56bc:	0f 5f       	rla	r15		;
    56be:	0f 5f       	rla	r15		;
    56c0:	ff 43 2d 07 	mov.b	#-1,	1837(r15);r3 As==11
    56c4:	ff 43 2e 07 	mov.b	#-1,	1838(r15);r3 As==11
    56c8:	19 53       	inc	r9		;
    56ca:	39 90 19 00 	cmp	#25,	r9	;#0x0019
    56ce:	ee 3b       	jl	$-34     	;abs 0x56ac
    56d0:	0e 43       	clr	r14		;
    56d2:	0f 43       	clr	r15		;
    56d4:	b0 12 9a 23 	call	#9114		;#0x239a
    56d8:	4f 43       	clr.b	r15		;
    56da:	b0 12 c8 14 	call	#5320		;#0x14c8
    56de:	7f 90 56 00 	cmp.b	#86,	r15	;#0x0056
    56e2:	16 24       	jz	$+46     	;abs 0x5710
    56e4:	30 12 68 56 	push	#22120		;#0x5668
    56e8:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    56ec:	09 43       	clr	r9		;
    56ee:	21 53       	incd	r1		;
    56f0:	0f 49       	mov	r9,	r15	;
    56f2:	0f 5f       	rla	r15		;
    56f4:	0f 5f       	rla	r15		;
    56f6:	cf 43 c8 06 	mov.b	#0,	1736(r15);r3 As==00
    56fa:	cf 43 c9 06 	mov.b	#0,	1737(r15);r3 As==00
    56fe:	cf 43 ca 06 	mov.b	#0,	1738(r15);r3 As==00
    5702:	cf 43 cb 06 	mov.b	#0,	1739(r15);r3 As==00
    5706:	19 53       	inc	r9		;
    5708:	39 90 19 00 	cmp	#25,	r9	;#0x0019
    570c:	f1 3b       	jl	$-28     	;abs 0x56f0
    570e:	6a 3c       	jmp	$+214    	;abs 0x57e4
    5710:	09 43       	clr	r9		;
    5712:	0b 49       	mov	r9,	r11	;
    5714:	0b 5b       	rla	r11		;
    5716:	0b 5b       	rla	r11		;
    5718:	4f 43       	clr.b	r15		;
    571a:	b0 12 c8 14 	call	#5320		;#0x14c8
    571e:	cb 4f c8 06 	mov.b	r15,	1736(r11);
    5722:	19 53       	inc	r9		;
    5724:	39 90 19 00 	cmp	#25,	r9	;#0x0019
    5728:	f4 3b       	jl	$-22     	;abs 0x5712
    572a:	09 43       	clr	r9		;
    572c:	0b 49       	mov	r9,	r11	;
    572e:	0b 5b       	rla	r11		;
    5730:	0b 5b       	rla	r11		;
    5732:	3b 50 c8 06 	add	#1736,	r11	;#0x06c8
    5736:	4f 43       	clr.b	r15		;
    5738:	b0 12 c8 14 	call	#5320		;#0x14c8
    573c:	cb 4f 01 00 	mov.b	r15,	1(r11)	;
    5740:	19 53       	inc	r9		;
    5742:	39 90 19 00 	cmp	#25,	r9	;#0x0019
    5746:	f2 3b       	jl	$-26     	;abs 0x572c
    5748:	09 43       	clr	r9		;
    574a:	0b 49       	mov	r9,	r11	;
    574c:	0b 5b       	rla	r11		;
    574e:	0b 5b       	rla	r11		;
    5750:	4f 43       	clr.b	r15		;
    5752:	b0 12 c8 14 	call	#5320		;#0x14c8
    5756:	cb 4f ca 06 	mov.b	r15,	1738(r11);
    575a:	19 53       	inc	r9		;
    575c:	39 90 19 00 	cmp	#25,	r9	;#0x0019
    5760:	f4 3b       	jl	$-22     	;abs 0x574a
    5762:	09 43       	clr	r9		;
    5764:	0b 49       	mov	r9,	r11	;
    5766:	0b 5b       	rla	r11		;
    5768:	0b 5b       	rla	r11		;
    576a:	3b 50 ca 06 	add	#1738,	r11	;#0x06ca
    576e:	4f 43       	clr.b	r15		;
    5770:	b0 12 c8 14 	call	#5320		;#0x14c8
    5774:	cb 4f 01 00 	mov.b	r15,	1(r11)	;
    5778:	19 53       	inc	r9		;
    577a:	39 90 19 00 	cmp	#25,	r9	;#0x0019
    577e:	f2 3b       	jl	$-26     	;abs 0x5764
    5780:	b0 12 f8 23 	call	#9208		;#0x23f8
    5784:	09 43       	clr	r9		;
    5786:	0b 49       	mov	r9,	r11	;
    5788:	0b 5b       	rla	r11		;
    578a:	0b 5b       	rla	r11		;
    578c:	0a 4b       	mov	r11,	r10	;
    578e:	3a 50 c8 06 	add	#1736,	r10	;#0x06c8
    5792:	5f 4b c8 06 	mov.b	1736(r11),r15	;
    5796:	8f 11       	sxt	r15		;
    5798:	0f 12       	push	r15		;
    579a:	09 12       	push	r9		;
    579c:	30 12 87 56 	push	#22151		;#0x5687
    57a0:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    57a4:	5f 4a 01 00 	mov.b	1(r10),	r15	;
    57a8:	8f 11       	sxt	r15		;
    57aa:	0f 12       	push	r15		;
    57ac:	30 12 8e 56 	push	#22158		;#0x568e
    57b0:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    57b4:	5f 4b ca 06 	mov.b	1738(r11),r15	;
    57b8:	8f 11       	sxt	r15		;
    57ba:	0f 12       	push	r15		;
    57bc:	30 12 8e 56 	push	#22158		;#0x568e
    57c0:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    57c4:	3b 50 ca 06 	add	#1738,	r11	;#0x06ca
    57c8:	5f 4b 01 00 	mov.b	1(r11),	r15	;
    57cc:	8f 11       	sxt	r15		;
    57ce:	0f 12       	push	r15		;
    57d0:	30 12 92 56 	push	#22162		;#0x5692
    57d4:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    57d8:	31 50 12 00 	add	#18,	r1	;#0x0012
    57dc:	19 53       	inc	r9		;
    57de:	39 90 19 00 	cmp	#25,	r9	;#0x0019
    57e2:	d1 3b       	jl	$-92     	;abs 0x5786
    57e4:	39 41       	pop	r9		;
    57e6:	3a 41       	pop	r10		;
    57e8:	3b 41       	pop	r11		;
    57ea:	30 41       	ret			

000057ec <init_global_variables>:
    57ec:	b0 12 3a 56 	call	#22074		;#0x563a
    57f0:	b0 12 98 56 	call	#22168		;#0x5698
    57f4:	82 43 cc 07 	mov	#0,	&0x07cc	;r3 As==00
    57f8:	c2 43 10 02 	mov.b	#0,	&0x0210	;r3 As==00
    57fc:	30 41       	ret			

000057fe <lla_report>:
    57fe:	3c 43       	mov	#-1,	r12	;r3 As==11
    5800:	5d 4f 02 00 	mov.b	2(r15),	r13	;
    5804:	3d 53       	add	#-1,	r13	;r3 As==11
    5806:	0d 5d       	rla	r13		;
    5808:	0d 5d       	rla	r13		;
    580a:	0d 5d       	rla	r13		;
    580c:	0d 5d       	rla	r13		;
    580e:	0d 5f       	add	r15,	r13	;
    5810:	dd 93 a6 00 	cmp.b	#1,	166(r13);r3 As==01
    5814:	07 20       	jnz	$+16     	;abs 0x5824
    5816:	9e 4d ae 00 	mov	174(r13),0(r14)	;
    581a:	00 00 
    581c:	9e 4d b0 00 	mov	176(r13),2(r14)	;
    5820:	02 00 
    5822:	0c 43       	clr	r12		;
    5824:	0f 4c       	mov	r12,	r15	;
    5826:	30 41       	ret			

00005828 <lla_add>:
    5828:	0b 12       	push	r11		;
    582a:	0a 12       	push	r10		;
    582c:	0c 4f       	mov	r15,	r12	;
    582e:	5a 4f 02 00 	mov.b	2(r15),	r10	;
    5832:	3a 53       	add	#-1,	r10	;r3 As==11
    5834:	0a 5a       	rla	r10		;
    5836:	0d 4a       	mov	r10,	r13	;
    5838:	0d 5d       	rla	r13		;
    583a:	0d 5d       	rla	r13		;
    583c:	0d 5d       	rla	r13		;
    583e:	0d 5f       	add	r15,	r13	;
    5840:	cd 43 a6 00 	mov.b	#0,	166(r13);r3 As==00
    5844:	5e 4f 04 00 	mov.b	4(r15),	r14	;
    5848:	4f 4e       	mov.b	r14,	r15	;
    584a:	0f 5f       	rla	r15		;
    584c:	0f 5e       	add	r14,	r15	;
    584e:	0f 5e       	add	r14,	r15	;
    5850:	0f 5e       	add	r14,	r15	;
    5852:	5f 5c 03 00 	add.b	3(r12),	r15	;
    5856:	7f 50 fa ff 	add.b	#-6,	r15	;#0xfffa
    585a:	cd 4f a7 00 	mov.b	r15,	167(r13);
    585e:	5b 4c 05 00 	mov.b	5(r12),	r11	;
    5862:	4b 93       	cmp.b	#0,	r11	;r3 As==00
    5864:	04 24       	jz	$+10     	;abs 0x586e
    5866:	5e 4c 06 00 	mov.b	6(r12),	r14	;
    586a:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    586c:	91 20       	jnz	$+292    	;abs 0x5990
    586e:	fd 43 a8 00 	mov.b	#-1,	168(r13);r3 As==11
    5872:	0e 4a       	mov	r10,	r14	;
    5874:	0e 5e       	rla	r14		;
    5876:	0e 5e       	rla	r14		;
    5878:	0e 5e       	rla	r14		;
    587a:	0e 5c       	add	r12,	r14	;
    587c:	5f 4c 0a 00 	mov.b	10(r12),r15	;
    5880:	0f 5f       	rla	r15		;
    5882:	9e 4f 2a 02 	mov	554(r15),170(r14);
    5886:	aa 00 
    5888:	de 4c 0b 00 	mov.b	11(r12),172(r14);
    588c:	ac 00 
    588e:	8e 43 b2 00 	mov	#0,	178(r14);r3 As==00
    5892:	8e 43 b4 00 	mov	#0,	180(r14);r3 As==00
    5896:	5f 4e a7 00 	mov.b	167(r14),r15	;
    589a:	3f 90 19 00 	cmp	#25,	r15	;#0x0019
    589e:	84 2c       	jc	$+266    	;abs 0x59a8
    58a0:	0f 5f       	rla	r15		;
    58a2:	10 4f a6 58 	br	22694(r15)		;
    58a6:	d8 58 de 58 	rla.b	22750(r8)		;
    58aa:	e4 58 
    58ac:	ea 58 f0 58 	add.b	@r8,	22768(r10);
    58b0:	f8 58 00 59 	add.b	@r8+,	22784(r8);
    58b4:	08 59       	add	r9,	r8	;
    58b6:	10 59 18 59 	add	22808(r9),r0	;
    58ba:	20 59       	add	@r9,	r0	;
    58bc:	28 59       	add	@r9,	r8	;
    58be:	30 59       	add	@r9+,	r0	;
    58c0:	38 59       	add	@r9+,	r8	;
    58c2:	40 59       	add.b	r9,	r0	;
    58c4:	48 59       	add.b	r9,	r8	;
    58c6:	50 59 56 59 	add.b	22870(r9),r0	;
    58ca:	5c 59 62 59 	add.b	22882(r9),r12	;
    58ce:	68 59       	add.b	@r9,	r8	;
    58d0:	70 59       	add.b	@r9+,	r0	;
    58d2:	78 59       	add.b	@r9+,	r8	;
    58d4:	80 59 88 59 	add	r9,	0x5988	; PC rel. 0xb25e
    58d8:	9c d3 0c 00 	bis	#1,	12(r12)	;r3 As==01
    58dc:	65 3c       	jmp	$+204    	;abs 0x59a8
    58de:	ac d3 0c 00 	bis	#2,	12(r12)	;r3 As==10
    58e2:	62 3c       	jmp	$+198    	;abs 0x59a8
    58e4:	ac d2 0c 00 	bis	#4,	12(r12)	;r2 As==10
    58e8:	5f 3c       	jmp	$+192    	;abs 0x59a8
    58ea:	bc d2 0c 00 	bis	#8,	12(r12)	;r2 As==11
    58ee:	5c 3c       	jmp	$+186    	;abs 0x59a8
    58f0:	bc d0 10 00 	bis	#16,	12(r12)	;#0x0010
    58f4:	0c 00 
    58f6:	58 3c       	jmp	$+178    	;abs 0x59a8
    58f8:	bc d0 20 00 	bis	#32,	12(r12)	;#0x0020
    58fc:	0c 00 
    58fe:	54 3c       	jmp	$+170    	;abs 0x59a8
    5900:	bc d0 40 00 	bis	#64,	12(r12)	;#0x0040
    5904:	0c 00 
    5906:	50 3c       	jmp	$+162    	;abs 0x59a8
    5908:	bc d0 80 00 	bis	#128,	12(r12)	;#0x0080
    590c:	0c 00 
    590e:	4c 3c       	jmp	$+154    	;abs 0x59a8
    5910:	bc d0 00 01 	bis	#256,	12(r12)	;#0x0100
    5914:	0c 00 
    5916:	48 3c       	jmp	$+146    	;abs 0x59a8
    5918:	bc d0 00 02 	bis	#512,	12(r12)	;#0x0200
    591c:	0c 00 
    591e:	44 3c       	jmp	$+138    	;abs 0x59a8
    5920:	bc d0 00 04 	bis	#1024,	12(r12)	;#0x0400
    5924:	0c 00 
    5926:	40 3c       	jmp	$+130    	;abs 0x59a8
    5928:	bc d0 00 08 	bis	#2048,	12(r12)	;#0x0800
    592c:	0c 00 
    592e:	3c 3c       	jmp	$+122    	;abs 0x59a8
    5930:	bc d0 00 10 	bis	#4096,	12(r12)	;#0x1000
    5934:	0c 00 
    5936:	38 3c       	jmp	$+114    	;abs 0x59a8
    5938:	bc d0 00 20 	bis	#8192,	12(r12)	;#0x2000
    593c:	0c 00 
    593e:	34 3c       	jmp	$+106    	;abs 0x59a8
    5940:	bc d0 00 40 	bis	#16384,	12(r12)	;#0x4000
    5944:	0c 00 
    5946:	30 3c       	jmp	$+98     	;abs 0x59a8
    5948:	bc d0 00 80 	bis	#-32768,12(r12)	;#0x8000
    594c:	0c 00 
    594e:	2c 3c       	jmp	$+90     	;abs 0x59a8
    5950:	9c d3 0e 00 	bis	#1,	14(r12)	;r3 As==01
    5954:	29 3c       	jmp	$+84     	;abs 0x59a8
    5956:	ac d3 0e 00 	bis	#2,	14(r12)	;r3 As==10
    595a:	26 3c       	jmp	$+78     	;abs 0x59a8
    595c:	ac d2 0e 00 	bis	#4,	14(r12)	;r2 As==10
    5960:	23 3c       	jmp	$+72     	;abs 0x59a8
    5962:	bc d2 0e 00 	bis	#8,	14(r12)	;r2 As==11
    5966:	20 3c       	jmp	$+66     	;abs 0x59a8
    5968:	bc d0 10 00 	bis	#16,	14(r12)	;#0x0010
    596c:	0e 00 
    596e:	1c 3c       	jmp	$+58     	;abs 0x59a8
    5970:	bc d0 20 00 	bis	#32,	14(r12)	;#0x0020
    5974:	0e 00 
    5976:	18 3c       	jmp	$+50     	;abs 0x59a8
    5978:	bc d0 40 00 	bis	#64,	14(r12)	;#0x0040
    597c:	0e 00 
    597e:	14 3c       	jmp	$+42     	;abs 0x59a8
    5980:	bc d0 80 00 	bis	#128,	14(r12)	;#0x0080
    5984:	0e 00 
    5986:	10 3c       	jmp	$+34     	;abs 0x59a8
    5988:	bc d0 00 01 	bis	#256,	14(r12)	;#0x0100
    598c:	0e 00 
    598e:	0c 3c       	jmp	$+26     	;abs 0x59a8
    5990:	4f 4e       	mov.b	r14,	r15	;
    5992:	0f 5f       	rla	r15		;
    5994:	7e f3       	and.b	#-1,	r14	;r3 As==11
    5996:	0f 5e       	add	r14,	r15	;
    5998:	0f 5e       	add	r14,	r15	;
    599a:	0f 5e       	add	r14,	r15	;
    599c:	4b 5f       	add.b	r15,	r11	;
    599e:	7b 50 fa ff 	add.b	#-6,	r11	;#0xfffa
    59a2:	cd 4b a8 00 	mov.b	r11,	168(r13);
    59a6:	65 3f       	jmp	$-308    	;abs 0x5872
    59a8:	0b 4a       	mov	r10,	r11	;
    59aa:	0b 5b       	rla	r11		;
    59ac:	0b 5b       	rla	r11		;
    59ae:	0b 5b       	rla	r11		;
    59b0:	0b 5c       	add	r12,	r11	;
    59b2:	5f 4b a7 00 	mov.b	167(r11),r15	;
    59b6:	1e 43       	mov	#1,	r14	;r3 As==01
    59b8:	b0 12 52 19 	call	#6482		;#0x1952
    59bc:	8b 43 ae 00 	mov	#0,	174(r11);r3 As==00
    59c0:	8b 43 b0 00 	mov	#0,	176(r11);r3 As==00
    59c4:	db 43 a6 00 	mov.b	#1,	166(r11);r3 As==01
    59c8:	0f 43       	clr	r15		;
    59ca:	3a 41       	pop	r10		;
    59cc:	3b 41       	pop	r11		;
    59ce:	30 41       	ret			

000059d0 <lla_disable>:
    59d0:	0b 12       	push	r11		;
    59d2:	0a 12       	push	r10		;
    59d4:	0d 4f       	mov	r15,	r13	;
    59d6:	3f 43       	mov	#-1,	r15	;r3 As==11
    59d8:	5b 4d 02 00 	mov.b	2(r13),	r11	;
    59dc:	3b 53       	add	#-1,	r11	;r3 As==11
    59de:	0b 5b       	rla	r11		;
    59e0:	0b 5b       	rla	r11		;
    59e2:	0b 5b       	rla	r11		;
    59e4:	0b 5b       	rla	r11		;
    59e6:	0b 5d       	add	r13,	r11	;
    59e8:	0c 4b       	mov	r11,	r12	;
    59ea:	3c 50 a6 00 	add	#166,	r12	;#0x00a6
    59ee:	db 93 a6 00 	cmp.b	#1,	166(r11);r3 As==01
    59f2:	1b 20       	jnz	$+56     	;abs 0x5a2a
    59f4:	1e 43       	mov	#1,	r14	;r3 As==01
    59f6:	0f 43       	clr	r15		;
    59f8:	5a 4c 01 00 	mov.b	1(r12),	r10	;
    59fc:	0a 93       	cmp	#0,	r10	;r3 As==00
    59fe:	04 24       	jz	$+10     	;abs 0x5a08
    5a00:	0e 5e       	rla	r14		;
    5a02:	0f 6f       	rlc	r15		;
    5a04:	1a 83       	dec	r10		;
    5a06:	fc 23       	jnz	$-6      	;abs 0x5a00
    5a08:	8d ce 0c 00 	bic	r14,	12(r13)	;
    5a0c:	8d cf 0e 00 	bic	r15,	14(r13)	;
    5a10:	cb 43 a6 00 	mov.b	#0,	166(r11);r3 As==00
    5a14:	5f 4c 01 00 	mov.b	1(r12),	r15	;
    5a18:	0e 43       	clr	r14		;
    5a1a:	b0 12 52 19 	call	#6482		;#0x1952
    5a1e:	5f 4b a8 00 	mov.b	168(r11),r15	;
    5a22:	0e 43       	clr	r14		;
    5a24:	b0 12 06 16 	call	#5638		;#0x1606
    5a28:	0f 43       	clr	r15		;
    5a2a:	3a 41       	pop	r10		;
    5a2c:	3b 41       	pop	r11		;
    5a2e:	30 41       	ret			

00005a30 <lla_enable>:
    5a30:	0b 12       	push	r11		;
    5a32:	0a 12       	push	r10		;
    5a34:	0d 4f       	mov	r15,	r13	;
    5a36:	3f 43       	mov	#-1,	r15	;r3 As==11
    5a38:	5b 4d 02 00 	mov.b	2(r13),	r11	;
    5a3c:	3b 53       	add	#-1,	r11	;r3 As==11
    5a3e:	0b 5b       	rla	r11		;
    5a40:	0b 5b       	rla	r11		;
    5a42:	0b 5b       	rla	r11		;
    5a44:	0b 5b       	rla	r11		;
    5a46:	0b 5d       	add	r13,	r11	;
    5a48:	0a 4b       	mov	r11,	r10	;
    5a4a:	3a 50 a6 00 	add	#166,	r10	;#0x00a6
    5a4e:	cb 93 a6 00 	cmp.b	#0,	166(r11);r3 As==00
    5a52:	1f 20       	jnz	$+64     	;abs 0x5a92
    5a54:	1e 43       	mov	#1,	r14	;r3 As==01
    5a56:	0f 43       	clr	r15		;
    5a58:	5c 4a 01 00 	mov.b	1(r10),	r12	;
    5a5c:	0c 93       	cmp	#0,	r12	;r3 As==00
    5a5e:	04 24       	jz	$+10     	;abs 0x5a68
    5a60:	0e 5e       	rla	r14		;
    5a62:	0f 6f       	rlc	r15		;
    5a64:	1c 83       	dec	r12		;
    5a66:	fc 23       	jnz	$-6      	;abs 0x5a60
    5a68:	8d de 0c 00 	bis	r14,	12(r13)	;
    5a6c:	8d df 0e 00 	bis	r15,	14(r13)	;
    5a70:	5f 4a 01 00 	mov.b	1(r10),	r15	;
    5a74:	1e 43       	mov	#1,	r14	;r3 As==01
    5a76:	b0 12 52 19 	call	#6482		;#0x1952
    5a7a:	5f 4b a8 00 	mov.b	168(r11),r15	;
    5a7e:	0e 43       	clr	r14		;
    5a80:	b0 12 06 16 	call	#5638		;#0x1606
    5a84:	8b 43 ae 00 	mov	#0,	174(r11);r3 As==00
    5a88:	8b 43 b0 00 	mov	#0,	176(r11);r3 As==00
    5a8c:	db 43 a6 00 	mov.b	#1,	166(r11);r3 As==01
    5a90:	0f 43       	clr	r15		;
    5a92:	3a 41       	pop	r10		;
    5a94:	3b 41       	pop	r11		;
    5a96:	30 41       	ret			

00005a98 <evaluate_lla>:
    5a98:	0b 12       	push	r11		;
    5a9a:	0a 12       	push	r10		;
    5a9c:	09 12       	push	r9		;
    5a9e:	08 12       	push	r8		;
    5aa0:	07 12       	push	r7		;
    5aa2:	06 12       	push	r6		;
    5aa4:	21 82       	sub	#4,	r1	;r2 As==10
    5aa6:	06 4f       	mov	r15,	r6	;
    5aa8:	5f 42 2a 02 	mov.b	&0x022a,r15	;0x022a
    5aac:	5f 53       	inc.b	r15		;
    5aae:	c2 4f 2a 02 	mov.b	r15,	&0x022a	;
    5ab2:	7f 90 0a 00 	cmp.b	#10,	r15	;#0x000a
    5ab6:	03 28       	jnc	$+8      	;abs 0x5abe
    5ab8:	4f 43       	clr.b	r15		;
    5aba:	c2 43 2a 02 	mov.b	#0,	&0x022a	;r3 As==00
    5abe:	7f f3       	and.b	#-1,	r15	;r3 As==11
    5ac0:	0f 5f       	rla	r15		;
    5ac2:	0f 5f       	rla	r15		;
    5ac4:	0f 5f       	rla	r15		;
    5ac6:	0f 5f       	rla	r15		;
    5ac8:	0f 56       	add	r6,	r15	;
    5aca:	0e 4f       	mov	r15,	r14	;
    5acc:	3e 50 a6 00 	add	#166,	r14	;#0x00a6
    5ad0:	df 93 a6 00 	cmp.b	#1,	166(r15);r3 As==01
    5ad4:	87 20       	jnz	$+272    	;abs 0x5be4
    5ad6:	5d 4e 01 00 	mov.b	1(r14),	r13	;
    5ada:	0f 4d       	mov	r13,	r15	;
    5adc:	0f 5f       	rla	r15		;
    5ade:	0f 5f       	rla	r15		;
    5ae0:	0f 5f       	rla	r15		;
    5ae2:	0f 5f       	rla	r15		;
    5ae4:	0f 5f       	rla	r15		;
    5ae6:	0e 4d       	mov	r13,	r14	;
    5ae8:	0e 5e       	rla	r14		;
    5aea:	0f 5e       	add	r14,	r15	;
    5aec:	0f 5e       	add	r14,	r15	;
    5aee:	0f 5e       	add	r14,	r15	;
    5af0:	0c 4d       	mov	r13,	r12	;
    5af2:	0d 41       	mov	r1,	r13	;
    5af4:	1e 4f 90 02 	mov	656(r15),r14	;
    5af8:	5f 43       	mov.b	#1,	r15	;r3 As==01
    5afa:	b0 12 38 55 	call	#21816		;#0x5538
    5afe:	5f 42 2a 02 	mov.b	&0x022a,r15	;0x022a
    5b02:	0f 5f       	rla	r15		;
    5b04:	0f 5f       	rla	r15		;
    5b06:	0f 5f       	rla	r15		;
    5b08:	0f 5f       	rla	r15		;
    5b0a:	0f 56       	add	r6,	r15	;
    5b0c:	af 41 ae 00 	mov	@r1,	174(r15);
    5b10:	3f 50 ac 00 	add	#172,	r15	;#0x00ac
    5b14:	df 53 01 00 	inc.b	1(r15)		;
    5b18:	5d 42 2a 02 	mov.b	&0x022a,r13	;0x022a
    5b1c:	0d 5d       	rla	r13		;
    5b1e:	0d 5d       	rla	r13		;
    5b20:	0d 5d       	rla	r13		;
    5b22:	0d 5d       	rla	r13		;
    5b24:	0d 56       	add	r6,	r13	;
    5b26:	0e 4d       	mov	r13,	r14	;
    5b28:	3e 50 ac 00 	add	#172,	r14	;#0x00ac
    5b2c:	df 9d ac 00 	cmp.b	172(r13),1(r15)	;
    5b30:	01 00 
    5b32:	4e 28       	jnc	$+158    	;abs 0x5bd0
    5b34:	ce 43 01 00 	mov.b	#0,	1(r14)	;r3 As==00
    5b38:	57 42 2a 02 	mov.b	&0x022a,r7	;0x022a
    5b3c:	07 57       	rla	r7		;
    5b3e:	07 57       	rla	r7		;
    5b40:	07 57       	rla	r7		;
    5b42:	07 57       	rla	r7		;
    5b44:	07 56       	add	r6,	r7	;
    5b46:	1e 47 ae 00 	mov	174(r7),r14	;
    5b4a:	0f 4e       	mov	r14,	r15	;
    5b4c:	0f 5f       	rla	r15		;
    5b4e:	0f 7f       	subc	r15,	r15	;
    5b50:	3f e3       	inv	r15		;
    5b52:	1e 57 b2 00 	add	178(r7),r14	;
    5b56:	1f 67 b4 00 	addc	180(r7),r15	;
    5b5a:	87 4e b2 00 	mov	r14,	178(r7)	;
    5b5e:	87 4f b4 00 	mov	r15,	180(r7)	;
    5b62:	5a 47 ac 00 	mov.b	172(r7),r10	;
    5b66:	0b 43       	clr	r11		;
    5b68:	0c 4e       	mov	r14,	r12	;
    5b6a:	0d 4f       	mov	r15,	r13	;
    5b6c:	b0 12 24 92 	call	#-28124	;#0x9224
    5b70:	0e 4c       	mov	r12,	r14	;
    5b72:	0f 4d       	mov	r13,	r15	;
    5b74:	87 4c ae 00 	mov	r12,	174(r7)	;
    5b78:	3c 90 c9 00 	cmp	#201,	r12	;#0x00c9
    5b7c:	23 38       	jl	$+72     	;abs 0x5bc4
    5b7e:	1f 47 aa 00 	mov	170(r7),r15	;
    5b82:	97 4f 90 01 	mov	400(r15),176(r7)	;
    5b86:	b0 00 
    5b88:	5f 42 2a 02 	mov.b	&0x022a,r15	;0x022a
    5b8c:	4e 4f       	mov.b	r15,	r14	;
    5b8e:	0e 5e       	rla	r14		;
    5b90:	0e 5e       	rla	r14		;
    5b92:	0e 5e       	rla	r14		;
    5b94:	0e 5e       	rla	r14		;
    5b96:	0e 56       	add	r6,	r14	;
    5b98:	5d 4e a8 00 	mov.b	168(r14),r13	;
    5b9c:	7d 93       	cmp.b	#-1,	r13	;r3 As==11
    5b9e:	07 24       	jz	$+16     	;abs 0x5bae
    5ba0:	4f 4d       	mov.b	r13,	r15	;
    5ba2:	1e 4e b0 00 	mov	176(r14),r14	;
    5ba6:	b0 12 06 16 	call	#5638		;#0x1606
    5baa:	5f 42 2a 02 	mov.b	&0x022a,r15	;0x022a
    5bae:	7f f3       	and.b	#-1,	r15	;r3 As==11
    5bb0:	0f 5f       	rla	r15		;
    5bb2:	0f 5f       	rla	r15		;
    5bb4:	0f 5f       	rla	r15		;
    5bb6:	0f 5f       	rla	r15		;
    5bb8:	0f 56       	add	r6,	r15	;
    5bba:	8f 43 b2 00 	mov	#0,	178(r15);r3 As==00
    5bbe:	8f 43 b4 00 	mov	#0,	180(r15);r3 As==00
    5bc2:	10 3c       	jmp	$+34     	;abs 0x5be4
    5bc4:	0e 5e       	rla	r14		;
    5bc6:	1e 57 aa 00 	add	170(r7),r14	;
    5bca:	a7 4e b0 00 	mov	@r14,	176(r7)	;
    5bce:	dc 3f       	jmp	$-70     	;abs 0x5b88
    5bd0:	1e 4d ae 00 	mov	174(r13),r14	;
    5bd4:	0f 4e       	mov	r14,	r15	;
    5bd6:	0f 5f       	rla	r15		;
    5bd8:	0f 7f       	subc	r15,	r15	;
    5bda:	3f e3       	inv	r15		;
    5bdc:	8d 5e b2 00 	add	r14,	178(r13);
    5be0:	8d 6f b4 00 	addc	r15,	180(r13);
    5be4:	0f 43       	clr	r15		;
    5be6:	21 52       	add	#4,	r1	;r2 As==10
    5be8:	36 41       	pop	r6		;
    5bea:	37 41       	pop	r7		;
    5bec:	38 41       	pop	r8		;
    5bee:	39 41       	pop	r9		;
    5bf0:	3a 41       	pop	r10		;
    5bf2:	3b 41       	pop	r11		;
    5bf4:	30 41       	ret			
    5bf6:	6c 6c       	addc.b	@r12,	r12	;
    5bf8:	61 5f       	add.b	@r15,	r1	;
    5bfa:	69 6e       	addc.b	@r14,	r9	;
    5bfc:	70 75       	subc.b	@r5+,	r0	;
    5bfe:	74 20       	jnz	$+234    	;abs 0x5ce8
    5c00:	76 61       	addc.b	@r1+,	r6	;
    5c02:	72 3d       	jmp	$+742    	;abs 0x5ee8
    5c04:	30 78       	subc	@r8+,	r0	;
    5c06:	25 30       	jn	$+76     	;abs 0x5c52
    5c08:	38 6c       	addc	@r12+,	r8	;
    5c0a:	78 0a       	.word	0x0a78;	????
    5c0c:	00 0a       	.word	0x0a00;	????
    5c0e:	4c 4c       	mov.b	r12,	r12	;
    5c10:	41 20       	jnz	$+132    	;abs 0x5c94
    5c12:	25 64       	addc	@r4,	r5	;
    5c14:	0a 0d       	.word	0x0d0a;	????
    5c16:	00 65       	addc	r5,	r0	;
    5c18:	6e 61       	addc.b	@r1,	r14	;
    5c1a:	62 6c       	addc.b	@r12,	r2	;
    5c1c:	65 20       	jnz	$+204    	;abs 0x5ce8
    5c1e:	73 74       	.word	0x7473;	????
    5c20:	61 74       	subc.b	@r4,	r1	;
    5c22:	65 3d       	jmp	$+716    	;abs 0x5eee
    5c24:	44 49       	mov.b	r9,	r4	;
    5c26:	53 41       	.word	0x4153;	????
    5c28:	42 4c       	mov.b	r12,	r2	;
    5c2a:	45 44       	mov.b	r4,	r5	;
    5c2c:	00 65       	addc	r5,	r0	;
    5c2e:	6e 61       	addc.b	@r1,	r14	;
    5c30:	62 6c       	addc.b	@r12,	r2	;
    5c32:	65 20       	jnz	$+204    	;abs 0x5cfe
    5c34:	73 74       	.word	0x7473;	????
    5c36:	61 74       	subc.b	@r4,	r1	;
    5c38:	65 3d       	jmp	$+716    	;abs 0x5f04
    5c3a:	45 4e       	mov.b	r14,	r5	;
    5c3c:	41 42       	mov.b	r2,	r1	;
    5c3e:	4c 45       	mov.b	r5,	r12	;
    5c40:	44 0a       	.word	0x0a44;	????
    5c42:	0d 00       	.word	0x000d;	????
    5c44:	69 6e       	addc.b	@r14,	r9	;
    5c46:	70 75       	subc.b	@r5+,	r0	;
    5c48:	74 20       	jnz	$+234    	;abs 0x5d32
    5c4a:	70 69       	addc.b	@r9+,	r0	;
    5c4c:	6e 20       	jnz	$+222    	;abs 0x5d2a
    5c4e:	3d 20       	jnz	$+124    	;abs 0x5cca
    5c50:	25 64       	addc	@r4,	r5	;
    5c52:	0a 0d       	.word	0x0d0a;	????
    5c54:	00 6f       	addc	r15,	r0	;
    5c56:	75 74       	subc.b	@r4+,	r5	;
    5c58:	70 75       	subc.b	@r5+,	r0	;
    5c5a:	74 20       	jnz	$+234    	;abs 0x5d44
    5c5c:	70 69       	addc.b	@r9+,	r0	;
    5c5e:	6e 20       	jnz	$+222    	;abs 0x5d3c
    5c60:	3d 20       	jnz	$+124    	;abs 0x5cdc
    5c62:	25 64       	addc	@r4,	r5	;
    5c64:	0a 0d       	.word	0x0d0a;	????
    5c66:	00 66       	addc	r6,	r0	;
    5c68:	69 72       	subc.b	#4,	r9	;r2 As==10
    5c6a:	73 74       	.word	0x7473;	????
    5c6c:	20 64       	addc	@r4,	r0	;
    5c6e:	61 74       	subc.b	@r4,	r1	;
    5c70:	61 20       	jnz	$+196    	;abs 0x5d34
    5c72:	76 61       	addc.b	@r1+,	r6	;
    5c74:	6c 20       	jnz	$+218    	;abs 0x5d4e
    5c76:	3d 20       	jnz	$+124    	;abs 0x5cf2
    5c78:	25 64       	addc	@r4,	r5	;
    5c7a:	0a 0d       	.word	0x0d0a;	????
    5c7c:	00 70       	subc	r0,	r0	;
    5c7e:	65 72       	subc.b	#4,	r5	;r2 As==10
    5c80:	69 6f       	addc.b	@r15,	r9	;
    5c82:	64 20       	jnz	$+202    	;abs 0x5d4c
    5c84:	3d 20       	jnz	$+124    	;abs 0x5d00
    5c86:	25 64       	addc	@r4,	r5	;
    5c88:	0a 0d       	.word	0x0d0a;	????
    5c8a:	00 69       	addc	r9,	r0	;
    5c8c:	6e 5f       	add.b	@r15,	r14	;
    5c8e:	76 61       	addc.b	@r1+,	r6	;
    5c90:	6c 20       	jnz	$+218    	;abs 0x5d6a
    5c92:	3d 20       	jnz	$+124    	;abs 0x5d0e
    5c94:	25 64       	addc	@r4,	r5	;
    5c96:	0a 0d       	.word	0x0d0a;	????
    5c98:	00 6f       	addc	r15,	r0	;
    5c9a:	75 74       	subc.b	@r4+,	r5	;
    5c9c:	5f 76 61 6c 	subc.b	27745(r6),r15	;
    5ca0:	20 3d       	jmp	$+578    	;abs 0x5ee2
    5ca2:	20 25       	jz	$+578    	;abs 0x5ee4
    5ca4:	64 0a       	.word	0x0a64;	????
    5ca6:	0d 00       	.word	0x000d;	????
    5ca8:	61 63       	addc.b	#2,	r1	;r3 As==10
    5caa:	63 75       	.word	0x7563;	????
    5cac:	6d 75       	subc.b	@r5,	r13	;
    5cae:	6c 61       	addc.b	@r1,	r12	;
    5cb0:	74 6f       	addc.b	@r15+,	r4	;
    5cb2:	72 20       	jnz	$+230    	;abs 0x5d98
    5cb4:	3d 20       	jnz	$+124    	;abs 0x5d30
    5cb6:	25 6c       	addc	@r12,	r5	;
    5cb8:	64 0a       	.word	0x0a64;	????
    5cba:	0d 00       	.word	0x000d;	????

00005cbc <lla_print_active>:
    5cbc:	0b 12       	push	r11		;
    5cbe:	0a 12       	push	r10		;
    5cc0:	09 12       	push	r9		;
    5cc2:	08 12       	push	r8		;
    5cc4:	08 4f       	mov	r15,	r8	;
    5cc6:	1f 12 0e 00 	push	14(r15)		;
    5cca:	1f 12 0c 00 	push	12(r15)		;
    5cce:	30 12 f6 5b 	push	#23542		;#0x5bf6
    5cd2:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
  for (i=0;i<10;i++) {
    5cd6:	0b 43       	clr	r11		;
    5cd8:	31 50 06 00 	add	#6,	r1	;#0x0006
#ifdef LINUX
    printf("\nLLA %d\n",i+1);
    if (LLA_TABLE[i].enable==ENABLE) {
      printf("enable state=ENABLED\n");
      printf("input pin = %d\n",LLA_TABLE[i].in_pin);
      printf("output pin = %d\n",LLA_TABLE[i].out_pin);
      printf("first data val = %d\n",*(LLA_TABLE[i].function_ptr+100));
      printf("period = %d\n",LLA_TABLE[i].period);
      printf("in_val = %d\n",LLA_TABLE[i].in_val);
      printf("out_val = %d\n",LLA_TABLE[i].out_val);
      printf("accumulator = %ld\n",LLA_TABLE[i].accumulator);
    }
    else {
      printf("enable state=DISABLED\n");
    }
#else 
    printf("\nLLA %d\n\r",i+1);
    5cdc:	09 4b       	mov	r11,	r9	;
    5cde:	19 53       	inc	r9		;
    5ce0:	09 12       	push	r9		;
    5ce2:	30 12 0d 5c 	push	#23565		;#0x5c0d
    5ce6:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    if (LLA_TABLE[i].enable==ENABLE) {
    5cea:	0b 5b       	rla	r11		;
    5cec:	0b 5b       	rla	r11		;
    5cee:	0b 5b       	rla	r11		;
    5cf0:	0b 5b       	rla	r11		;
    5cf2:	0b 58       	add	r8,	r11	;
    5cf4:	0a 4b       	mov	r11,	r10	;
    5cf6:	3a 50 a6 00 	add	#166,	r10	;#0x00a6
    5cfa:	21 52       	add	#4,	r1	;r2 As==10
    5cfc:	db 93 a6 00 	cmp.b	#1,	166(r11);r3 As==01
    5d00:	05 24       	jz	$+12     	;abs 0x5d0c
      printf("enable state=ENABLED\n\r");
      printf("input pin = %d\n\r",LLA_TABLE[i].in_pin);
      printf("output pin = %d\n\r",LLA_TABLE[i].out_pin);
      printf("first data val = %d\n\r",*(LLA_TABLE[i].function_ptr+100));
      printf("period = %d\n\r",LLA_TABLE[i].period);
      printf("in_val = %d\n\r",LLA_TABLE[i].in_val);
      printf("out_val = %d\n\r",LLA_TABLE[i].out_val);
      printf("accumulator = %ld\n\r",LLA_TABLE[i].accumulator);
    }
    else {
      printf("enable state=DISABLED\n");
    5d02:	3f 40 17 5c 	mov	#23575,	r15	;#0x5c17
    5d06:	b0 12 44 90 	call	#-28604	;#0x9044
    5d0a:	37 3c       	jmp	$+112    	;abs 0x5d7a
    5d0c:	30 12 2d 5c 	push	#23597		;#0x5c2d
    5d10:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    5d14:	5f 4a 01 00 	mov.b	1(r10),	r15	;
    5d18:	0f 12       	push	r15		;
    5d1a:	30 12 44 5c 	push	#23620		;#0x5c44
    5d1e:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    5d22:	5f 4b a8 00 	mov.b	168(r11),r15	;
    5d26:	0f 12       	push	r15		;
    5d28:	30 12 55 5c 	push	#23637		;#0x5c55
    5d2c:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    5d30:	1f 4b aa 00 	mov	170(r11),r15	;
    5d34:	1f 12 c8 00 	push	200(r15)		;
    5d38:	30 12 67 5c 	push	#23655		;#0x5c67
    5d3c:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    5d40:	5f 4b ac 00 	mov.b	172(r11),r15	;
    5d44:	0f 12       	push	r15		;
    5d46:	30 12 7d 5c 	push	#23677		;#0x5c7d
    5d4a:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    5d4e:	1b 12 ae 00 	push	174(r11)		;
    5d52:	30 12 8b 5c 	push	#23691		;#0x5c8b
    5d56:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    5d5a:	1b 12 b0 00 	push	176(r11)		;
    5d5e:	30 12 99 5c 	push	#23705		;#0x5c99
    5d62:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    5d66:	1b 12 b4 00 	push	180(r11)		;
    5d6a:	1b 12 b2 00 	push	178(r11)		;
    5d6e:	30 12 a8 5c 	push	#23720		;#0x5ca8
    5d72:	b0 12 0e 8a 	call	#-30194	;#0x8a0e
    5d76:	31 50 20 00 	add	#32,	r1	;#0x0020
    5d7a:	0b 49       	mov	r9,	r11	;
    5d7c:	39 90 0a 00 	cmp	#10,	r9	;#0x000a
    5d80:	ad 3b       	jl	$-164    	;abs 0x5cdc
    }
#endif

  }
}
    5d82:	38 41       	pop	r8		;
    5d84:	39 41       	pop	r9		;
    5d86:	3a 41       	pop	r10		;
    5d88:	3b 41       	pop	r11		;
    5d8a:	30 41       	ret			

00005d8c <f1>:
	...

00005f1e <f2>:
    5f1e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5f2e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5f3e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5f4e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5f5e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5f6e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5f7e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5f8e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5f9e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5fae:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5fbe:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5fce:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5fde:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5fee:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    5ffe:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    600e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    601e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    602e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    603e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    604e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    605e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    606e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    607e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    608e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    609e:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    60ae:	64 00                                               d.

000060b0 <f3>:
    60b0:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    60c0:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    60d0:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    60e0:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    60f0:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6100:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6110:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6120:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6130:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6140:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6150:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6160:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6170:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6180:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6190:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    61a0:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    61b0:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    61c0:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    61d0:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    61e0:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    61f0:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6200:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6210:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6220:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6230:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6240:	c8 00                                               ..

00006242 <f4>:
    6242:	00 00 01 00 02 00 03 00 04 00 05 00 06 00 07 00     ................
    6252:	08 00 09 00 0a 00 0b 00 0c 00 0d 00 0e 00 0f 00     ................
    6262:	10 00 11 00 12 00 13 00 14 00 15 00 16 00 17 00     ................
    6272:	18 00 19 00 1a 00 1b 00 1c 00 1d 00 1e 00 1f 00     ................
    6282:	20 00 21 00 22 00 23 00 24 00 25 00 26 00 27 00      .!.".#.$.%.&.'.
    6292:	28 00 29 00 2a 00 2b 00 2c 00 2d 00 2e 00 2f 00     (.).*.+.,.-.../.
    62a2:	30 00 31 00 32 00 33 00 34 00 35 00 36 00 37 00     0.1.2.3.4.5.6.7.
    62b2:	38 00 39 00 3a 00 3b 00 3c 00 3d 00 3e 00 3f 00     8.9.:.;.<.=.>.?.
    62c2:	40 00 41 00 42 00 43 00 44 00 45 00 46 00 47 00     @.A.B.C.D.E.F.G.
    62d2:	48 00 49 00 4a 00 4b 00 4c 00 4d 00 4e 00 4f 00     H.I.J.K.L.M.N.O.
    62e2:	50 00 51 00 52 00 53 00 54 00 55 00 56 00 57 00     P.Q.R.S.T.U.V.W.
    62f2:	58 00 59 00 5a 00 5b 00 5c 00 5d 00 5e 00 5f 00     X.Y.Z.[.\.].^._.
    6302:	60 00 61 00 62 00 63 00 64 00 65 00 66 00 67 00     `.a.b.c.d.e.f.g.
    6312:	68 00 69 00 6a 00 6b 00 6c 00 6d 00 6e 00 6f 00     h.i.j.k.l.m.n.o.
    6322:	70 00 71 00 72 00 73 00 74 00 75 00 76 00 77 00     p.q.r.s.t.u.v.w.
    6332:	78 00 79 00 7a 00 7b 00 7c 00 7d 00 7e 00 7f 00     x.y.z.{.|.}.~...
    6342:	80 00 81 00 82 00 83 00 84 00 85 00 86 00 87 00     ................
    6352:	88 00 89 00 8a 00 8b 00 8c 00 8d 00 8e 00 8f 00     ................
    6362:	90 00 91 00 92 00 93 00 94 00 95 00 96 00 97 00     ................
    6372:	98 00 99 00 9a 00 9b 00 9c 00 9d 00 9e 00 9f 00     ................
    6382:	a0 00 a1 00 a2 00 a3 00 a4 00 a5 00 a6 00 a7 00     ................
    6392:	a8 00 a9 00 aa 00 ab 00 ac 00 ad 00 ae 00 af 00     ................
    63a2:	b0 00 b1 00 b2 00 b3 00 b4 00 b5 00 b6 00 b7 00     ................
    63b2:	b8 00 b9 00 ba 00 bb 00 bc 00 bd 00 be 00 bf 00     ................
    63c2:	c0 00 c1 00 c2 00 c3 00 c4 00 c5 00 c6 00 c7 00     ................
    63d2:	c8 00                                               ..

000063d4 <f5>:
    63d4:	c8 00 c7 00 c6 00 c5 00 c4 00 c3 00 c2 00 c1 00     ................
    63e4:	c0 00 bf 00 be 00 bd 00 bc 00 bb 00 ba 00 b9 00     ................
    63f4:	b8 00 b7 00 b6 00 b5 00 b4 00 b3 00 b2 00 b1 00     ................
    6404:	b0 00 af 00 ae 00 ad 00 ac 00 ab 00 aa 00 a9 00     ................
    6414:	a8 00 a7 00 a6 00 a5 00 a4 00 a3 00 a2 00 a1 00     ................
    6424:	a0 00 9f 00 9e 00 9d 00 9c 00 9b 00 9a 00 99 00     ................
    6434:	98 00 97 00 96 00 95 00 94 00 93 00 92 00 91 00     ................
    6444:	90 00 8f 00 8e 00 8d 00 8c 00 8b 00 8a 00 89 00     ................
    6454:	88 00 87 00 86 00 85 00 84 00 83 00 82 00 81 00     ................
    6464:	80 00 7f 00 7e 00 7d 00 7c 00 7b 00 7a 00 79 00     ....~.}.|.{.z.y.
    6474:	78 00 77 00 76 00 75 00 74 00 73 00 72 00 71 00     x.w.v.u.t.s.r.q.
    6484:	70 00 6f 00 6e 00 6d 00 6c 00 6b 00 6a 00 69 00     p.o.n.m.l.k.j.i.
    6494:	68 00 67 00 66 00 65 00 64 00 63 00 62 00 61 00     h.g.f.e.d.c.b.a.
    64a4:	60 00 5f 00 5e 00 5d 00 5c 00 5b 00 5a 00 59 00     `._.^.].\.[.Z.Y.
    64b4:	58 00 57 00 56 00 55 00 54 00 53 00 52 00 51 00     X.W.V.U.T.S.R.Q.
    64c4:	50 00 4f 00 4e 00 4d 00 4c 00 4b 00 4a 00 49 00     P.O.N.M.L.K.J.I.
    64d4:	48 00 47 00 46 00 45 00 44 00 43 00 42 00 41 00     H.G.F.E.D.C.B.A.
    64e4:	40 00 3f 00 3e 00 3d 00 3c 00 3b 00 3a 00 39 00     @.?.>.=.<.;.:.9.
    64f4:	38 00 37 00 36 00 35 00 34 00 33 00 32 00 31 00     8.7.6.5.4.3.2.1.
    6504:	30 00 2f 00 2e 00 2d 00 2c 00 2b 00 2a 00 29 00     0./...-.,.+.*.).
    6514:	28 00 27 00 26 00 25 00 24 00 23 00 22 00 21 00     (.'.&.%.$.#.".!.
    6524:	20 00 1f 00 1e 00 1d 00 1c 00 1b 00 1a 00 19 00      ...............
    6534:	18 00 17 00 16 00 15 00 14 00 13 00 12 00 11 00     ................
    6544:	10 00 0f 00 0e 00 0d 00 0c 00 0b 00 0a 00 09 00     ................
    6554:	08 00 07 00 06 00 05 00 04 00 03 00 02 00 01 00     ................
	...

00006566 <f6>:
    6566:	00 00 02 00 04 00 06 00 08 00 0a 00 0c 00 0e 00     ................
    6576:	10 00 12 00 14 00 16 00 18 00 1a 00 1c 00 1e 00     ................
    6586:	20 00 22 00 24 00 26 00 28 00 2a 00 2c 00 2e 00      .".$.&.(.*.,...
    6596:	30 00 32 00 34 00 36 00 38 00 3a 00 3c 00 3e 00     0.2.4.6.8.:.<.>.
    65a6:	40 00 42 00 44 00 46 00 48 00 4a 00 4c 00 4e 00     @.B.D.F.H.J.L.N.
    65b6:	50 00 52 00 54 00 56 00 58 00 5a 00 5c 00 5e 00     P.R.T.V.X.Z.\.^.
    65c6:	60 00 62 00 64 00 66 00 68 00 6a 00 6c 00 6e 00     `.b.d.f.h.j.l.n.
    65d6:	70 00 72 00 74 00 76 00 78 00 7a 00 7c 00 7e 00     p.r.t.v.x.z.|.~.
    65e6:	80 00 82 00 84 00 86 00 88 00 8a 00 8c 00 8e 00     ................
    65f6:	90 00 92 00 94 00 96 00 98 00 9a 00 9c 00 9e 00     ................
    6606:	a0 00 a2 00 a4 00 a6 00 a8 00 aa 00 ac 00 ae 00     ................
    6616:	b0 00 b2 00 b4 00 b6 00 b8 00 ba 00 bc 00 be 00     ................
    6626:	c0 00 c2 00 c4 00 c6 00 c8 00 c8 00 c8 00 c8 00     ................
    6636:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6646:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6656:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6666:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6676:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6686:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6696:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    66a6:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    66b6:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    66c6:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    66d6:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    66e6:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    66f6:	c8 00                                               ..

000066f8 <f7>:
    66f8:	c8 00 c6 00 c4 00 c2 00 c0 00 be 00 bc 00 ba 00     ................
    6708:	b8 00 b6 00 b4 00 b2 00 b0 00 ae 00 ac 00 aa 00     ................
    6718:	a8 00 a6 00 a4 00 a2 00 a0 00 9e 00 9c 00 9a 00     ................
    6728:	98 00 96 00 94 00 92 00 90 00 8e 00 8c 00 8a 00     ................
    6738:	88 00 86 00 84 00 82 00 80 00 7e 00 7c 00 7a 00     ..........~.|.z.
    6748:	78 00 76 00 74 00 72 00 70 00 6e 00 6c 00 6a 00     x.v.t.r.p.n.l.j.
    6758:	68 00 66 00 64 00 62 00 60 00 5e 00 5c 00 5a 00     h.f.d.b.`.^.\.Z.
    6768:	58 00 56 00 54 00 52 00 50 00 4e 00 4c 00 4a 00     X.V.T.R.P.N.L.J.
    6778:	48 00 46 00 44 00 42 00 40 00 3e 00 3c 00 3a 00     H.F.D.B.@.>.<.:.
    6788:	38 00 36 00 34 00 32 00 30 00 2e 00 2c 00 2a 00     8.6.4.2.0...,.*.
    6798:	28 00 26 00 24 00 22 00 20 00 1e 00 1c 00 1a 00     (.&.$.". .......
    67a8:	18 00 16 00 14 00 12 00 10 00 0e 00 0c 00 0a 00     ................
    67b8:	08 00 06 00 04 00 02 00 00 00 00 00 00 00 00 00     ................
	...

0000688a <f8>:
    688a:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    689a:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    68aa:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    68ba:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    68ca:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    68da:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    68ea:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    68fa:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    690a:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    691a:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    692a:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    693a:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    694a:	c8 00 c8 00 c8 00 c8 00 c8 00 c6 00 c4 00 c2 00     ................
    695a:	c0 00 be 00 bc 00 ba 00 b8 00 b6 00 b4 00 b2 00     ................
    696a:	b0 00 ae 00 ac 00 aa 00 a8 00 a6 00 a4 00 a2 00     ................
    697a:	a0 00 9e 00 9c 00 9a 00 98 00 96 00 94 00 92 00     ................
    698a:	90 00 8e 00 8c 00 8a 00 88 00 86 00 84 00 82 00     ................
    699a:	80 00 7e 00 7c 00 7a 00 78 00 76 00 74 00 72 00     ..~.|.z.x.v.t.r.
    69aa:	70 00 6e 00 6c 00 6a 00 68 00 66 00 64 00 62 00     p.n.l.j.h.f.d.b.
    69ba:	60 00 5e 00 5c 00 5a 00 58 00 56 00 54 00 52 00     `.^.\.Z.X.V.T.R.
    69ca:	50 00 4e 00 4c 00 4a 00 48 00 46 00 44 00 42 00     P.N.L.J.H.F.D.B.
    69da:	40 00 3e 00 3c 00 3a 00 38 00 36 00 34 00 32 00     @.>.<.:.8.6.4.2.
    69ea:	30 00 2e 00 2c 00 2a 00 28 00 26 00 24 00 22 00     0...,.*.(.&.$.".
    69fa:	20 00 1e 00 1c 00 1a 00 18 00 16 00 14 00 12 00      ...............
    6a0a:	10 00 0e 00 0c 00 0a 00 08 00 06 00 04 00 02 00     ................
	...

00006a1c <f9>:
	...
    6ae4:	00 00 02 00 04 00 06 00 08 00 0a 00 0c 00 0e 00     ................
    6af4:	10 00 12 00 14 00 16 00 18 00 1a 00 1c 00 1e 00     ................
    6b04:	20 00 22 00 24 00 26 00 28 00 2a 00 2c 00 2e 00      .".$.&.(.*.,...
    6b14:	30 00 32 00 34 00 36 00 38 00 3a 00 3c 00 3e 00     0.2.4.6.8.:.<.>.
    6b24:	40 00 42 00 44 00 46 00 48 00 4a 00 4c 00 4e 00     @.B.D.F.H.J.L.N.
    6b34:	50 00 52 00 54 00 56 00 58 00 5a 00 5c 00 5e 00     P.R.T.V.X.Z.\.^.
    6b44:	60 00 62 00 64 00 66 00 68 00 6a 00 6c 00 6e 00     `.b.d.f.h.j.l.n.
    6b54:	70 00 72 00 74 00 76 00 78 00 7a 00 7c 00 7e 00     p.r.t.v.x.z.|.~.
    6b64:	80 00 82 00 84 00 86 00 88 00 8a 00 8c 00 8e 00     ................
    6b74:	90 00 92 00 94 00 96 00 98 00 9a 00 9c 00 9e 00     ................
    6b84:	a0 00 a2 00 a4 00 a6 00 a8 00 aa 00 ac 00 ae 00     ................
    6b94:	b0 00 b2 00 b4 00 b6 00 b8 00 ba 00 bc 00 be 00     ................
    6ba4:	c0 00 c2 00 c4 00 c6 00 c8 00                       ..........

00006bae <f10>:
    6bae:	64 00 66 00 68 00 6a 00 6c 00 6e 00 70 00 72 00     d.f.h.j.l.n.p.r.
    6bbe:	74 00 76 00 78 00 7a 00 7c 00 7e 00 80 00 82 00     t.v.x.z.|.~.....
    6bce:	84 00 86 00 88 00 8a 00 8c 00 8e 00 90 00 92 00     ................
    6bde:	94 00 96 00 98 00 9a 00 9c 00 9e 00 a0 00 a2 00     ................
    6bee:	a4 00 a6 00 a8 00 aa 00 ac 00 ae 00 b0 00 b2 00     ................
    6bfe:	b4 00 b6 00 b8 00 ba 00 bc 00 be 00 c0 00 c2 00     ................
    6c0e:	c4 00 c6 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c1e:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c2e:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c3e:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c4e:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c5e:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c6e:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c7e:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c8e:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6c9e:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6cae:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6cbe:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6cce:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6cde:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6cee:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6cfe:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6d0e:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6d1e:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6d2e:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6d3e:	c8 00                                               ..

00006d40 <f11>:
    6d40:	c8 00 c7 00 c6 00 c5 00 c4 00 c3 00 c2 00 c1 00     ................
    6d50:	c0 00 bf 00 be 00 bd 00 bc 00 bb 00 ba 00 b9 00     ................
    6d60:	b8 00 b7 00 b6 00 b5 00 b4 00 b3 00 b2 00 b1 00     ................
    6d70:	b0 00 af 00 ae 00 ad 00 ac 00 ab 00 aa 00 a9 00     ................
    6d80:	a8 00 a7 00 a6 00 a5 00 a4 00 a3 00 a2 00 a1 00     ................
    6d90:	a0 00 9f 00 9e 00 9d 00 9c 00 9b 00 9a 00 99 00     ................
    6da0:	98 00 97 00 96 00 95 00 94 00 93 00 92 00 91 00     ................
    6db0:	90 00 8f 00 8e 00 8d 00 8c 00 8b 00 8a 00 89 00     ................
    6dc0:	88 00 87 00 86 00 85 00 84 00 83 00 82 00 81 00     ................
    6dd0:	80 00 7f 00 7e 00 7d 00 7c 00 7b 00 7a 00 79 00     ....~.}.|.{.z.y.
    6de0:	78 00 77 00 76 00 75 00 74 00 73 00 72 00 71 00     x.w.v.u.t.s.r.q.
    6df0:	70 00 6f 00 6e 00 6d 00 6c 00 6b 00 6a 00 69 00     p.o.n.m.l.k.j.i.
    6e00:	68 00 67 00 66 00 65 00 64 00 64 00 64 00 64 00     h.g.f.e.d.d.d.d.
    6e10:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6e20:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6e30:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6e40:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6e50:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6e60:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6e70:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6e80:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6e90:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6ea0:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6eb0:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6ec0:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    6ed0:	64 00                                               d.

00006ed2 <f12>:
    6ed2:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6ee2:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6ef2:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6f02:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6f12:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6f22:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6f32:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6f42:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6f52:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6f62:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6f72:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6f82:	c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00 c8 00     ................
    6f92:	c8 00 c8 00 c8 00 c8 00 c8 00 c7 00 c6 00 c5 00     ................
    6fa2:	c4 00 c3 00 c2 00 c1 00 c0 00 bf 00 be 00 bd 00     ................
    6fb2:	bc 00 bb 00 ba 00 b9 00 b8 00 b7 00 b6 00 b5 00     ................
    6fc2:	b4 00 b3 00 b2 00 b1 00 b0 00 af 00 ae 00 ad 00     ................
    6fd2:	ac 00 ab 00 aa 00 a9 00 a8 00 a7 00 a6 00 a5 00     ................
    6fe2:	a4 00 a3 00 a2 00 a1 00 a0 00 9f 00 9e 00 9d 00     ................
    6ff2:	9c 00 9b 00 9a 00 99 00 98 00 97 00 96 00 95 00     ................
    7002:	94 00 93 00 92 00 91 00 90 00 8f 00 8e 00 8d 00     ................
    7012:	8c 00 8b 00 8a 00 89 00 88 00 87 00 86 00 85 00     ................
    7022:	84 00 83 00 82 00 81 00 80 00 7f 00 7e 00 7d 00     ............~.}.
    7032:	7c 00 7b 00 7a 00 79 00 78 00 77 00 76 00 75 00     |.{.z.y.x.w.v.u.
    7042:	74 00 73 00 72 00 71 00 70 00 6f 00 6e 00 6d 00     t.s.r.q.p.o.n.m.
    7052:	6c 00 6b 00 6a 00 69 00 68 00 67 00 66 00 65 00     l.k.j.i.h.g.f.e.
    7062:	64 00                                               d.

00007064 <f13>:
    7064:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    7074:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    7084:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    7094:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    70a4:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    70b4:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    70c4:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    70d4:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    70e4:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    70f4:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    7104:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    7114:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    7124:	64 00 64 00 64 00 64 00 64 00 65 00 66 00 67 00     d.d.d.d.d.e.f.g.
    7134:	68 00 69 00 6a 00 6b 00 6c 00 6d 00 6e 00 6f 00     h.i.j.k.l.m.n.o.
    7144:	70 00 71 00 72 00 73 00 74 00 75 00 76 00 77 00     p.q.r.s.t.u.v.w.
    7154:	78 00 79 00 7a 00 7b 00 7c 00 7d 00 7e 00 7f 00     x.y.z.{.|.}.~...
    7164:	80 00 81 00 82 00 83 00 84 00 85 00 86 00 87 00     ................
    7174:	88 00 89 00 8a 00 8b 00 8c 00 8d 00 8e 00 8f 00     ................
    7184:	90 00 91 00 92 00 93 00 94 00 95 00 96 00 97 00     ................
    7194:	98 00 99 00 9a 00 9b 00 9c 00 9d 00 9e 00 9f 00     ................
    71a4:	a0 00 a1 00 a2 00 a3 00 a4 00 a5 00 a6 00 a7 00     ................
    71b4:	a8 00 a9 00 aa 00 ab 00 ac 00 ad 00 ae 00 af 00     ................
    71c4:	b0 00 b1 00 b2 00 b3 00 b4 00 b5 00 b6 00 b7 00     ................
    71d4:	b8 00 b9 00 ba 00 bb 00 bc 00 bd 00 be 00 bf 00     ................
    71e4:	c0 00 c1 00 c2 00 c3 00 c4 00 c5 00 c6 00 c7 00     ................
    71f4:	c8 00                                               ..

000071f6 <f14>:
    71f6:	00 00 01 00 02 00 03 00 04 00 05 00 06 00 07 00     ................
    7206:	08 00 09 00 0a 00 0b 00 0c 00 0d 00 0e 00 0f 00     ................
    7216:	10 00 11 00 12 00 13 00 14 00 15 00 16 00 17 00     ................
    7226:	18 00 19 00 1a 00 1b 00 1c 00 1d 00 1e 00 1f 00     ................
    7236:	20 00 21 00 22 00 23 00 24 00 25 00 26 00 27 00      .!.".#.$.%.&.'.
    7246:	28 00 29 00 2a 00 2b 00 2c 00 2d 00 2e 00 2f 00     (.).*.+.,.-.../.
    7256:	30 00 31 00 32 00 33 00 34 00 35 00 36 00 37 00     0.1.2.3.4.5.6.7.
    7266:	38 00 39 00 3a 00 3b 00 3c 00 3d 00 3e 00 3f 00     8.9.:.;.<.=.>.?.
    7276:	40 00 41 00 42 00 43 00 44 00 45 00 46 00 47 00     @.A.B.C.D.E.F.G.
    7286:	48 00 49 00 4a 00 4b 00 4c 00 4d 00 4e 00 4f 00     H.I.J.K.L.M.N.O.
    7296:	50 00 51 00 52 00 53 00 54 00 55 00 56 00 57 00     P.Q.R.S.T.U.V.W.
    72a6:	58 00 59 00 5a 00 5b 00 5c 00 5d 00 5e 00 5f 00     X.Y.Z.[.\.].^._.
    72b6:	60 00 61 00 62 00 63 00 64 00 64 00 64 00 64 00     `.a.b.c.d.d.d.d.
    72c6:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    72d6:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    72e6:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    72f6:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    7306:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    7316:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    7326:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    7336:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    7346:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    7356:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    7366:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    7376:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    7386:	64 00                                               d.

00007388 <f15>:
    7388:	64 00 63 00 62 00 61 00 60 00 5f 00 5e 00 5d 00     d.c.b.a.`._.^.].
    7398:	5c 00 5b 00 5a 00 59 00 58 00 57 00 56 00 55 00     \.[.Z.Y.X.W.V.U.
    73a8:	54 00 53 00 52 00 51 00 50 00 4f 00 4e 00 4d 00     T.S.R.Q.P.O.N.M.
    73b8:	4c 00 4b 00 4a 00 49 00 48 00 47 00 46 00 45 00     L.K.J.I.H.G.F.E.
    73c8:	44 00 43 00 42 00 41 00 40 00 3f 00 3e 00 3d 00     D.C.B.A.@.?.>.=.
    73d8:	3c 00 3b 00 3a 00 39 00 38 00 37 00 36 00 35 00     <.;.:.9.8.7.6.5.
    73e8:	34 00 33 00 32 00 31 00 30 00 2f 00 2e 00 2d 00     4.3.2.1.0./...-.
    73f8:	2c 00 2b 00 2a 00 29 00 28 00 27 00 26 00 25 00     ,.+.*.).(.'.&.%.
    7408:	24 00 23 00 22 00 21 00 20 00 1f 00 1e 00 1d 00     $.#.".!. .......
    7418:	1c 00 1b 00 1a 00 19 00 18 00 17 00 16 00 15 00     ................
    7428:	14 00 13 00 12 00 11 00 10 00 0f 00 0e 00 0d 00     ................
    7438:	0c 00 0b 00 0a 00 09 00 08 00 07 00 06 00 05 00     ................
    7448:	04 00 03 00 02 00 01 00 00 00 00 00 00 00 00 00     ................
	...

0000751a <f16>:
    751a:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    752a:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    753a:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    754a:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    755a:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    756a:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    757a:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    758a:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    759a:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    75aa:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    75ba:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    75ca:	64 00 64 00 64 00 64 00 64 00 64 00 64 00 64 00     d.d.d.d.d.d.d.d.
    75da:	64 00 64 00 64 00 64 00 64 00 63 00 62 00 61 00     d.d.d.d.d.c.b.a.
    75ea:	60 00 5f 00 5e 00 5d 00 5c 00 5b 00 5a 00 59 00     `._.^.].\.[.Z.Y.
    75fa:	58 00 57 00 56 00 55 00 54 00 53 00 52 00 51 00     X.W.V.U.T.S.R.Q.
    760a:	50 00 4f 00 4e 00 4d 00 4c 00 4b 00 4a 00 49 00     P.O.N.M.L.K.J.I.
    761a:	48 00 47 00 46 00 45 00 44 00 43 00 42 00 41 00     H.G.F.E.D.C.B.A.
    762a:	40 00 3f 00 3e 00 3d 00 3c 00 3b 00 3a 00 39 00     @.?.>.=.<.;.:.9.
    763a:	38 00 37 00 36 00 35 00 34 00 33 00 32 00 31 00     8.7.6.5.4.3.2.1.
    764a:	30 00 2f 00 2e 00 2d 00 2c 00 2b 00 2a 00 29 00     0./...-.,.+.*.).
    765a:	28 00 27 00 26 00 25 00 24 00 23 00 22 00 21 00     (.'.&.%.$.#.".!.
    766a:	20 00 1f 00 1e 00 1d 00 1c 00 1b 00 1a 00 19 00      ...............
    767a:	18 00 17 00 16 00 15 00 14 00 13 00 12 00 11 00     ................
    768a:	10 00 0f 00 0e 00 0d 00 0c 00 0b 00 0a 00 09 00     ................
    769a:	08 00 07 00 06 00 05 00 04 00 03 00 02 00 01 00     ................
	...

000076ac <f17>:
	...
    7774:	00 00 01 00 02 00 03 00 04 00 05 00 06 00 07 00     ................
    7784:	08 00 09 00 0a 00 0b 00 0c 00 0d 00 0e 00 0f 00     ................
    7794:	10 00 11 00 12 00 13 00 14 00 15 00 16 00 17 00     ................
    77a4:	18 00 19 00 1a 00 1b 00 1c 00 1d 00 1e 00 1f 00     ................
    77b4:	20 00 21 00 22 00 23 00 24 00 25 00 26 00 27 00      .!.".#.$.%.&.'.
    77c4:	28 00 29 00 2a 00 2b 00 2c 00 2d 00 2e 00 2f 00     (.).*.+.,.-.../.
    77d4:	30 00 31 00 32 00 33 00 34 00 35 00 36 00 37 00     0.1.2.3.4.5.6.7.
    77e4:	38 00 39 00 3a 00 3b 00 3c 00 3d 00 3e 00 3f 00     8.9.:.;.<.=.>.?.
    77f4:	40 00 41 00 42 00 43 00 44 00 45 00 46 00 47 00     @.A.B.C.D.E.F.G.
    7804:	48 00 49 00 4a 00 4b 00 4c 00 4d 00 4e 00 4f 00     H.I.J.K.L.M.N.O.
    7814:	50 00 51 00 52 00 53 00 54 00 55 00 56 00 57 00     P.Q.R.S.T.U.V.W.
    7824:	58 00 59 00 5a 00 5b 00 5c 00 5d 00 5e 00 5f 00     X.Y.Z.[.\.].^._.
    7834:	60 00 61 00 62 00 63 00 64 00                       `.a.b.c.d.

0000783e <f18>:
    783e:	00 00 02 00 04 00 06 00 08 00 0a 00 0c 00 0e 00     ................
    784e:	10 00 12 00 14 00 16 00 18 00 1a 00 1c 00 1e 00     ................
    785e:	20 00 22 00 24 00 26 00 28 00 2a 00 2c 00 2e 00      .".$.&.(.*.,...
    786e:	30 00 32 00 34 00 36 00 38 00 3a 00 3c 00 3e 00     0.2.4.6.8.:.<.>.
    787e:	40 00 42 00 44 00 46 00 48 00 4a 00 4c 00 4e 00     @.B.D.F.H.J.L.N.
    788e:	50 00 52 00 54 00 56 00 58 00 5a 00 5c 00 5e 00     P.R.T.V.X.Z.\.^.
    789e:	60 00 62 00 64 00 66 00 68 00 6a 00 6c 00 6e 00     `.b.d.f.h.j.l.n.
    78ae:	70 00 72 00 74 00 76 00 78 00 7a 00 7c 00 7e 00     p.r.t.v.x.z.|.~.
    78be:	80 00 82 00 84 00 86 00 88 00 8a 00 8c 00 8e 00     ................
    78ce:	90 00 92 00 94 00 96 00 98 00 9a 00 9c 00 9e 00     ................
    78de:	a0 00 a2 00 a4 00 a6 00 a8 00 aa 00 ac 00 ae 00     ................
    78ee:	b0 00 b2 00 b4 00 b6 00 b8 00 ba 00 bc 00 be 00     ................
    78fe:	c0 00 c2 00 c4 00 c6 00 c8 00 c6 00 c4 00 c2 00     ................
    790e:	c0 00 be 00 bc 00 ba 00 b8 00 b6 00 b4 00 b2 00     ................
    791e:	b0 00 ae 00 ac 00 aa 00 a8 00 a6 00 a4 00 a2 00     ................
    792e:	a0 00 9e 00 9c 00 9a 00 98 00 96 00 94 00 92 00     ................
    793e:	90 00 8e 00 8c 00 8a 00 88 00 86 00 84 00 82 00     ................
    794e:	80 00 7e 00 7c 00 7a 00 78 00 76 00 74 00 72 00     ..~.|.z.x.v.t.r.
    795e:	70 00 6e 00 6c 00 6a 00 68 00 66 00 64 00 62 00     p.n.l.j.h.f.d.b.
    796e:	60 00 5e 00 5c 00 5a 00 58 00 56 00 54 00 52 00     `.^.\.Z.X.V.T.R.
    797e:	50 00 4e 00 4c 00 4a 00 48 00 46 00 44 00 42 00     P.N.L.J.H.F.D.B.
    798e:	40 00 3e 00 3c 00 3a 00 38 00 36 00 34 00 32 00     @.>.<.:.8.6.4.2.
    799e:	30 00 2e 00 2c 00 2a 00 28 00 26 00 24 00 22 00     0...,.*.(.&.$.".
    79ae:	20 00 1e 00 1c 00 1a 00 18 00 16 00 14 00 12 00      ...............
    79be:	10 00 0e 00 0c 00 0a 00 08 00 06 00 04 00 02 00     ................
	...

000079d0 <f19>:
    79d0:	c8 00 c6 00 c4 00 c2 00 c0 00 be 00 bc 00 ba 00     ................
    79e0:	b8 00 b6 00 b4 00 b2 00 b0 00 ae 00 ac 00 aa 00     ................
    79f0:	a8 00 a6 00 a4 00 a2 00 a0 00 9e 00 9c 00 9a 00     ................
    7a00:	98 00 96 00 94 00 92 00 90 00 8e 00 8c 00 8a 00     ................
    7a10:	88 00 86 00 84 00 82 00 80 00 7e 00 7c 00 7a 00     ..........~.|.z.
    7a20:	78 00 76 00 74 00 72 00 70 00 6e 00 6c 00 6a 00     x.v.t.r.p.n.l.j.
    7a30:	68 00 66 00 64 00 62 00 60 00 5e 00 5c 00 5a 00     h.f.d.b.`.^.\.Z.
    7a40:	58 00 56 00 54 00 52 00 50 00 4e 00 4c 00 4a 00     X.V.T.R.P.N.L.J.
    7a50:	48 00 46 00 44 00 42 00 40 00 3e 00 3c 00 3a 00     H.F.D.B.@.>.<.:.
    7a60:	38 00 36 00 34 00 32 00 30 00 2e 00 2c 00 2a 00     8.6.4.2.0...,.*.
    7a70:	28 00 26 00 24 00 22 00 20 00 1e 00 1c 00 1a 00     (.&.$.". .......
    7a80:	18 00 16 00 14 00 12 00 10 00 0e 00 0c 00 0a 00     ................
    7a90:	08 00 06 00 04 00 02 00 00 00 02 00 04 00 06 00     ................
    7aa0:	08 00 0a 00 0c 00 0e 00 10 00 12 00 14 00 16 00     ................
    7ab0:	18 00 1a 00 1c 00 1e 00 20 00 22 00 24 00 26 00     ........ .".$.&.
    7ac0:	28 00 2a 00 2c 00 2e 00 30 00 32 00 34 00 36 00     (.*.,...0.2.4.6.
    7ad0:	38 00 3a 00 3c 00 3e 00 40 00 42 00 44 00 46 00     8.:.<.>.@.B.D.F.
    7ae0:	48 00 4a 00 4c 00 4e 00 50 00 52 00 54 00 56 00     H.J.L.N.P.R.T.V.
    7af0:	58 00 5a 00 5c 00 5e 00 60 00 62 00 64 00 66 00     X.Z.\.^.`.b.d.f.
    7b00:	68 00 6a 00 6c 00 6e 00 70 00 72 00 74 00 76 00     h.j.l.n.p.r.t.v.
    7b10:	78 00 7a 00 7c 00 7e 00 80 00 82 00 84 00 86 00     x.z.|.~.........
    7b20:	88 00 8a 00 8c 00 8e 00 90 00 92 00 94 00 96 00     ................
    7b30:	98 00 9a 00 9c 00 9e 00 a0 00 a2 00 a4 00 a6 00     ................
    7b40:	a8 00 aa 00 ac 00 ae 00 b0 00 b2 00 b4 00 b6 00     ................
    7b50:	b8 00 ba 00 bc 00 be 00 c0 00 c2 00 c4 00 c6 00     ................
    7b60:	c8 00                                               ..

00007b62 <f20>:
    7b62:	64 00 65 00 66 00 67 00 68 00 69 00 6a 00 6b 00     d.e.f.g.h.i.j.k.
    7b72:	6c 00 6d 00 6e 00 6f 00 70 00 71 00 72 00 73 00     l.m.n.o.p.q.r.s.
    7b82:	74 00 75 00 76 00 77 00 78 00 79 00 7a 00 7b 00     t.u.v.w.x.y.z.{.
    7b92:	7c 00 7d 00 7e 00 7f 00 80 00 81 00 82 00 83 00     |.}.~...........
    7ba2:	84 00 85 00 86 00 87 00 88 00 89 00 8a 00 8b 00     ................
    7bb2:	8c 00 8d 00 8e 00 8f 00 90 00 91 00 92 00 93 00     ................
    7bc2:	94 00 95 00 96 00 97 00 98 00 99 00 9a 00 9b 00     ................
    7bd2:	9c 00 9d 00 9e 00 9f 00 a0 00 a1 00 a2 00 a3 00     ................
    7be2:	a4 00 a5 00 a6 00 a7 00 a8 00 a9 00 aa 00 ab 00     ................
    7bf2:	ac 00 ad 00 ae 00 af 00 b0 00 b1 00 b2 00 b3 00     ................
    7c02:	b4 00 b5 00 b6 00 b7 00 b8 00 b9 00 ba 00 bb 00     ................
    7c12:	bc 00 bd 00 be 00 bf 00 c0 00 c1 00 c2 00 c3 00     ................
    7c22:	c4 00 c5 00 c6 00 c7 00 c8 00 c7 00 c6 00 c5 00     ................
    7c32:	c4 00 c3 00 c2 00 c1 00 c0 00 bf 00 be 00 bd 00     ................
    7c42:	bc 00 bb 00 ba 00 b9 00 b8 00 b7 00 b6 00 b5 00     ................
    7c52:	b4 00 b3 00 b2 00 b1 00 b0 00 af 00 ae 00 ad 00     ................
    7c62:	ac 00 ab 00 aa 00 a9 00 a8 00 a7 00 a6 00 a5 00     ................
    7c72:	a4 00 a3 00 a2 00 a1 00 a0 00 9f 00 9e 00 9d 00     ................
    7c82:	9c 00 9b 00 9a 00 99 00 98 00 97 00 96 00 95 00     ................
    7c92:	94 00 93 00 92 00 91 00 90 00 8f 00 8e 00 8d 00     ................
    7ca2:	8c 00 8b 00 8a 00 89 00 88 00 87 00 86 00 85 00     ................
    7cb2:	84 00 83 00 82 00 81 00 80 00 7f 00 7e 00 7d 00     ............~.}.
    7cc2:	7c 00 7b 00 7a 00 79 00 78 00 77 00 76 00 75 00     |.{.z.y.x.w.v.u.
    7cd2:	74 00 73 00 72 00 71 00 70 00 6f 00 6e 00 6d 00     t.s.r.q.p.o.n.m.
    7ce2:	6c 00 6b 00 6a 00 69 00 68 00 67 00 66 00 65 00     l.k.j.i.h.g.f.e.
    7cf2:	64 00                                               d.

00007cf4 <f21>:
    7cf4:	00 00 01 00 02 00 03 00 04 00 05 00 06 00 07 00     ................
    7d04:	08 00 09 00 0a 00 0b 00 0c 00 0d 00 0e 00 0f 00     ................
    7d14:	10 00 11 00 12 00 13 00 14 00 15 00 16 00 17 00     ................
    7d24:	18 00 19 00 1a 00 1b 00 1c 00 1d 00 1e 00 1f 00     ................
    7d34:	20 00 21 00 22 00 23 00 24 00 25 00 26 00 27 00      .!.".#.$.%.&.'.
    7d44:	28 00 29 00 2a 00 2b 00 2c 00 2d 00 2e 00 2f 00     (.).*.+.,.-.../.
    7d54:	30 00 31 00 32 00 33 00 34 00 35 00 36 00 37 00     0.1.2.3.4.5.6.7.
    7d64:	38 00 39 00 3a 00 3b 00 3c 00 3d 00 3e 00 3f 00     8.9.:.;.<.=.>.?.
    7d74:	40 00 41 00 42 00 43 00 44 00 45 00 46 00 47 00     @.A.B.C.D.E.F.G.
    7d84:	48 00 49 00 4a 00 4b 00 4c 00 4d 00 4e 00 4f 00     H.I.J.K.L.M.N.O.
    7d94:	50 00 51 00 52 00 53 00 54 00 55 00 56 00 57 00     P.Q.R.S.T.U.V.W.
    7da4:	58 00 59 00 5a 00 5b 00 5c 00 5d 00 5e 00 5f 00     X.Y.Z.[.\.].^._.
    7db4:	60 00 61 00 62 00 63 00 64 00 63 00 62 00 61 00     `.a.b.c.d.c.b.a.
    7dc4:	60 00 5f 00 5e 00 5d 00 5c 00 5b 00 5a 00 59 00     `._.^.].\.[.Z.Y.
    7dd4:	58 00 57 00 56 00 55 00 54 00 53 00 52 00 51 00     X.W.V.U.T.S.R.Q.
    7de4:	50 00 4f 00 4e 00 4d 00 4c 00 4b 00 4a 00 49 00     P.O.N.M.L.K.J.I.
    7df4:	48 00 47 00 46 00 45 00 44 00 43 00 42 00 41 00     H.G.F.E.D.C.B.A.
    7e04:	40 00 3f 00 3e 00 3d 00 3c 00 3b 00 3a 00 39 00     @.?.>.=.<.;.:.9.
    7e14:	38 00 37 00 36 00 35 00 34 00 33 00 32 00 31 00     8.7.6.5.4.3.2.1.
    7e24:	30 00 2f 00 2e 00 2d 00 2c 00 2b 00 2a 00 29 00     0./...-.,.+.*.).
    7e34:	28 00 27 00 26 00 25 00 24 00 23 00 22 00 21 00     (.'.&.%.$.#.".!.
    7e44:	20 00 1f 00 1e 00 1d 00 1c 00 1b 00 1a 00 19 00      ...............
    7e54:	18 00 17 00 16 00 15 00 14 00 13 00 12 00 11 00     ................
    7e64:	10 00 0f 00 0e 00 0d 00 0c 00 0b 00 0a 00 09 00     ................
    7e74:	08 00 07 00 06 00 05 00 04 00 03 00 02 00 01 00     ................
	...

00007e86 <f22>:
    7e86:	c8 00 c7 00 c6 00 c5 00 c4 00 c3 00 c2 00 c1 00     ................
    7e96:	c0 00 bf 00 be 00 bd 00 bc 00 bb 00 ba 00 b9 00     ................
    7ea6:	b8 00 b7 00 b6 00 b5 00 b4 00 b3 00 b2 00 b1 00     ................
    7eb6:	b0 00 af 00 ae 00 ad 00 ac 00 ab 00 aa 00 a9 00     ................
    7ec6:	a8 00 a7 00 a6 00 a5 00 a4 00 a3 00 a2 00 a1 00     ................
    7ed6:	a0 00 9f 00 9e 00 9d 00 9c 00 9b 00 9a 00 99 00     ................
    7ee6:	98 00 97 00 96 00 95 00 94 00 93 00 92 00 91 00     ................
    7ef6:	90 00 8f 00 8e 00 8d 00 8c 00 8b 00 8a 00 89 00     ................
    7f06:	88 00 87 00 86 00 85 00 84 00 83 00 82 00 81 00     ................
    7f16:	80 00 7f 00 7e 00 7d 00 7c 00 7b 00 7a 00 79 00     ....~.}.|.{.z.y.
    7f26:	78 00 77 00 76 00 75 00 74 00 73 00 72 00 71 00     x.w.v.u.t.s.r.q.
    7f36:	70 00 6f 00 6e 00 6d 00 6c 00 6b 00 6a 00 69 00     p.o.n.m.l.k.j.i.
    7f46:	68 00 67 00 66 00 65 00 64 00 65 00 66 00 67 00     h.g.f.e.d.e.f.g.
    7f56:	68 00 69 00 6a 00 6b 00 6c 00 6d 00 6e 00 6f 00     h.i.j.k.l.m.n.o.
    7f66:	70 00 71 00 72 00 73 00 74 00 75 00 76 00 77 00     p.q.r.s.t.u.v.w.
    7f76:	78 00 79 00 7a 00 7b 00 7c 00 7d 00 7e 00 7f 00     x.y.z.{.|.}.~...
    7f86:	80 00 81 00 82 00 83 00 84 00 85 00 86 00 87 00     ................
    7f96:	88 00 89 00 8a 00 8b 00 8c 00 8d 00 8e 00 8f 00     ................
    7fa6:	90 00 91 00 92 00 93 00 94 00 95 00 96 00 97 00     ................
    7fb6:	98 00 99 00 9a 00 9b 00 9c 00 9d 00 9e 00 9f 00     ................
    7fc6:	a0 00 a1 00 a2 00 a3 00 a4 00 a5 00 a6 00 a7 00     ................
    7fd6:	a8 00 a9 00 aa 00 ab 00 ac 00 ad 00 ae 00 af 00     ................
    7fe6:	b0 00 b1 00 b2 00 b3 00 b4 00 b5 00 b6 00 b7 00     ................
    7ff6:	b8 00 b9 00 ba 00 bb 00 bc 00 bd 00 be 00 bf 00     ................
    8006:	c0 00 c1 00 c2 00 c3 00 c4 00 c5 00 c6 00 c7 00     ................
    8016:	c8 00                                               ..

00008018 <f23>:
    8018:	64 00 63 00 62 00 61 00 60 00 5f 00 5e 00 5d 00     d.c.b.a.`._.^.].
    8028:	5c 00 5b 00 5a 00 59 00 58 00 57 00 56 00 55 00     \.[.Z.Y.X.W.V.U.
    8038:	54 00 53 00 52 00 51 00 50 00 4f 00 4e 00 4d 00     T.S.R.Q.P.O.N.M.
    8048:	4c 00 4b 00 4a 00 49 00 48 00 47 00 46 00 45 00     L.K.J.I.H.G.F.E.
    8058:	44 00 43 00 42 00 41 00 40 00 3f 00 3e 00 3d 00     D.C.B.A.@.?.>.=.
    8068:	3c 00 3b 00 3a 00 39 00 38 00 37 00 36 00 35 00     <.;.:.9.8.7.6.5.
    8078:	34 00 33 00 32 00 31 00 30 00 2f 00 2e 00 2d 00     4.3.2.1.0./...-.
    8088:	2c 00 2b 00 2a 00 29 00 28 00 27 00 26 00 25 00     ,.+.*.).(.'.&.%.
    8098:	24 00 23 00 22 00 21 00 20 00 1f 00 1e 00 1d 00     $.#.".!. .......
    80a8:	1c 00 1b 00 1a 00 19 00 18 00 17 00 16 00 15 00     ................
    80b8:	14 00 13 00 12 00 11 00 10 00 0f 00 0e 00 0d 00     ................
    80c8:	0c 00 0b 00 0a 00 09 00 08 00 07 00 06 00 05 00     ................
    80d8:	04 00 03 00 02 00 01 00 00 00 01 00 02 00 03 00     ................
    80e8:	04 00 05 00 06 00 07 00 08 00 09 00 0a 00 0b 00     ................
    80f8:	0c 00 0d 00 0e 00 0f 00 10 00 11 00 12 00 13 00     ................
    8108:	14 00 15 00 16 00 17 00 18 00 19 00 1a 00 1b 00     ................
    8118:	1c 00 1d 00 1e 00 1f 00 20 00 21 00 22 00 23 00     ........ .!.".#.
    8128:	24 00 25 00 26 00 27 00 28 00 29 00 2a 00 2b 00     $.%.&.'.(.).*.+.
    8138:	2c 00 2d 00 2e 00 2f 00 30 00 31 00 32 00 33 00     ,.-.../.0.1.2.3.
    8148:	34 00 35 00 36 00 37 00 38 00 39 00 3a 00 3b 00     4.5.6.7.8.9.:.;.
    8158:	3c 00 3d 00 3e 00 3f 00 40 00 41 00 42 00 43 00     <.=.>.?.@.A.B.C.
    8168:	44 00 45 00 46 00 47 00 48 00 49 00 4a 00 4b 00     D.E.F.G.H.I.J.K.
    8178:	4c 00 4d 00 4e 00 4f 00 50 00 51 00 52 00 53 00     L.M.N.O.P.Q.R.S.
    8188:	54 00 55 00 56 00 57 00 58 00 59 00 5a 00 5b 00     T.U.V.W.X.Y.Z.[.
    8198:	5c 00 5d 00 5e 00 5f 00 60 00 61 00 62 00 63 00     \.].^._.`.a.b.c.
    81a8:	64 00                                               d.

000081aa <f24>:
    81aa:	64 00 65 00 66 00 67 00 68 00 69 00 6a 00 6b 00     d.e.f.g.h.i.j.k.
    81ba:	6c 00 6d 00 6e 00 6f 00 70 00 71 00 72 00 73 00     l.m.n.o.p.q.r.s.
    81ca:	74 00 75 00 76 00 77 00 78 00 79 00 7a 00 7b 00     t.u.v.w.x.y.z.{.
    81da:	7c 00 7d 00 7e 00 7f 00 80 00 81 00 82 00 83 00     |.}.~...........
    81ea:	84 00 85 00 86 00 87 00 88 00 89 00 8a 00 8b 00     ................
    81fa:	8c 00 8d 00 8e 00 8f 00 90 00 91 00 92 00 93 00     ................
    820a:	94 00 95 00 96 00 97 00 98 00 99 00 9a 00 9b 00     ................
    821a:	9c 00 9d 00 9e 00 9f 00 a0 00 a1 00 a2 00 a3 00     ................
    822a:	a4 00 a5 00 a6 00 a7 00 a8 00 a9 00 aa 00 ab 00     ................
    823a:	ac 00 ad 00 ae 00 af 00 b0 00 b1 00 b2 00 b3 00     ................
    824a:	b4 00 b5 00 b6 00 b7 00 b8 00 b9 00 ba 00 bb 00     ................
    825a:	bc 00 bd 00 be 00 bf 00 c0 00 c1 00 c2 00 c3 00     ................
    826a:	c4 00 c5 00 c6 00 c7 00 c8 00 c6 00 c4 00 c2 00     ................
    827a:	c0 00 be 00 bc 00 ba 00 b8 00 b6 00 b4 00 b2 00     ................
    828a:	b0 00 ae 00 ac 00 aa 00 a8 00 a6 00 a4 00 a2 00     ................
    829a:	a0 00 9e 00 9c 00 9a 00 98 00 96 00 94 00 92 00     ................
    82aa:	90 00 8e 00 8c 00 8a 00 88 00 86 00 84 00 82 00     ................
    82ba:	80 00 7e 00 7c 00 7a 00 78 00 76 00 74 00 72 00     ..~.|.z.x.v.t.r.
    82ca:	70 00 6e 00 6c 00 6a 00 68 00 66 00 64 00 62 00     p.n.l.j.h.f.d.b.
    82da:	60 00 5e 00 5c 00 5a 00 58 00 56 00 54 00 52 00     `.^.\.Z.X.V.T.R.
    82ea:	50 00 4e 00 4c 00 4a 00 48 00 46 00 44 00 42 00     P.N.L.J.H.F.D.B.
    82fa:	40 00 3e 00 3c 00 3a 00 38 00 36 00 34 00 32 00     @.>.<.:.8.6.4.2.
    830a:	30 00 2e 00 2c 00 2a 00 28 00 26 00 24 00 22 00     0...,.*.(.&.$.".
    831a:	20 00 1e 00 1c 00 1a 00 18 00 16 00 14 00 12 00      ...............
    832a:	10 00 0e 00 0c 00 0a 00 08 00 06 00 04 00 02 00     ................
	...

0000833c <f25>:
    833c:	00 00 02 00 04 00 06 00 08 00 0a 00 0c 00 0e 00     ................
    834c:	10 00 12 00 14 00 16 00 18 00 1a 00 1c 00 1e 00     ................
    835c:	20 00 22 00 24 00 26 00 28 00 2a 00 2c 00 2e 00      .".$.&.(.*.,...
    836c:	30 00 32 00 34 00 36 00 38 00 3a 00 3c 00 3e 00     0.2.4.6.8.:.<.>.
    837c:	40 00 42 00 44 00 46 00 48 00 4a 00 4c 00 4e 00     @.B.D.F.H.J.L.N.
    838c:	50 00 52 00 54 00 56 00 58 00 5a 00 5c 00 5e 00     P.R.T.V.X.Z.\.^.
    839c:	60 00 62 00 64 00 66 00 68 00 6a 00 6c 00 6e 00     `.b.d.f.h.j.l.n.
    83ac:	70 00 72 00 74 00 76 00 78 00 7a 00 7c 00 7e 00     p.r.t.v.x.z.|.~.
    83bc:	80 00 82 00 84 00 86 00 88 00 8a 00 8c 00 8e 00     ................
    83cc:	90 00 92 00 94 00 96 00 98 00 9a 00 9c 00 9e 00     ................
    83dc:	a0 00 a2 00 a4 00 a6 00 a8 00 aa 00 ac 00 ae 00     ................
    83ec:	b0 00 b2 00 b4 00 b6 00 b8 00 ba 00 bc 00 be 00     ................
    83fc:	c0 00 c2 00 c4 00 c6 00 c8 00 c7 00 c6 00 c5 00     ................
    840c:	c4 00 c3 00 c2 00 c1 00 c0 00 bf 00 be 00 bd 00     ................
    841c:	bc 00 bb 00 ba 00 b9 00 b8 00 b7 00 b6 00 b5 00     ................
    842c:	b4 00 b3 00 b2 00 b1 00 b0 00 af 00 ae 00 ad 00     ................
    843c:	ac 00 ab 00 aa 00 a9 00 a8 00 a7 00 a6 00 a5 00     ................
    844c:	a4 00 a3 00 a2 00 a1 00 a0 00 9f 00 9e 00 9d 00     ................
    845c:	9c 00 9b 00 9a 00 99 00 98 00 97 00 96 00 95 00     ................
    846c:	94 00 93 00 92 00 91 00 90 00 8f 00 8e 00 8d 00     ................
    847c:	8c 00 8b 00 8a 00 89 00 88 00 87 00 86 00 85 00     ................
    848c:	84 00 83 00 82 00 81 00 80 00 7f 00 7e 00 7d 00     ............~.}.
    849c:	7c 00 7b 00 7a 00 79 00 78 00 77 00 76 00 75 00     |.{.z.y.x.w.v.u.
    84ac:	74 00 73 00 72 00 71 00 70 00 6f 00 6e 00 6d 00     t.s.r.q.p.o.n.m.
    84bc:	6c 00 6b 00 6a 00 69 00 68 00 67 00 66 00 65 00     l.k.j.i.h.g.f.e.
    84cc:	64 00                                               d.

000084ce <f26>:
    84ce:	64 00 63 00 62 00 61 00 60 00 5f 00 5e 00 5d 00     d.c.b.a.`._.^.].
    84de:	5c 00 5b 00 5a 00 59 00 58 00 57 00 56 00 55 00     \.[.Z.Y.X.W.V.U.
    84ee:	54 00 53 00 52 00 51 00 50 00 4f 00 4e 00 4d 00     T.S.R.Q.P.O.N.M.
    84fe:	4c 00 4b 00 4a 00 49 00 48 00 47 00 46 00 45 00     L.K.J.I.H.G.F.E.
    850e:	44 00 43 00 42 00 41 00 40 00 3f 00 3e 00 3d 00     D.C.B.A.@.?.>.=.
    851e:	3c 00 3b 00 3a 00 39 00 38 00 37 00 36 00 35 00     <.;.:.9.8.7.6.5.
    852e:	34 00 33 00 32 00 31 00 30 00 2f 00 2e 00 2d 00     4.3.2.1.0./...-.
    853e:	2c 00 2b 00 2a 00 29 00 28 00 27 00 26 00 25 00     ,.+.*.).(.'.&.%.
    854e:	24 00 23 00 22 00 21 00 20 00 1f 00 1e 00 1d 00     $.#.".!. .......
    855e:	1c 00 1b 00 1a 00 19 00 18 00 17 00 16 00 15 00     ................
    856e:	14 00 13 00 12 00 11 00 10 00 0f 00 0e 00 0d 00     ................
    857e:	0c 00 0b 00 0a 00 09 00 08 00 07 00 06 00 05 00     ................
    858e:	04 00 03 00 02 00 01 00 00 00 02 00 04 00 06 00     ................
    859e:	08 00 0a 00 0c 00 0e 00 10 00 12 00 14 00 16 00     ................
    85ae:	18 00 1a 00 1c 00 1e 00 20 00 22 00 24 00 26 00     ........ .".$.&.
    85be:	28 00 2a 00 2c 00 2e 00 30 00 32 00 34 00 36 00     (.*.,...0.2.4.6.
    85ce:	38 00 3a 00 3c 00 3e 00 40 00 42 00 44 00 46 00     8.:.<.>.@.B.D.F.
    85de:	48 00 4a 00 4c 00 4e 00 50 00 52 00 54 00 56 00     H.J.L.N.P.R.T.V.
    85ee:	58 00 5a 00 5c 00 5e 00 60 00 62 00 64 00 66 00     X.Z.\.^.`.b.d.f.
    85fe:	68 00 6a 00 6c 00 6e 00 70 00 72 00 74 00 76 00     h.j.l.n.p.r.t.v.
    860e:	78 00 7a 00 7c 00 7e 00 80 00 82 00 84 00 86 00     x.z.|.~.........
    861e:	88 00 8a 00 8c 00 8e 00 90 00 92 00 94 00 96 00     ................
    862e:	98 00 9a 00 9c 00 9e 00 a0 00 a2 00 a4 00 a6 00     ................
    863e:	a8 00 aa 00 ac 00 ae 00 b0 00 b2 00 b4 00 b6 00     ................
    864e:	b8 00 ba 00 bc 00 be 00 c0 00 c2 00 c4 00 c6 00     ................
    865e:	c8 00                                               ..

00008660 <f27>:
    8660:	c8 00 c6 00 c4 00 c2 00 c0 00 be 00 bc 00 ba 00     ................
    8670:	b8 00 b6 00 b4 00 b2 00 b0 00 ae 00 ac 00 aa 00     ................
    8680:	a8 00 a6 00 a4 00 a2 00 a0 00 9e 00 9c 00 9a 00     ................
    8690:	98 00 96 00 94 00 92 00 90 00 8e 00 8c 00 8a 00     ................
    86a0:	88 00 86 00 84 00 82 00 80 00 7e 00 7c 00 7a 00     ..........~.|.z.
    86b0:	78 00 76 00 74 00 72 00 70 00 6e 00 6c 00 6a 00     x.v.t.r.p.n.l.j.
    86c0:	68 00 66 00 64 00 62 00 60 00 5e 00 5c 00 5a 00     h.f.d.b.`.^.\.Z.
    86d0:	58 00 56 00 54 00 52 00 50 00 4e 00 4c 00 4a 00     X.V.T.R.P.N.L.J.
    86e0:	48 00 46 00 44 00 42 00 40 00 3e 00 3c 00 3a 00     H.F.D.B.@.>.<.:.
    86f0:	38 00 36 00 34 00 32 00 30 00 2e 00 2c 00 2a 00     8.6.4.2.0...,.*.
    8700:	28 00 26 00 24 00 22 00 20 00 1e 00 1c 00 1a 00     (.&.$.". .......
    8710:	18 00 16 00 14 00 12 00 10 00 0e 00 0c 00 0a 00     ................
    8720:	08 00 06 00 04 00 02 00 00 00 01 00 02 00 03 00     ................
    8730:	04 00 05 00 06 00 07 00 08 00 09 00 0a 00 0b 00     ................
    8740:	0c 00 0d 00 0e 00 0f 00 10 00 11 00 12 00 13 00     ................
    8750:	14 00 15 00 16 00 17 00 18 00 19 00 1a 00 1b 00     ................
    8760:	1c 00 1d 00 1e 00 1f 00 20 00 21 00 22 00 23 00     ........ .!.".#.
    8770:	24 00 25 00 26 00 27 00 28 00 29 00 2a 00 2b 00     $.%.&.'.(.).*.+.
    8780:	2c 00 2d 00 2e 00 2f 00 30 00 31 00 32 00 33 00     ,.-.../.0.1.2.3.
    8790:	34 00 35 00 36 00 37 00 38 00 39 00 3a 00 3b 00     4.5.6.7.8.9.:.;.
    87a0:	3c 00 3d 00 3e 00 3f 00 40 00 41 00 42 00 43 00     <.=.>.?.@.A.B.C.
    87b0:	44 00 45 00 46 00 47 00 48 00 49 00 4a 00 4b 00     D.E.F.G.H.I.J.K.
    87c0:	4c 00 4d 00 4e 00 4f 00 50 00 51 00 52 00 53 00     L.M.N.O.P.Q.R.S.
    87d0:	54 00 55 00 56 00 57 00 58 00 59 00 5a 00 5b 00     T.U.V.W.X.Y.Z.[.
    87e0:	5c 00 5d 00 5e 00 5f 00 60 00 61 00 62 00 63 00     \.].^._.`.a.b.c.
    87f0:	64 00                                               d.

000087f2 <strtol>:
    87f2:	0b 12       	push	r11		;
    87f4:	0a 12       	push	r10		;
    87f6:	09 12       	push	r9		;
    87f8:	08 12       	push	r8		;
    87fa:	07 12       	push	r7		;
    87fc:	06 12       	push	r6		;
    87fe:	05 12       	push	r5		;
    8800:	04 12       	push	r4		;
    8802:	31 80 0e 00 	sub	#14,	r1	;#0x000e
    8806:	81 4f 00 00 	mov	r15,	0(r1)	;
    880a:	81 4e 02 00 	mov	r14,	2(r1)	;
    880e:	81 4d 04 00 	mov	r13,	4(r1)	;
    8812:	06 4f       	mov	r15,	r6	;
    8814:	81 43 08 00 	mov	#0,	8(r1)	;r3 As==00
    8818:	67 46       	mov.b	@r6,	r7	;
    881a:	16 53       	inc	r6		;
    881c:	4f 47       	mov.b	r7,	r15	;
    881e:	0e 43       	clr	r14		;
    8820:	3f 90 20 00 	cmp	#32,	r15	;#0x0020
    8824:	05 24       	jz	$+12     	;abs 0x8830
    8826:	3f 50 f7 ff 	add	#-9,	r15	;#0xfff7
    882a:	3f 90 05 00 	cmp	#5,	r15	;#0x0005
    882e:	01 2c       	jc	$+4      	;abs 0x8832
    8830:	1e 43       	mov	#1,	r14	;r3 As==01
    8832:	0e 93       	cmp	#0,	r14	;r3 As==00
    8834:	f1 23       	jnz	$-28     	;abs 0x8818
    8836:	77 90 2d 00 	cmp.b	#45,	r7	;#0x002d
    883a:	d9 24       	jz	$+436    	;abs 0x89ee
    883c:	77 90 2b 00 	cmp.b	#43,	r7	;#0x002b
    8840:	d3 24       	jz	$+424    	;abs 0x89e8
    8842:	81 93 04 00 	cmp	#0,	4(r1)	;r3 As==00
    8846:	bf 24       	jz	$+384    	;abs 0x89c6
    8848:	b1 90 10 00 	cmp	#16,	4(r1)	;#0x0010
    884c:	04 00 
    884e:	bb 24       	jz	$+376    	;abs 0x89c6
    8850:	81 93 04 00 	cmp	#0,	4(r1)	;r3 As==00
    8854:	06 20       	jnz	$+14     	;abs 0x8862
    8856:	77 90 30 00 	cmp.b	#48,	r7	;#0x0030
    885a:	b2 24       	jz	$+358    	;abs 0x89c0
    885c:	b1 40 0a 00 	mov	#10,	4(r1)	;#0x000a
    8860:	04 00 
    8862:	81 93 08 00 	cmp	#0,	8(r1)	;r3 As==00
    8866:	a8 24       	jz	$+338    	;abs 0x89b8
    8868:	04 43       	clr	r4		;
    886a:	35 40 00 80 	mov	#-32768,r5	;#0x8000
    886e:	91 41 04 00 	mov	4(r1),	10(r1)	;
    8872:	0a 00 
    8874:	91 41 0a 00 	mov	10(r1),	12(r1)	;
    8878:	0c 00 
    887a:	91 51 0c 00 	rla	12(r1)		;
    887e:	0c 00 
    8880:	91 71 0c 00 	subc	12(r1),	12(r1)	;
    8884:	0c 00 
    8886:	b1 e3 0c 00 	xor	#-1,	12(r1)	;r3 As==11
    888a:	0c 44       	mov	r4,	r12	;
    888c:	0d 45       	mov	r5,	r13	;
    888e:	1a 41 0a 00 	mov	10(r1),	r10	;
    8892:	1b 41 0c 00 	mov	12(r1),	r11	;
    8896:	b0 12 6e 92 	call	#-28050	;#0x926e
    889a:	81 4e 06 00 	mov	r14,	6(r1)	;
    889e:	0c 44       	mov	r4,	r12	;
    88a0:	0d 45       	mov	r5,	r13	;
    88a2:	1a 41 0a 00 	mov	10(r1),	r10	;
    88a6:	1b 41 0c 00 	mov	12(r1),	r11	;
    88aa:	b0 12 6e 92 	call	#-28050	;#0x926e
    88ae:	08 4c       	mov	r12,	r8	;
    88b0:	09 4d       	mov	r13,	r9	;
    88b2:	0a 43       	clr	r10		;
    88b4:	0b 43       	clr	r11		;
    88b6:	05 43       	clr	r5		;
    88b8:	4e 47       	mov.b	r7,	r14	;
    88ba:	0d 43       	clr	r13		;
    88bc:	3e b0 80 ff 	bit	#-128,	r14	;#0xff80
    88c0:	01 20       	jnz	$+4      	;abs 0x88c4
    88c2:	1d 43       	mov	#1,	r13	;r3 As==01
    88c4:	0d 93       	cmp	#0,	r13	;r3 As==00
    88c6:	33 24       	jz	$+104    	;abs 0x892e
    88c8:	0d 43       	clr	r13		;
    88ca:	0f 4e       	mov	r14,	r15	;
    88cc:	3f 50 d0 ff 	add	#-48,	r15	;#0xffd0
    88d0:	3f 90 0a 00 	cmp	#10,	r15	;#0x000a
    88d4:	01 2c       	jc	$+4      	;abs 0x88d8
    88d6:	1d 43       	mov	#1,	r13	;r3 As==01
    88d8:	0d 93       	cmp	#0,	r13	;r3 As==00
    88da:	4e 24       	jz	$+158    	;abs 0x8978
    88dc:	77 50 d0 ff 	add.b	#-48,	r7	;#0xffd0
    88e0:	4d 47       	mov.b	r7,	r13	;
    88e2:	1d 91 04 00 	cmp	4(r1),	r13	;
    88e6:	23 34       	jge	$+72     	;abs 0x892e
    88e8:	05 93       	cmp	#0,	r5	;r3 As==00
    88ea:	1f 38       	jl	$+64     	;abs 0x892a
    88ec:	0e 48       	mov	r8,	r14	;
    88ee:	0f 49       	mov	r9,	r15	;
    88f0:	0e 8a       	sub	r10,	r14	;
    88f2:	0f 7b       	subc	r11,	r15	;
    88f4:	1a 28       	jnc	$+54     	;abs 0x892a
    88f6:	0a 98       	cmp	r8,	r10	;
    88f8:	13 24       	jz	$+40     	;abs 0x8920
    88fa:	15 43       	mov	#1,	r5	;r3 As==01
    88fc:	1c 41 0a 00 	mov	10(r1),	r12	;
    8900:	1d 41 0c 00 	mov	12(r1),	r13	;
    8904:	02 12       	push	r2		;
    8906:	32 c2       	dint			
    8908:	b0 12 98 92 	call	#-28008	;#0x9298
    890c:	32 41       	pop	r2		;
    890e:	0a 4e       	mov	r14,	r10	;
    8910:	0b 4f       	mov	r15,	r11	;
    8912:	4e 47       	mov.b	r7,	r14	;
    8914:	0f 43       	clr	r15		;
    8916:	0a 5e       	add	r14,	r10	;
    8918:	0b 6f       	addc	r15,	r11	;
    891a:	67 46       	mov.b	@r6,	r7	;
    891c:	16 53       	inc	r6		;
    891e:	cc 3f       	jmp	$-102    	;abs 0x88b8
    8920:	0b 99       	cmp	r9,	r11	;
    8922:	eb 23       	jnz	$-40     	;abs 0x88fa
    8924:	81 9d 06 00 	cmp	r13,	6(r1)	;
    8928:	e8 37       	jge	$-46     	;abs 0x88fa
    892a:	35 43       	mov	#-1,	r5	;r3 As==11
    892c:	f6 3f       	jmp	$-18     	;abs 0x891a
    892e:	05 93       	cmp	#0,	r5	;r3 As==00
    8930:	15 38       	jl	$+44     	;abs 0x895c
    8932:	81 93 08 00 	cmp	#0,	8(r1)	;r3 As==00
    8936:	04 24       	jz	$+10     	;abs 0x8940
    8938:	3a e3       	inv	r10		;
    893a:	3b e3       	inv	r11		;
    893c:	1a 53       	inc	r10		;
    893e:	0b 63       	adc	r11		;
    8940:	81 93 02 00 	cmp	#0,	2(r1)	;r3 As==00
    8944:	57 24       	jz	$+176    	;abs 0x89f4
    8946:	05 93       	cmp	#0,	r5	;r3 As==00
    8948:	07 24       	jz	$+16     	;abs 0x8958
    894a:	0f 46       	mov	r6,	r15	;
    894c:	3f 53       	add	#-1,	r15	;r3 As==11
    894e:	1e 41 02 00 	mov	2(r1),	r14	;
    8952:	8e 4f 00 00 	mov	r15,	0(r14)	;
    8956:	4e 3c       	jmp	$+158    	;abs 0x89f4
    8958:	2f 41       	mov	@r1,	r15	;
    895a:	f9 3f       	jmp	$-12     	;abs 0x894e
    895c:	81 93 08 00 	cmp	#0,	8(r1)	;r3 As==00
    8960:	07 24       	jz	$+16     	;abs 0x8970
    8962:	0a 43       	clr	r10		;
    8964:	3b 40 00 80 	mov	#-32768,r11	;#0x8000
    8968:	b2 40 22 00 	mov	#34,	&0x07d2	;#0x0022
    896c:	d2 07 
    896e:	e8 3f       	jmp	$-46     	;abs 0x8940
    8970:	3a 43       	mov	#-1,	r10	;r3 As==11
    8972:	3b 40 ff 7f 	mov	#32767,	r11	;#0x7fff
    8976:	f8 3f       	jmp	$-14     	;abs 0x8968
    8978:	0d 43       	clr	r13		;
    897a:	0f 4e       	mov	r14,	r15	;
    897c:	3f 50 bf ff 	add	#-65,	r15	;#0xffbf
    8980:	3f 90 1a 00 	cmp	#26,	r15	;#0x001a
    8984:	05 28       	jnc	$+12     	;abs 0x8990
    8986:	3f 50 e0 ff 	add	#-32,	r15	;#0xffe0
    898a:	3f 90 1a 00 	cmp	#26,	r15	;#0x001a
    898e:	01 2c       	jc	$+4      	;abs 0x8992
    8990:	1d 43       	mov	#1,	r13	;r3 As==01
    8992:	0d 93       	cmp	#0,	r13	;r3 As==00
    8994:	cc 27       	jz	$-102    	;abs 0x892e
    8996:	0d 43       	clr	r13		;
    8998:	0f 4e       	mov	r14,	r15	;
    899a:	3f 50 bf ff 	add	#-65,	r15	;#0xffbf
    899e:	3f 90 1a 00 	cmp	#26,	r15	;#0x001a
    89a2:	01 2c       	jc	$+4      	;abs 0x89a6
    89a4:	1d 43       	mov	#1,	r13	;r3 As==01
    89a6:	0d 93       	cmp	#0,	r13	;r3 As==00
    89a8:	04 24       	jz	$+10     	;abs 0x89b2
    89aa:	7e 50 c9 ff 	add.b	#-55,	r14	;#0xffc9
    89ae:	47 4e       	mov.b	r14,	r7	;
    89b0:	97 3f       	jmp	$-208    	;abs 0x88e0
    89b2:	7e 50 a9 ff 	add.b	#-87,	r14	;#0xffa9
    89b6:	fb 3f       	jmp	$-8      	;abs 0x89ae
    89b8:	34 43       	mov	#-1,	r4	;r3 As==11
    89ba:	35 40 ff 7f 	mov	#32767,	r5	;#0x7fff
    89be:	57 3f       	jmp	$-336    	;abs 0x886e
    89c0:	b1 42 04 00 	mov	#8,	4(r1)	;r2 As==11
    89c4:	4e 3f       	jmp	$-354    	;abs 0x8862
    89c6:	77 90 30 00 	cmp.b	#48,	r7	;#0x0030
    89ca:	42 23       	jnz	$-378    	;abs 0x8850
    89cc:	6f 46       	mov.b	@r6,	r15	;
    89ce:	7f 90 78 00 	cmp.b	#120,	r15	;#0x0078
    89d2:	03 24       	jz	$+8      	;abs 0x89da
    89d4:	7f 90 58 00 	cmp.b	#88,	r15	;#0x0058
    89d8:	3b 23       	jnz	$-392    	;abs 0x8850
    89da:	57 46 01 00 	mov.b	1(r6),	r7	;
    89de:	26 53       	incd	r6		;
    89e0:	b1 40 10 00 	mov	#16,	4(r1)	;#0x0010
    89e4:	04 00 
    89e6:	34 3f       	jmp	$-406    	;abs 0x8850
    89e8:	67 46       	mov.b	@r6,	r7	;
    89ea:	16 53       	inc	r6		;
    89ec:	2a 3f       	jmp	$-426    	;abs 0x8842
    89ee:	91 43 08 00 	mov	#1,	8(r1)	;r3 As==01
    89f2:	fa 3f       	jmp	$-10     	;abs 0x89e8
    89f4:	0e 4a       	mov	r10,	r14	;
    89f6:	0f 4b       	mov	r11,	r15	;
    89f8:	31 50 0e 00 	add	#14,	r1	;#0x000e
    89fc:	34 41       	pop	r4		;
    89fe:	35 41       	pop	r5		;
    8a00:	36 41       	pop	r6		;
    8a02:	37 41       	pop	r7		;
    8a04:	38 41       	pop	r8		;
    8a06:	39 41       	pop	r9		;
    8a08:	3a 41       	pop	r10		;
    8a0a:	3b 41       	pop	r11		;
    8a0c:	30 41       	ret			

00008a0e <printf>:
    8a0e:	2f 43       	mov	#2,	r15	;r3 As==10
    8a10:	0f 51       	add	r1,	r15	;
    8a12:	3e 4f       	mov	@r15+,	r14	;
    8a14:	0d 4f       	mov	r15,	r13	;
    8a16:	3f 40 0a 15 	mov	#5386,	r15	;#0x150a
    8a1a:	b0 12 84 8a 	call	#-30076	;#0x8a84
    8a1e:	30 41       	ret			

00008a20 <PRINT>:
    8a20:	0b 12       	push	r11		;
    8a22:	0a 12       	push	r10		;
    8a24:	0a 4f       	mov	r15,	r10	;
    8a26:	0b 4e       	mov	r14,	r11	;
    8a28:	0e 93       	cmp	#0,	r14	;r3 As==00
    8a2a:	02 20       	jnz	$+6      	;abs 0x8a30
    8a2c:	1f 43       	mov	#1,	r15	;r3 As==01
    8a2e:	0d 3c       	jmp	$+28     	;abs 0x8a4a
    8a30:	6f 4a       	mov.b	@r10,	r15	;
    8a32:	8f 11       	sxt	r15		;
    8a34:	1a 53       	inc	r10		;
    8a36:	92 12 64 02 	call	&0x0264		;
    8a3a:	0f 93       	cmp	#0,	r15	;r3 As==00
    8a3c:	05 38       	jl	$+12     	;abs 0x8a48
    8a3e:	92 53 62 02 	inc	&0x0262		;
    8a42:	3b 53       	add	#-1,	r11	;r3 As==11
    8a44:	f5 23       	jnz	$-20     	;abs 0x8a30
    8a46:	f2 3f       	jmp	$-26     	;abs 0x8a2c
    8a48:	3f 43       	mov	#-1,	r15	;r3 As==11
    8a4a:	3a 41       	pop	r10		;
    8a4c:	3b 41       	pop	r11		;
    8a4e:	30 41       	ret			

00008a50 <__write_pad>:
    8a50:	0b 12       	push	r11		;
    8a52:	0a 12       	push	r10		;
    8a54:	09 12       	push	r9		;
    8a56:	49 4f       	mov.b	r15,	r9	;
    8a58:	4b 4e       	mov.b	r14,	r11	;
    8a5a:	5e 93       	cmp.b	#1,	r14	;r3 As==01
    8a5c:	0c 38       	jl	$+26     	;abs 0x8a76
    8a5e:	4a 4f       	mov.b	r15,	r10	;
    8a60:	8a 11       	sxt	r10		;
    8a62:	0f 4a       	mov	r10,	r15	;
    8a64:	92 12 64 02 	call	&0x0264		;
    8a68:	0f 93       	cmp	#0,	r15	;r3 As==00
    8a6a:	07 38       	jl	$+16     	;abs 0x8a7a
    8a6c:	92 53 62 02 	inc	&0x0262		;
    8a70:	7b 53       	add.b	#-1,	r11	;r3 As==11
    8a72:	5b 93       	cmp.b	#1,	r11	;r3 As==01
    8a74:	f6 37       	jge	$-18     	;abs 0x8a62
    8a76:	4f 49       	mov.b	r9,	r15	;
    8a78:	01 3c       	jmp	$+4      	;abs 0x8a7c
    8a7a:	3f 43       	mov	#-1,	r15	;r3 As==11
    8a7c:	39 41       	pop	r9		;
    8a7e:	3a 41       	pop	r10		;
    8a80:	3b 41       	pop	r11		;
    8a82:	30 41       	ret			

00008a84 <vuprintf>:
    8a84:	0b 12       	push	r11		;
    8a86:	0a 12       	push	r10		;
    8a88:	09 12       	push	r9		;
    8a8a:	08 12       	push	r8		;
    8a8c:	07 12       	push	r7		;
    8a8e:	06 12       	push	r6		;
    8a90:	05 12       	push	r5		;
    8a92:	04 12       	push	r4		;
    8a94:	31 80 3c 00 	sub	#60,	r1	;#0x003c
    8a98:	05 4d       	mov	r13,	r5	;
    8a9a:	81 43 30 00 	mov	#0,	48(r1)	;r3 As==00
    8a9e:	81 43 32 00 	mov	#0,	50(r1)	;r3 As==00
    8aa2:	82 43 62 02 	mov	#0,	&0x0262	;r3 As==00
    8aa6:	82 4f 64 02 	mov	r15,	&0x0264	;
    8aaa:	06 4e       	mov	r14,	r6	;
    8aac:	0f 46       	mov	r6,	r15	;
    8aae:	67 46       	mov.b	@r6,	r7	;
    8ab0:	47 93       	cmp.b	#0,	r7	;r3 As==00
    8ab2:	0a 24       	jz	$+22     	;abs 0x8ac8
    8ab4:	77 90 25 00 	cmp.b	#37,	r7	;#0x0025
    8ab8:	07 24       	jz	$+16     	;abs 0x8ac8
    8aba:	16 53       	inc	r6		;
    8abc:	67 46       	mov.b	@r6,	r7	;
    8abe:	47 93       	cmp.b	#0,	r7	;r3 As==00
    8ac0:	03 24       	jz	$+8      	;abs 0x8ac8
    8ac2:	77 90 25 00 	cmp.b	#37,	r7	;#0x0025
    8ac6:	f9 23       	jnz	$-12     	;abs 0x8aba
    8ac8:	0d 46       	mov	r6,	r13	;
    8aca:	0d 8f       	sub	r15,	r13	;
    8acc:	02 24       	jz	$+6      	;abs 0x8ad2
    8ace:	30 40 1c 90 	br	#0x901c		;
    8ad2:	47 93       	cmp.b	#0,	r7	;r3 As==00
    8ad4:	02 20       	jnz	$+6      	;abs 0x8ada
    8ad6:	30 40 2a 90 	br	#0x902a		;
    8ada:	16 53       	inc	r6		;
    8adc:	c1 43 2e 00 	mov.b	#0,	46(r1)	;r3 As==00
    8ae0:	c1 43 35 00 	mov.b	#0,	53(r1)	;r3 As==00
    8ae4:	c1 43 2f 00 	mov.b	#0,	47(r1)	;r3 As==00
    8ae8:	7b 43       	mov.b	#-1,	r11	;r3 As==11
    8aea:	c1 43 28 00 	mov.b	#0,	40(r1)	;r3 As==00
    8aee:	67 46       	mov.b	@r6,	r7	;
    8af0:	16 53       	inc	r6		;
    8af2:	77 90 75 00 	cmp.b	#117,	r7	;#0x0075
    8af6:	02 20       	jnz	$+6      	;abs 0x8afc
    8af8:	30 40 f6 8f 	br	#0x8ff6		;
    8afc:	4f 47       	mov.b	r7,	r15	;
    8afe:	7f d0 20 00 	bis.b	#32,	r15	;#0x0020
    8b02:	7f 90 78 00 	cmp.b	#120,	r15	;#0x0078
    8b06:	02 20       	jnz	$+6      	;abs 0x8b0c
    8b08:	30 40 f6 8f 	br	#0x8ff6		;
    8b0c:	77 90 20 00 	cmp.b	#32,	r7	;#0x0020
    8b10:	02 20       	jnz	$+6      	;abs 0x8b16
    8b12:	30 40 e2 8f 	br	#0x8fe2		;
    8b16:	77 90 23 00 	cmp.b	#35,	r7	;#0x0023
    8b1a:	02 20       	jnz	$+6      	;abs 0x8b20
    8b1c:	30 40 da 8f 	br	#0x8fda		;
    8b20:	77 90 2a 00 	cmp.b	#42,	r7	;#0x002a
    8b24:	02 20       	jnz	$+6      	;abs 0x8b2a
    8b26:	30 40 be 8f 	br	#0x8fbe		;
    8b2a:	77 90 2d 00 	cmp.b	#45,	r7	;#0x002d
    8b2e:	02 20       	jnz	$+6      	;abs 0x8b34
    8b30:	30 40 ae 8f 	br	#0x8fae		;
    8b34:	77 90 2b 00 	cmp.b	#43,	r7	;#0x002b
    8b38:	02 20       	jnz	$+6      	;abs 0x8b3e
    8b3a:	30 40 a4 8f 	br	#0x8fa4		;
    8b3e:	77 90 2e 00 	cmp.b	#46,	r7	;#0x002e
    8b42:	02 20       	jnz	$+6      	;abs 0x8b48
    8b44:	30 40 3e 8f 	br	#0x8f3e		;
    8b48:	77 90 30 00 	cmp.b	#48,	r7	;#0x0030
    8b4c:	02 20       	jnz	$+6      	;abs 0x8b52
    8b4e:	30 40 28 8f 	br	#0x8f28		;



/* lla.c ends here */
    8b52:	4f 47       	mov.b	r7,	r15	;
    8b54:	7f 50 cf ff 	add.b	#-49,	r15	;#0xffcf
    8b58:	7f 90 09 00 	cmp.b	#9,	r15	;#0x0009
    8b5c:	1a 2c       	jc	$+54     	;abs 0x8b92
    8b5e:	0d 43       	clr	r13		;
    8b60:	0f 4d       	mov	r13,	r15	;
    8b62:	0f 5f       	rla	r15		;
    8b64:	0f 5f       	rla	r15		;
    8b66:	0e 4d       	mov	r13,	r14	;
    8b68:	0e 5e       	rla	r14		;
    8b6a:	0d 4f       	mov	r15,	r13	;
    8b6c:	0d 5e       	add	r14,	r13	;
    8b6e:	0d 5e       	add	r14,	r13	;
    8b70:	0d 5e       	add	r14,	r13	;
    8b72:	4f 47       	mov.b	r7,	r15	;
    8b74:	8f 11       	sxt	r15		;
    8b76:	0d 5f       	add	r15,	r13	;
    8b78:	3d 50 d0 ff 	add	#-48,	r13	;#0xffd0
    8b7c:	67 46       	mov.b	@r6,	r7	;
    8b7e:	16 53       	inc	r6		;
    8b80:	4f 47       	mov.b	r7,	r15	;
    8b82:	7f 50 d0 ff 	add.b	#-48,	r15	;#0xffd0
    8b86:	7f 90 0a 00 	cmp.b	#10,	r15	;#0x000a
    8b8a:	ea 2b       	jnc	$-42     	;abs 0x8b60
    8b8c:	c1 4d 2f 00 	mov.b	r13,	47(r1)	;
    8b90:	b0 3f       	jmp	$-158    	;abs 0x8af2
    8b92:	77 90 68 00 	cmp.b	#104,	r7	;#0x0068
    8b96:	c4 25       	jz	$+906    	;abs 0x8f20
    8b98:	77 90 6c 00 	cmp.b	#108,	r7	;#0x006c
    8b9c:	03 20       	jnz	$+8      	;abs 0x8ba4
    8b9e:	d1 d3 2e 00 	bis.b	#1,	46(r1)	;r3 As==01
    8ba2:	a5 3f       	jmp	$-180    	;abs 0x8aee
    8ba4:	77 90 63 00 	cmp.b	#99,	r7	;#0x0063
    8ba8:	b4 25       	jz	$+874    	;abs 0x8f12
    8baa:	77 90 44 00 	cmp.b	#68,	r7	;#0x0044
    8bae:	ae 25       	jz	$+862    	;abs 0x8f0c
    8bb0:	77 90 64 00 	cmp.b	#100,	r7	;#0x0064
    8bb4:	7f 25       	jz	$+768    	;abs 0x8eb4
    8bb6:	77 90 69 00 	cmp.b	#105,	r7	;#0x0069
    8bba:	7c 25       	jz	$+762    	;abs 0x8eb4
    8bbc:	77 90 4f 00 	cmp.b	#79,	r7	;#0x004f
    8bc0:	76 25       	jz	$+750    	;abs 0x8eae
    8bc2:	77 90 6f 00 	cmp.b	#111,	r7	;#0x006f
    8bc6:	70 25       	jz	$+738    	;abs 0x8ea8
    8bc8:	77 90 70 00 	cmp.b	#112,	r7	;#0x0070
    8bcc:	5e 25       	jz	$+702    	;abs 0x8e8a
    8bce:	77 90 73 00 	cmp.b	#115,	r7	;#0x0073
    8bd2:	1f 25       	jz	$+576    	;abs 0x8e12
    8bd4:	77 90 55 00 	cmp.b	#85,	r7	;#0x0055
    8bd8:	19 25       	jz	$+564    	;abs 0x8e0c
    8bda:	77 90 75 00 	cmp.b	#117,	r7	;#0x0075
    8bde:	12 25       	jz	$+550    	;abs 0x8e04
    8be0:	77 90 58 00 	cmp.b	#88,	r7	;#0x0058
    8be4:	8f 24       	jz	$+288    	;abs 0x8d04
    8be6:	77 90 78 00 	cmp.b	#120,	r7	;#0x0078
    8bea:	8c 24       	jz	$+282    	;abs 0x8d04
    8bec:	47 93       	cmp.b	#0,	r7	;r3 As==00
    8bee:	02 20       	jnz	$+6      	;abs 0x8bf4
    8bf0:	30 40 2a 90 	br	#0x902a		;
    8bf4:	81 41 2c 00 	mov	r1,	44(r1)	;
    8bf8:	c1 47 00 00 	mov.b	r7,	0(r1)	;
    8bfc:	59 43       	mov.b	#1,	r9	;r3 As==01
    8bfe:	c1 43 28 00 	mov.b	#0,	40(r1)	;r3 As==00
    8c02:	4b 49       	mov.b	r9,	r11	;
    8c04:	5a 41 35 00 	mov.b	53(r1),	r10	;
    8c08:	4a 89       	sub.b	r9,	r10	;
    8c0a:	7a 30       	jn	$+246    	;abs 0x8d00
    8c0c:	5e 41 28 00 	mov.b	40(r1),	r14	;
    8c10:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    8c12:	70 24       	jz	$+226    	;abs 0x8cf4
    8c14:	5b 53       	inc.b	r11		;
    8c16:	4b 5a       	add.b	r10,	r11	;
    8c18:	58 41 2e 00 	mov.b	46(r1),	r8	;
    8c1c:	78 f0 30 00 	and.b	#48,	r8	;#0x0030
    8c20:	13 20       	jnz	$+40     	;abs 0x8c48
    8c22:	5d 41 2f 00 	mov.b	47(r1),	r13	;
    8c26:	8d 11       	sxt	r13		;
    8c28:	4f 4b       	mov.b	r11,	r15	;
    8c2a:	8f 11       	sxt	r15		;
    8c2c:	0d 8f       	sub	r15,	r13	;
    8c2e:	1d 93       	cmp	#1,	r13	;r3 As==01
    8c30:	0b 38       	jl	$+24     	;abs 0x8c48
    8c32:	4e 4d       	mov.b	r13,	r14	;
    8c34:	7f 40 20 00 	mov.b	#32,	r15	;#0x0020
    8c38:	b0 12 50 8a 	call	#-30128	;#0x8a50
    8c3c:	0f 93       	cmp	#0,	r15	;r3 As==00
    8c3e:	02 34       	jge	$+6      	;abs 0x8c44
    8c40:	30 40 2a 90 	br	#0x902a		;
    8c44:	5e 41 28 00 	mov.b	40(r1),	r14	;
    8c48:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    8c4a:	4f 20       	jnz	$+160    	;abs 0x8cea
    8c4c:	f1 b0 40 00 	bit.b	#64,	46(r1)	;#0x0040
    8c50:	2e 00 
    8c52:	14 24       	jz	$+42     	;abs 0x8c7c
    8c54:	1f 41 2a 00 	mov	42(r1),	r15	;
    8c58:	3f f0 00 ff 	and	#-256,	r15	;#0xff00
    8c5c:	3f d0 30 00 	bis	#48,	r15	;#0x0030
    8c60:	81 4f 2a 00 	mov	r15,	42(r1)	;
    8c64:	c1 47 2b 00 	mov.b	r7,	43(r1)	;
    8c68:	2e 43       	mov	#2,	r14	;r3 As==10
    8c6a:	0f 41       	mov	r1,	r15	;
    8c6c:	3f 50 2a 00 	add	#42,	r15	;#0x002a
    8c70:	b0 12 20 8a 	call	#-30176	;#0x8a20
    8c74:	0f 93       	cmp	#0,	r15	;r3 As==00
    8c76:	02 34       	jge	$+6      	;abs 0x8c7c
    8c78:	30 40 2a 90 	br	#0x902a		;
    8c7c:	78 90 20 00 	cmp.b	#32,	r8	;#0x0020
    8c80:	24 24       	jz	$+74     	;abs 0x8cca
    8c82:	4e 4a       	mov.b	r10,	r14	;
    8c84:	7f 40 30 00 	mov.b	#48,	r15	;#0x0030
    8c88:	b0 12 50 8a 	call	#-30128	;#0x8a50
    8c8c:	0f 93       	cmp	#0,	r15	;r3 As==00
    8c8e:	cd 39       	jl	$+924    	;abs 0x902a
    8c90:	4f 49       	mov.b	r9,	r15	;
    8c92:	8f 11       	sxt	r15		;
    8c94:	0e 4f       	mov	r15,	r14	;
    8c96:	1f 41 2c 00 	mov	44(r1),	r15	;
    8c9a:	b0 12 20 8a 	call	#-30176	;#0x8a20
    8c9e:	0f 93       	cmp	#0,	r15	;r3 As==00
    8ca0:	c4 39       	jl	$+906    	;abs 0x902a
    8ca2:	f1 b0 10 00 	bit.b	#16,	46(r1)	;#0x0010
    8ca6:	2e 00 
    8ca8:	01 27       	jz	$-508    	;abs 0x8aac
    8caa:	5d 41 2f 00 	mov.b	47(r1),	r13	;
    8cae:	8d 11       	sxt	r13		;
    8cb0:	4f 4b       	mov.b	r11,	r15	;
    8cb2:	8f 11       	sxt	r15		;
    8cb4:	0d 8f       	sub	r15,	r13	;
    8cb6:	1d 93       	cmp	#1,	r13	;r3 As==01
    8cb8:	f9 3a       	jl	$-524    	;abs 0x8aac
    8cba:	4e 4d       	mov.b	r13,	r14	;
    8cbc:	7f 40 20 00 	mov.b	#32,	r15	;#0x0020
    8cc0:	b0 12 50 8a 	call	#-30128	;#0x8a50
    8cc4:	0f 93       	cmp	#0,	r15	;r3 As==00
    8cc6:	f2 36       	jge	$-538    	;abs 0x8aac
    8cc8:	b0 3d       	jmp	$+866    	;abs 0x902a
    8cca:	5d 41 2f 00 	mov.b	47(r1),	r13	;
    8cce:	8d 11       	sxt	r13		;
    8cd0:	4f 4b       	mov.b	r11,	r15	;
    8cd2:	8f 11       	sxt	r15		;
    8cd4:	0d 8f       	sub	r15,	r13	;
    8cd6:	1d 93       	cmp	#1,	r13	;r3 As==01
    8cd8:	d4 3b       	jl	$-86     	;abs 0x8c82
    8cda:	4e 4d       	mov.b	r13,	r14	;
    8cdc:	7f 40 30 00 	mov.b	#48,	r15	;#0x0030
    8ce0:	b0 12 50 8a 	call	#-30128	;#0x8a50
    8ce4:	0f 93       	cmp	#0,	r15	;r3 As==00
    8ce6:	cd 37       	jge	$-100    	;abs 0x8c82
    8ce8:	a0 3d       	jmp	$+834    	;abs 0x902a
    8cea:	1e 43       	mov	#1,	r14	;r3 As==01
    8cec:	0f 41       	mov	r1,	r15	;
    8cee:	3f 50 28 00 	add	#40,	r15	;#0x0028
    8cf2:	be 3f       	jmp	$-130    	;abs 0x8c70
    8cf4:	f1 b0 40 00 	bit.b	#64,	46(r1)	;#0x0040
    8cf8:	2e 00 
    8cfa:	8d 27       	jz	$-228    	;abs 0x8c16
    8cfc:	6b 53       	incd.b	r11		;
    8cfe:	8b 3f       	jmp	$-232    	;abs 0x8c16
    8d00:	4a 43       	clr.b	r10		;
    8d02:	84 3f       	jmp	$-246    	;abs 0x8c0c
    8d04:	f1 40 10 00 	mov.b	#16,	52(r1)	;#0x0010
    8d08:	34 00 
    8d0a:	f1 b2 2e 00 	bit.b	#8,	46(r1)	;r2 As==11
    8d0e:	09 24       	jz	$+20     	;abs 0x8d22
    8d10:	81 93 30 00 	cmp	#0,	48(r1)	;r3 As==00
    8d14:	03 20       	jnz	$+8      	;abs 0x8d1c
    8d16:	81 93 32 00 	cmp	#0,	50(r1)	;r3 As==00
    8d1a:	03 24       	jz	$+8      	;abs 0x8d22
    8d1c:	f1 d0 40 00 	bis.b	#64,	46(r1)	;#0x0040
    8d20:	2e 00 
    8d22:	c1 43 28 00 	mov.b	#0,	40(r1)	;r3 As==00
    8d26:	c1 4b 35 00 	mov.b	r11,	53(r1)	;
    8d2a:	4b 93       	cmp.b	#0,	r11	;r3 As==00
    8d2c:	03 38       	jl	$+8      	;abs 0x8d34
    8d2e:	f1 f0 df ff 	and.b	#-33,	46(r1)	;#0xffdf
    8d32:	2e 00 
    8d34:	0f 41       	mov	r1,	r15	;
    8d36:	3f 50 28 00 	add	#40,	r15	;#0x0028
    8d3a:	81 4f 2c 00 	mov	r15,	44(r1)	;
    8d3e:	81 93 30 00 	cmp	#0,	48(r1)	;r3 As==00
    8d42:	06 20       	jnz	$+14     	;abs 0x8d50
    8d44:	81 93 32 00 	cmp	#0,	50(r1)	;r3 As==00
    8d48:	03 20       	jnz	$+8      	;abs 0x8d50
    8d4a:	c1 93 35 00 	cmp.b	#0,	53(r1)	;r3 As==00
    8d4e:	3e 24       	jz	$+126    	;abs 0x8dcc
    8d50:	d1 41 34 00 	mov.b	52(r1),	56(r1)	;
    8d54:	38 00 
    8d56:	c1 43 39 00 	mov.b	#0,	57(r1)	;r3 As==00
    8d5a:	81 43 3a 00 	mov	#0,	58(r1)	;r3 As==00
    8d5e:	c1 43 36 00 	mov.b	#0,	54(r1)	;r3 As==00
    8d62:	1e 41 30 00 	mov	48(r1),	r14	;
    8d66:	1f 41 32 00 	mov	50(r1),	r15	;
    8d6a:	1e 81 38 00 	sub	56(r1),	r14	;
    8d6e:	1f 71 3a 00 	subc	58(r1),	r15	;
    8d72:	02 28       	jnc	$+6      	;abs 0x8d78
    8d74:	d1 43 36 00 	mov.b	#1,	54(r1)	;r3 As==01
    8d78:	1c 41 30 00 	mov	48(r1),	r12	;
    8d7c:	1d 41 32 00 	mov	50(r1),	r13	;
    8d80:	1a 41 38 00 	mov	56(r1),	r10	;
    8d84:	1b 41 3a 00 	mov	58(r1),	r11	;
    8d88:	b0 12 6e 92 	call	#-28050	;#0x926e
    8d8c:	44 4e       	mov.b	r14,	r4	;
    8d8e:	7e 90 0a 00 	cmp.b	#10,	r14	;#0x000a
    8d92:	30 2c       	jc	$+98     	;abs 0x8df4
    8d94:	74 50 30 00 	add.b	#48,	r4	;#0x0030
    8d98:	b1 53 2c 00 	add	#-1,	44(r1)	;r3 As==11
    8d9c:	1f 41 2c 00 	mov	44(r1),	r15	;
    8da0:	cf 44 00 00 	mov.b	r4,	0(r15)	;
    8da4:	1c 41 30 00 	mov	48(r1),	r12	;
    8da8:	1d 41 32 00 	mov	50(r1),	r13	;
    8dac:	1a 41 38 00 	mov	56(r1),	r10	;
    8db0:	1b 41 3a 00 	mov	58(r1),	r11	;
    8db4:	b0 12 6e 92 	call	#-28050	;#0x926e
    8db8:	81 4c 30 00 	mov	r12,	48(r1)	;
    8dbc:	81 4d 32 00 	mov	r13,	50(r1)	;
    8dc0:	c1 93 36 00 	cmp.b	#0,	54(r1)	;r3 As==00
    8dc4:	cc 23       	jnz	$-102    	;abs 0x8d5e
    8dc6:	f1 92 34 00 	cmp.b	#8,	52(r1)	;r2 As==11
    8dca:	06 24       	jz	$+14     	;abs 0x8dd8
    8dcc:	49 41       	mov.b	r1,	r9	;
    8dce:	59 81 2c 00 	sub.b	44(r1),	r9	;
    8dd2:	79 50 28 00 	add.b	#40,	r9	;#0x0028
    8dd6:	15 3f       	jmp	$-468    	;abs 0x8c02
    8dd8:	f1 b2 2e 00 	bit.b	#8,	46(r1)	;r2 As==11
    8ddc:	f7 27       	jz	$-16     	;abs 0x8dcc
    8dde:	74 90 30 00 	cmp.b	#48,	r4	;#0x0030
    8de2:	f4 27       	jz	$-22     	;abs 0x8dcc
    8de4:	b1 53 2c 00 	add	#-1,	44(r1)	;r3 As==11
    8de8:	1f 41 2c 00 	mov	44(r1),	r15	;
    8dec:	ff 40 30 00 	mov.b	#48,	0(r15)	;#0x0030
    8df0:	00 00 
    8df2:	ec 3f       	jmp	$-38     	;abs 0x8dcc
    8df4:	74 50 57 00 	add.b	#87,	r4	;#0x0057
    8df8:	77 90 58 00 	cmp.b	#88,	r7	;#0x0058
    8dfc:	cd 23       	jnz	$-100    	;abs 0x8d98
    8dfe:	74 f0 df ff 	and.b	#-33,	r4	;#0xffdf
    8e02:	ca 3f       	jmp	$-106    	;abs 0x8d98
    8e04:	f1 40 0a 00 	mov.b	#10,	52(r1)	;#0x000a
    8e08:	34 00 
    8e0a:	8b 3f       	jmp	$-232    	;abs 0x8d22
    8e0c:	d1 d3 2e 00 	bis.b	#1,	46(r1)	;r3 As==01
    8e10:	f9 3f       	jmp	$-12     	;abs 0x8e04
    8e12:	0f 45       	mov	r5,	r15	;
    8e14:	25 53       	incd	r5		;
    8e16:	a1 4f 2c 00 	mov	@r15,	44(r1)	;
    8e1a:	81 93 2c 00 	cmp	#0,	44(r1)	;r3 As==00
    8e1e:	1e 24       	jz	$+62     	;abs 0x8e5c
    8e20:	4b 93       	cmp.b	#0,	r11	;r3 As==00
    8e22:	11 38       	jl	$+36     	;abs 0x8e46
    8e24:	4f 4b       	mov.b	r11,	r15	;
    8e26:	8f 11       	sxt	r15		;
    8e28:	0d 4f       	mov	r15,	r13	;
    8e2a:	0e 43       	clr	r14		;
    8e2c:	1f 41 2c 00 	mov	44(r1),	r15	;
    8e30:	b0 12 8c 90 	call	#-28532	;#0x908c
    8e34:	0f 93       	cmp	#0,	r15	;r3 As==00
    8e36:	05 24       	jz	$+12     	;abs 0x8e42
    8e38:	49 4f       	mov.b	r15,	r9	;
    8e3a:	59 81 2c 00 	sub.b	44(r1),	r9	;
    8e3e:	4b 99       	cmp.b	r9,	r11	;
    8e40:	de 36       	jge	$-578    	;abs 0x8bfe
    8e42:	49 4b       	mov.b	r11,	r9	;
    8e44:	dc 3e       	jmp	$-582    	;abs 0x8bfe
    8e46:	1f 41 2c 00 	mov	44(r1),	r15	;
    8e4a:	1f 83       	dec	r15		;
    8e4c:	1f 53       	inc	r15		;
    8e4e:	cf 93 00 00 	cmp.b	#0,	0(r15)	;r3 As==00
    8e52:	fc 23       	jnz	$-6      	;abs 0x8e4c
    8e54:	49 4f       	mov.b	r15,	r9	;
    8e56:	59 81 2c 00 	sub.b	44(r1),	r9	;
    8e5a:	d1 3e       	jmp	$-604    	;abs 0x8bfe
    8e5c:	81 41 2c 00 	mov	r1,	44(r1)	;
    8e60:	f1 40 28 00 	mov.b	#40,	0(r1)	;#0x0028
    8e64:	00 00 
    8e66:	f1 40 6e 00 	mov.b	#110,	1(r1)	;#0x006e
    8e6a:	01 00 
    8e6c:	f1 40 75 00 	mov.b	#117,	2(r1)	;#0x0075
    8e70:	02 00 
    8e72:	f1 40 6c 00 	mov.b	#108,	3(r1)	;#0x006c
    8e76:	03 00 
    8e78:	f1 40 6c 00 	mov.b	#108,	4(r1)	;#0x006c
    8e7c:	04 00 
    8e7e:	f1 40 29 00 	mov.b	#41,	5(r1)	;#0x0029
    8e82:	05 00 
    8e84:	c1 43 06 00 	mov.b	#0,	6(r1)	;r3 As==00
    8e88:	cb 3f       	jmp	$-104    	;abs 0x8e20
    8e8a:	0f 45       	mov	r5,	r15	;
    8e8c:	25 53       	incd	r5		;
    8e8e:	a1 4f 30 00 	mov	@r15,	48(r1)	;
    8e92:	81 43 32 00 	mov	#0,	50(r1)	;r3 As==00
    8e96:	f1 40 10 00 	mov.b	#16,	52(r1)	;#0x0010
    8e9a:	34 00 
    8e9c:	f1 d0 40 00 	bis.b	#64,	46(r1)	;#0x0040
    8ea0:	2e 00 
    8ea2:	77 40 78 00 	mov.b	#120,	r7	;#0x0078
    8ea6:	3d 3f       	jmp	$-388    	;abs 0x8d22
    8ea8:	f1 42 34 00 	mov.b	#8,	52(r1)	;r2 As==11
    8eac:	3a 3f       	jmp	$-394    	;abs 0x8d22
    8eae:	d1 d3 2e 00 	bis.b	#1,	46(r1)	;r3 As==01
    8eb2:	fa 3f       	jmp	$-10     	;abs 0x8ea8
    8eb4:	d1 b3 2e 00 	bit.b	#1,	46(r1)	;r3 As==01
    8eb8:	19 24       	jz	$+52     	;abs 0x8eec
    8eba:	0f 45       	mov	r5,	r15	;
    8ebc:	25 52       	add	#4,	r5	;r2 As==10
    8ebe:	b1 4f 30 00 	mov	@r15+,	48(r1)	;
    8ec2:	b1 4f 32 00 	mov	@r15+,	50(r1)	;
    8ec6:	81 93 32 00 	cmp	#0,	50(r1)	;r3 As==00
    8eca:	04 38       	jl	$+10     	;abs 0x8ed4
    8ecc:	f1 40 0a 00 	mov.b	#10,	52(r1)	;#0x000a
    8ed0:	34 00 
    8ed2:	29 3f       	jmp	$-428    	;abs 0x8d26
    8ed4:	b1 e3 30 00 	xor	#-1,	48(r1)	;r3 As==11
    8ed8:	b1 e3 32 00 	xor	#-1,	50(r1)	;r3 As==11
    8edc:	91 53 30 00 	inc	48(r1)		;
    8ee0:	81 63 32 00 	adc	50(r1)		;
    8ee4:	f1 40 2d 00 	mov.b	#45,	40(r1)	;#0x002d
    8ee8:	28 00 
    8eea:	f0 3f       	jmp	$-30     	;abs 0x8ecc
    8eec:	0f 45       	mov	r5,	r15	;
    8eee:	25 53       	incd	r5		;
    8ef0:	a1 4f 30 00 	mov	@r15,	48(r1)	;
    8ef4:	91 41 30 00 	mov	48(r1),	50(r1)	;
    8ef8:	32 00 
    8efa:	91 51 32 00 	rla	50(r1)		;
    8efe:	32 00 
    8f00:	91 71 32 00 	subc	50(r1),	50(r1)	;
    8f04:	32 00 
    8f06:	b1 e3 32 00 	xor	#-1,	50(r1)	;r3 As==11
    8f0a:	dd 3f       	jmp	$-68     	;abs 0x8ec6
    8f0c:	d1 d3 2e 00 	bis.b	#1,	46(r1)	;r3 As==01
    8f10:	d1 3f       	jmp	$-92     	;abs 0x8eb4
    8f12:	81 41 2c 00 	mov	r1,	44(r1)	;
    8f16:	0f 45       	mov	r5,	r15	;
    8f18:	25 53       	incd	r5		;
    8f1a:	e1 4f 00 00 	mov.b	@r15,	0(r1)	;
    8f1e:	6e 3e       	jmp	$-802    	;abs 0x8bfc
    8f20:	e1 d2 2e 00 	bis.b	#4,	46(r1)	;r2 As==10
    8f24:	30 40 ee 8a 	br	#0x8aee		;
    8f28:	f1 b0 10 00 	bit.b	#16,	46(r1)	;#0x0010
    8f2c:	2e 00 
    8f2e:	02 24       	jz	$+6      	;abs 0x8f34
    8f30:	30 40 ee 8a 	br	#0x8aee		;
    8f34:	f1 d0 20 00 	bis.b	#32,	46(r1)	;#0x0020
    8f38:	2e 00 
    8f3a:	30 40 ee 8a 	br	#0x8aee		;
    8f3e:	67 46       	mov.b	@r6,	r7	;
    8f40:	16 53       	inc	r6		;
    8f42:	77 90 2a 00 	cmp.b	#42,	r7	;#0x002a
    8f46:	24 24       	jz	$+74     	;abs 0x8f90
    8f48:	0d 43       	clr	r13		;
    8f4a:	4f 47       	mov.b	r7,	r15	;
    8f4c:	7f 50 d0 ff 	add.b	#-48,	r15	;#0xffd0
    8f50:	7f 90 0a 00 	cmp.b	#10,	r15	;#0x000a
    8f54:	16 2c       	jc	$+46     	;abs 0x8f82
    8f56:	0f 4d       	mov	r13,	r15	;
    8f58:	0f 5f       	rla	r15		;
    8f5a:	0f 5f       	rla	r15		;
    8f5c:	0e 4d       	mov	r13,	r14	;
    8f5e:	0e 5e       	rla	r14		;
    8f60:	0d 4f       	mov	r15,	r13	;
    8f62:	0d 5e       	add	r14,	r13	;
    8f64:	0d 5e       	add	r14,	r13	;
    8f66:	0d 5e       	add	r14,	r13	;
    8f68:	4f 47       	mov.b	r7,	r15	;
    8f6a:	8f 11       	sxt	r15		;
    8f6c:	0d 5f       	add	r15,	r13	;
    8f6e:	3d 50 d0 ff 	add	#-48,	r13	;#0xffd0
    8f72:	67 46       	mov.b	@r6,	r7	;
    8f74:	16 53       	inc	r6		;
    8f76:	4f 47       	mov.b	r7,	r15	;
    8f78:	7f 50 d0 ff 	add.b	#-48,	r15	;#0xffd0
    8f7c:	7f 90 0a 00 	cmp.b	#10,	r15	;#0x000a
    8f80:	ea 2b       	jnc	$-42     	;abs 0x8f56
    8f82:	0f 4d       	mov	r13,	r15	;
    8f84:	3d 93       	cmp	#-1,	r13	;r3 As==11
    8f86:	01 34       	jge	$+4      	;abs 0x8f8a
    8f88:	3f 43       	mov	#-1,	r15	;r3 As==11
    8f8a:	4b 4f       	mov.b	r15,	r11	;
    8f8c:	30 40 f2 8a 	br	#0x8af2		;
    8f90:	0f 45       	mov	r5,	r15	;
    8f92:	25 53       	incd	r5		;
    8f94:	2d 4f       	mov	@r15,	r13	;
    8f96:	0f 4d       	mov	r13,	r15	;
    8f98:	3d 93       	cmp	#-1,	r13	;r3 As==11
    8f9a:	01 34       	jge	$+4      	;abs 0x8f9e
    8f9c:	3f 43       	mov	#-1,	r15	;r3 As==11
    8f9e:	4b 4f       	mov.b	r15,	r11	;
    8fa0:	30 40 ee 8a 	br	#0x8aee		;
    8fa4:	f1 40 2b 00 	mov.b	#43,	40(r1)	;#0x002b
    8fa8:	28 00 
    8faa:	30 40 ee 8a 	br	#0x8aee		;
    8fae:	f1 d0 10 00 	bis.b	#16,	46(r1)	;#0x0010
    8fb2:	2e 00 
    8fb4:	f1 f0 df ff 	and.b	#-33,	46(r1)	;#0xffdf
    8fb8:	2e 00 
    8fba:	30 40 ee 8a 	br	#0x8aee		;
    8fbe:	0f 45       	mov	r5,	r15	;
    8fc0:	25 53       	incd	r5		;
    8fc2:	e1 4f 2f 00 	mov.b	@r15,	47(r1)	;
    8fc6:	c1 93 2f 00 	cmp.b	#0,	47(r1)	;r3 As==00
    8fca:	02 38       	jl	$+6      	;abs 0x8fd0
    8fcc:	30 40 ee 8a 	br	#0x8aee		;
    8fd0:	f1 e3 2f 00 	xor.b	#-1,	47(r1)	;r3 As==11
    8fd4:	d1 53 2f 00 	inc.b	47(r1)		;
    8fd8:	ea 3f       	jmp	$-42     	;abs 0x8fae
    8fda:	f1 d2 2e 00 	bis.b	#8,	46(r1)	;r2 As==11
    8fde:	30 40 ee 8a 	br	#0x8aee		;
    8fe2:	c1 93 28 00 	cmp.b	#0,	40(r1)	;r3 As==00
    8fe6:	02 24       	jz	$+6      	;abs 0x8fec
    8fe8:	30 40 ee 8a 	br	#0x8aee		;
    8fec:	f1 40 20 00 	mov.b	#32,	40(r1)	;#0x0020
    8ff0:	28 00 
    8ff2:	30 40 ee 8a 	br	#0x8aee		;
    8ff6:	d1 b3 2e 00 	bit.b	#1,	46(r1)	;r3 As==01
    8ffa:	08 24       	jz	$+18     	;abs 0x900c
    8ffc:	0f 45       	mov	r5,	r15	;
    8ffe:	25 52       	add	#4,	r5	;r2 As==10
    9000:	b1 4f 30 00 	mov	@r15+,	48(r1)	;
    9004:	b1 4f 32 00 	mov	@r15+,	50(r1)	;
    9008:	30 40 0c 8b 	br	#0x8b0c		;
    900c:	0f 45       	mov	r5,	r15	;
    900e:	25 53       	incd	r5		;
    9010:	a1 4f 30 00 	mov	@r15,	48(r1)	;
    9014:	81 43 32 00 	mov	#0,	50(r1)	;r3 As==00
    9018:	30 40 0c 8b 	br	#0x8b0c		;
    901c:	0e 4d       	mov	r13,	r14	;
    901e:	b0 12 20 8a 	call	#-30176	;#0x8a20
    9022:	0f 93       	cmp	#0,	r15	;r3 As==00
    9024:	02 38       	jl	$+6      	;abs 0x902a
    9026:	30 40 d2 8a 	br	#0x8ad2		;
    902a:	1f 42 62 02 	mov	&0x0262,r15	;0x0262
    902e:	31 50 3c 00 	add	#60,	r1	;#0x003c
    9032:	34 41       	pop	r4		;
    9034:	35 41       	pop	r5		;
    9036:	36 41       	pop	r6		;
    9038:	37 41       	pop	r7		;
    903a:	38 41       	pop	r8		;
    903c:	39 41       	pop	r9		;
    903e:	3a 41       	pop	r10		;
    9040:	3b 41       	pop	r11		;
    9042:	30 41       	ret			

00009044 <puts>:
    9044:	0b 12       	push	r11		;
    9046:	0b 4f       	mov	r15,	r11	;
    9048:	0e 43       	clr	r14		;
    904a:	6f 4b       	mov.b	@r11,	r15	;
    904c:	4f 93       	cmp.b	#0,	r15	;r3 As==00
    904e:	09 24       	jz	$+20     	;abs 0x9062
    9050:	8f 11       	sxt	r15		;
    9052:	1b 53       	inc	r11		;
    9054:	b0 12 0a 15 	call	#5386		;#0x150a
    9058:	0e 4f       	mov	r15,	r14	;
    905a:	0f 93       	cmp	#0,	r15	;r3 As==00
    905c:	f6 37       	jge	$-18     	;abs 0x904a
    905e:	0f 4e       	mov	r14,	r15	;
    9060:	06 3c       	jmp	$+14     	;abs 0x906e
    9062:	0e 93       	cmp	#0,	r14	;r3 As==00
    9064:	fc 3b       	jl	$-6      	;abs 0x905e
    9066:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    906a:	b0 12 0a 15 	call	#5386		;#0x150a
    906e:	3b 41       	pop	r11		;
    9070:	30 41       	ret			

00009072 <strchr>:
    9072:	0d 4f       	mov	r15,	r13	;
    9074:	0f 4e       	mov	r14,	r15	;
    9076:	6e 4d       	mov.b	@r13,	r14	;
    9078:	4e 9f       	cmp.b	r15,	r14	;
    907a:	06 24       	jz	$+14     	;abs 0x9088
    907c:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    907e:	02 24       	jz	$+6      	;abs 0x9084
    9080:	1d 53       	inc	r13		;
    9082:	f9 3f       	jmp	$-12     	;abs 0x9076
    9084:	0f 43       	clr	r15		;
    9086:	30 41       	ret			
    9088:	0f 4d       	mov	r13,	r15	;
    908a:	30 41       	ret			

0000908c <memchr>:
    908c:	0b 12       	push	r11		;
    908e:	0b 4f       	mov	r15,	r11	;
    9090:	4c 4e       	mov.b	r14,	r12	;
    9092:	0d 93       	cmp	#0,	r13	;r3 As==00
    9094:	07 24       	jz	$+16     	;abs 0x90a4
    9096:	0e 4b       	mov	r11,	r14	;
    9098:	6f 4e       	mov.b	@r14,	r15	;
    909a:	1e 53       	inc	r14		;
    909c:	4f 9c       	cmp.b	r12,	r15	;
    909e:	04 24       	jz	$+10     	;abs 0x90a8
    90a0:	3d 53       	add	#-1,	r13	;r3 As==11
    90a2:	fa 23       	jnz	$-10     	;abs 0x9098
    90a4:	0f 43       	clr	r15		;
    90a6:	02 3c       	jmp	$+6      	;abs 0x90ac
    90a8:	0f 4e       	mov	r14,	r15	;
    90aa:	3f 53       	add	#-1,	r15	;r3 As==11
    90ac:	3b 41       	pop	r11		;
    90ae:	30 41       	ret			

000090b0 <strcasecmp>:
    90b0:	0b 12       	push	r11		;
    90b2:	0a 12       	push	r10		;
    90b4:	0b 4f       	mov	r15,	r11	;
    90b6:	0a 4e       	mov	r14,	r10	;
    90b8:	6e 4b       	mov.b	@r11,	r14	;
    90ba:	4c 4e       	mov.b	r14,	r12	;
    90bc:	0f 4c       	mov	r12,	r15	;
    90be:	3f 50 bf ff 	add	#-65,	r15	;#0xffbf
    90c2:	3f 90 1a 00 	cmp	#26,	r15	;#0x001a
    90c6:	02 2c       	jc	$+6      	;abs 0x90cc
    90c8:	3c 50 20 00 	add	#32,	r12	;#0x0020
    90cc:	6f 4a       	mov.b	@r10,	r15	;
    90ce:	1a 53       	inc	r10		;
    90d0:	0d 4f       	mov	r15,	r13	;
    90d2:	3f 50 bf ff 	add	#-65,	r15	;#0xffbf
    90d6:	3f 90 1a 00 	cmp	#26,	r15	;#0x001a
    90da:	02 2c       	jc	$+6      	;abs 0x90e0
    90dc:	3d 50 20 00 	add	#32,	r13	;#0x0020
    90e0:	0c 9d       	cmp	r13,	r12	;
    90e2:	05 20       	jnz	$+12     	;abs 0x90ee
    90e4:	1b 53       	inc	r11		;
    90e6:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    90e8:	e7 23       	jnz	$-48     	;abs 0x90b8
    90ea:	0f 43       	clr	r15		;
    90ec:	15 3c       	jmp	$+44     	;abs 0x9118
    90ee:	4d 4e       	mov.b	r14,	r13	;
    90f0:	0f 4d       	mov	r13,	r15	;
    90f2:	3f 50 bf ff 	add	#-65,	r15	;#0xffbf
    90f6:	3f 90 1a 00 	cmp	#26,	r15	;#0x001a
    90fa:	02 2c       	jc	$+6      	;abs 0x9100
    90fc:	3d 50 20 00 	add	#32,	r13	;#0x0020
    9100:	5e 4a ff ff 	mov.b	-1(r10),r14	;
    9104:	0f 4e       	mov	r14,	r15	;
    9106:	3f 50 bf ff 	add	#-65,	r15	;#0xffbf
    910a:	3f 90 1a 00 	cmp	#26,	r15	;#0x001a
    910e:	02 2c       	jc	$+6      	;abs 0x9114
    9110:	3e 50 20 00 	add	#32,	r14	;#0x0020
    9114:	0f 4d       	mov	r13,	r15	;
    9116:	0f 8e       	sub	r14,	r15	;
    9118:	3a 41       	pop	r10		;
    911a:	3b 41       	pop	r11		;
    911c:	30 41       	ret			

0000911e <strncasecmp>:
    911e:	0b 12       	push	r11		;
    9120:	0a 12       	push	r10		;
    9122:	09 12       	push	r9		;
    9124:	08 12       	push	r8		;
    9126:	07 12       	push	r7		;
    9128:	0d 93       	cmp	#0,	r13	;r3 As==00
    912a:	1e 24       	jz	$+62     	;abs 0x9168
    912c:	0b 4f       	mov	r15,	r11	;
    912e:	0a 4e       	mov	r14,	r10	;
    9130:	68 4b       	mov.b	@r11,	r8	;
    9132:	4e 48       	mov.b	r8,	r14	;
    9134:	09 4e       	mov	r14,	r9	;
    9136:	07 4e       	mov	r14,	r7	;
    9138:	37 50 bf ff 	add	#-65,	r7	;#0xffbf
    913c:	37 90 1a 00 	cmp	#26,	r7	;#0x001a
    9140:	02 2c       	jc	$+6      	;abs 0x9146
    9142:	39 50 20 00 	add	#32,	r9	;#0x0020
    9146:	6f 4a       	mov.b	@r10,	r15	;
    9148:	1a 53       	inc	r10		;
    914a:	0c 4f       	mov	r15,	r12	;
    914c:	3f 50 bf ff 	add	#-65,	r15	;#0xffbf
    9150:	3f 90 1a 00 	cmp	#26,	r15	;#0x001a
    9154:	02 2c       	jc	$+6      	;abs 0x915a
    9156:	3c 50 20 00 	add	#32,	r12	;#0x0020
    915a:	09 9c       	cmp	r12,	r9	;
    915c:	07 20       	jnz	$+16     	;abs 0x916c
    915e:	1b 53       	inc	r11		;
    9160:	48 93       	cmp.b	#0,	r8	;r3 As==00
    9162:	02 24       	jz	$+6      	;abs 0x9168
    9164:	3d 53       	add	#-1,	r13	;r3 As==11
    9166:	e4 23       	jnz	$-54     	;abs 0x9130
    9168:	0f 43       	clr	r15		;
    916a:	12 3c       	jmp	$+38     	;abs 0x9190
    916c:	0d 4e       	mov	r14,	r13	;
    916e:	37 90 1a 00 	cmp	#26,	r7	;#0x001a
    9172:	02 2c       	jc	$+6      	;abs 0x9178
    9174:	3d 50 20 00 	add	#32,	r13	;#0x0020
    9178:	5e 4a ff ff 	mov.b	-1(r10),r14	;
    917c:	0f 4e       	mov	r14,	r15	;
    917e:	3f 50 bf ff 	add	#-65,	r15	;#0xffbf
    9182:	3f 90 1a 00 	cmp	#26,	r15	;#0x001a
    9186:	02 2c       	jc	$+6      	;abs 0x918c
    9188:	3e 50 20 00 	add	#32,	r14	;#0x0020
    918c:	0f 4d       	mov	r13,	r15	;
    918e:	0f 8e       	sub	r14,	r15	;
    9190:	37 41       	pop	r7		;
    9192:	38 41       	pop	r8		;
    9194:	39 41       	pop	r9		;
    9196:	3a 41       	pop	r10		;
    9198:	3b 41       	pop	r11		;
    919a:	30 41       	ret			

0000919c <strtok_r>:
    919c:	0b 12       	push	r11		;
    919e:	0a 12       	push	r10		;
    91a0:	09 12       	push	r9		;
    91a2:	0b 4f       	mov	r15,	r11	;
    91a4:	0a 4e       	mov	r14,	r10	;
    91a6:	0f 93       	cmp	#0,	r15	;r3 As==00
    91a8:	2e 24       	jz	$+94     	;abs 0x9206
    91aa:	6e 4b       	mov.b	@r11,	r14	;
    91ac:	8e 11       	sxt	r14		;
    91ae:	1b 53       	inc	r11		;
    91b0:	0f 4a       	mov	r10,	r15	;
    91b2:	6c 4a       	mov.b	@r10,	r12	;
    91b4:	8c 11       	sxt	r12		;
    91b6:	1f 53       	inc	r15		;
    91b8:	0c 93       	cmp	#0,	r12	;r3 As==00
    91ba:	07 24       	jz	$+16     	;abs 0x91ca
    91bc:	0e 9c       	cmp	r12,	r14	;
    91be:	f5 27       	jz	$-20     	;abs 0x91aa
    91c0:	6c 4f       	mov.b	@r15,	r12	;
    91c2:	8c 11       	sxt	r12		;
    91c4:	1f 53       	inc	r15		;
    91c6:	0c 93       	cmp	#0,	r12	;r3 As==00
    91c8:	f9 23       	jnz	$-12     	;abs 0x91bc
    91ca:	0e 93       	cmp	#0,	r14	;r3 As==00
    91cc:	04 20       	jnz	$+10     	;abs 0x91d6
    91ce:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    91d2:	0f 43       	clr	r15		;
    91d4:	1c 3c       	jmp	$+58     	;abs 0x920e
    91d6:	09 4b       	mov	r11,	r9	;
    91d8:	39 53       	add	#-1,	r9	;r3 As==11
    91da:	6e 4b       	mov.b	@r11,	r14	;
    91dc:	8e 11       	sxt	r14		;
    91de:	1b 53       	inc	r11		;
    91e0:	0f 4a       	mov	r10,	r15	;
    91e2:	6c 4f       	mov.b	@r15,	r12	;
    91e4:	8c 11       	sxt	r12		;
    91e6:	1f 53       	inc	r15		;
    91e8:	0c 9e       	cmp	r14,	r12	;
    91ea:	03 24       	jz	$+8      	;abs 0x91f2
    91ec:	0c 93       	cmp	#0,	r12	;r3 As==00
    91ee:	f9 23       	jnz	$-12     	;abs 0x91e2
    91f0:	f4 3f       	jmp	$-22     	;abs 0x91da
    91f2:	0c 93       	cmp	#0,	r12	;r3 As==00
    91f4:	05 20       	jnz	$+12     	;abs 0x9200
    91f6:	0b 43       	clr	r11		;
    91f8:	8d 4b 00 00 	mov	r11,	0(r13)	;
    91fc:	0f 49       	mov	r9,	r15	;
    91fe:	07 3c       	jmp	$+16     	;abs 0x920e
    9200:	cb 43 ff ff 	mov.b	#0,	-1(r11)	;r3 As==00
    9204:	f9 3f       	jmp	$-12     	;abs 0x91f8
    9206:	2b 4d       	mov	@r13,	r11	;
    9208:	0b 93       	cmp	#0,	r11	;r3 As==00
    920a:	cf 23       	jnz	$-96     	;abs 0x91aa
    920c:	e2 3f       	jmp	$-58     	;abs 0x91d2
    920e:	39 41       	pop	r9		;
    9210:	3a 41       	pop	r10		;
    9212:	3b 41       	pop	r11		;
    9214:	30 41       	ret			

00009216 <strtok>:
    9216:	3d 40 66 02 	mov	#614,	r13	;#0x0266
    921a:	b0 12 9c 91 	call	#-28260	;#0x919c
    921e:	30 41       	ret			

00009220 <__stop_progExec__>:
    9220:	02 df       	bis	r15,	r2	;
    9222:	fe 3f       	jmp	$-2      	;abs 0x9220

00009224 <__divmodsi4>:
    9224:	08 43       	clr	r8		;
    9226:	3d b0 00 80 	bit	#-32768,r13	;#0x8000
    922a:	05 24       	jz	$+12     	;abs 0x9236
    922c:	3d e3       	inv	r13		;
    922e:	3c e3       	inv	r12		;
    9230:	1c 53       	inc	r12		;
    9232:	0d 63       	adc	r13		;
    9234:	28 d2       	bis	#4,	r8	;r2 As==10
    9236:	3b b0 00 80 	bit	#-32768,r11	;#0x8000
    923a:	05 24       	jz	$+12     	;abs 0x9246
    923c:	3b e3       	inv	r11		;
    923e:	3a e3       	inv	r10		;
    9240:	1a 53       	inc	r10		;
    9242:	0b 63       	adc	r11		;
    9244:	38 d2       	bis	#8,	r8	;r2 As==11
    9246:	b0 12 6e 92 	call	#-28050	;#0x926e
    924a:	08 10       	rrc	r8		;
    924c:	28 b2       	bit	#4,	r8	;r2 As==10
    924e:	08 24       	jz	$+18     	;abs 0x9260
    9250:	3e e3       	inv	r14		;
    9252:	3f e3       	inv	r15		;
    9254:	1e 53       	inc	r14		;
    9256:	0f 63       	adc	r15		;
    9258:	3c e3       	inv	r12		;
    925a:	3d e3       	inv	r13		;
    925c:	1c 53       	inc	r12		;
    925e:	0d 63       	adc	r13		;
    9260:	38 b2       	bit	#8,	r8	;r2 As==11
    9262:	04 24       	jz	$+10     	;abs 0x926c
    9264:	3c e3       	inv	r12		;
    9266:	3d e3       	inv	r13		;
    9268:	1c 53       	inc	r12		;
    926a:	0d 63       	adc	r13		;
    926c:	30 41       	ret			

0000926e <__udivmodsi4>:
    926e:	0f ef       	xor	r15,	r15	;
    9270:	0e ee       	xor	r14,	r14	;
    9272:	39 40 21 00 	mov	#33,	r9	;#0x0021
    9276:	0a 3c       	jmp	$+22     	;abs 0x928c
    9278:	08 10       	rrc	r8		;
    927a:	0e 6e       	rlc	r14		;
    927c:	0f 6f       	rlc	r15		;
    927e:	0f 9b       	cmp	r11,	r15	;
    9280:	05 28       	jnc	$+12     	;abs 0x928c
    9282:	02 20       	jnz	$+6      	;abs 0x9288
    9284:	0e 9a       	cmp	r10,	r14	;
    9286:	02 28       	jnc	$+6      	;abs 0x928c
    9288:	0e 8a       	sub	r10,	r14	;
    928a:	0f 7b       	subc	r11,	r15	;
    928c:	0c 6c       	rlc	r12		;
    928e:	0d 6d       	rlc	r13		;
    9290:	08 68       	rlc	r8		;
    9292:	19 83       	dec	r9		;
    9294:	f1 23       	jnz	$-28     	;abs 0x9278
    9296:	30 41       	ret			

00009298 <__umulsi3hw>:
    9298:	82 4c 30 01 	mov	r12,	&0x0130	;
    929c:	82 4a 38 01 	mov	r10,	&0x0138	;
    92a0:	82 4c 34 01 	mov	r12,	&0x0134	;
    92a4:	1e 42 3a 01 	mov	&0x013a,r14	;0x013a
    92a8:	92 42 3c 01 	mov	&0x013c,&0x013a	;0x013c
    92ac:	3a 01 
    92ae:	82 4b 38 01 	mov	r11,	&0x0138	;
    92b2:	82 4d 34 01 	mov	r13,	&0x0134	;
    92b6:	82 4a 38 01 	mov	r10,	&0x0138	;
    92ba:	1f 42 3a 01 	mov	&0x013a,r15	;0x013a
    92be:	30 41       	ret			
Disassembly of section .vectors:

0000ffe0 <InterruptVectors>:
    ffe0:	3a 11 3a 11 3a 11 3a 11 3a 11 3a 11 84 33 3a 11     :.:.:.:.:.:..3:.
    fff0:	3a 11 3a 11 3a 11 3a 11 3a 11 3a 11 3a 11 00 11     :.:.:.:.:.:.:...
